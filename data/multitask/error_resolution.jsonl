{"id": "5e523bc1-87aa-486c-9752-2958a8f48f83", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"age": "int64", "name": "string"}}}}, "input": {"broken_code": "table.filter(table.age > '18')", "error": "TypeError: '>' not supported between 'int64' and 'str'", "context_info": "age column is int64 type"}, "target": {"fixed_code": "table.filter(table.age > 18)", "explanation": "Removed quotes from 18 to compare as integer instead of string"}, "meta": {"template": "type_errors", "variation": "string_to_int_comparison", "difficulty": "easy", "features": ["type_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "8e0fd37c-812d-488a-9577-8093ba888ca2", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"category": "string", "name": "string", "amount": "float64"}}}}, "input": {"broken_code": "table.group_by('category').agg(total=table.name.sum())", "error": "AttributeError: 'StringColumn' object has no attribute 'sum'", "context_info": "Cannot sum string columns"}, "target": {"fixed_code": "table.group_by('category').agg(count=table.name.count())", "explanation": "Changed sum() to count() since name is a string column"}, "meta": {"template": "type_errors", "variation": "wrong_aggregation_type", "difficulty": "easy", "features": ["type_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "c391e9ab-e176-46dd-aaf9-e9251bd8775d", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"is_active": "boolean", "age": "int64"}}}}, "input": {"broken_code": "table.filter(table.is_active && table.age > 18)", "error": "SyntaxError: invalid syntax", "context_info": "Python uses & for boolean AND, not &&"}, "target": {"fixed_code": "table.filter(table.is_active & (table.age > 18))", "explanation": "Changed && to & (Python's bitwise AND for boolean operations) and added parentheses"}, "meta": {"template": "type_errors", "variation": "boolean_operator_typo", "difficulty": "easy", "features": ["type_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "141203dc-aaa7-4941-9b63-f88a63a84d37", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"status": "string", "user_id": "int64"}}}}, "input": {"broken_code": "table.filter(table.status = 'active')", "error": "SyntaxError: invalid syntax", "context_info": "Use == for comparison, not ="}, "target": {"fixed_code": "table.filter(table.status == 'active')", "explanation": "Changed = to == for equality comparison"}, "meta": {"template": "type_errors", "variation": "equality_vs_assignment", "difficulty": "easy", "features": ["type_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "93b6aac2-75ad-4064-adc2-c824a128cd0a", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"amount": "float64", "is_active": "boolean"}}}}, "input": {"broken_code": "table.filter(table.amount > 100 & table.is_active)", "error": "TypeError: unsupported operand type(s) for &", "context_info": "Need parentheses for operator precedence"}, "target": {"fixed_code": "table.filter((table.amount > 100) & table.is_active)", "explanation": "Added parentheses around comparison to fix operator precedence"}, "meta": {"template": "type_errors", "variation": "missing_parentheses", "difficulty": "easy", "features": ["type_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "436cf358-4c14-4173-b542-12f0980ea9ba", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"events": {"schema": {"user_id": "int64", "event_type": "string"}}}}, "input": {"broken_code": "events.filter(table.user_id == 1)", "error": "NameError: name 'table' is not defined", "context_info": "Should use events, not table"}, "target": {"fixed_code": "events.filter(events.user_id == 1)", "explanation": "Changed table to events to match the table variable name"}, "meta": {"template": "type_errors", "variation": "wrong_column_reference", "difficulty": "easy", "features": ["type_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "271bcbdb-769c-487c-b55c-ba4e3cf28960", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"email": "string", "user_id": "int64"}}}}, "input": {"broken_code": "table.filter(table.email == None)", "error": "TypeError: Cannot compare column with None directly", "context_info": "Use .isnull() or .notnull() for null checks"}, "target": {"fixed_code": "table.filter(table.email.isnull())", "explanation": "Changed == None to .isnull() for proper null comparison"}, "meta": {"template": "type_errors", "variation": "null_comparison", "difficulty": "easy", "features": ["type_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "cb904597-8e32-4e9f-9945-6884c21da8b7", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"created_at": "timestamp", "user_id": "int64"}}}}, "input": {"broken_code": "table.filter(table.created_at > 2024-01-01)", "error": "SyntaxError: invalid syntax", "context_info": "Timestamp literals need quotes"}, "target": {"fixed_code": "table.filter(table.created_at > '2024-01-01')", "explanation": "Added quotes around date string for proper timestamp comparison"}, "meta": {"template": "type_errors", "variation": "timestamp_string_comparison", "difficulty": "easy", "features": ["type_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "3c4aae34-72b8-41dd-a1c0-efee95fa9aad", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"age": "int64", "name": "string"}}}}, "input": {"broken_code": "table.filter(table.age > 18.select('name', 'age')", "error": "SyntaxError: invalid syntax", "context_info": "Missing closing parenthesis"}, "target": {"fixed_code": "table.filter(table.age > 18).select('name', 'age')", "explanation": "Added missing closing parenthesis after filter condition"}, "meta": {"template": "syntax_errors", "variation": "missing_parenthesis", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "4155df1e-55d2-4f43-b489-857cf797cc68", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"category": "string", "amount": "float64"}}}}, "input": {"broken_code": "table.group_by('category')['amount'].sum()", "error": "TypeError: 'GroupBy' object is not subscriptable", "context_info": "Cannot use brackets on group_by result"}, "target": {"fixed_code": "table.group_by('category').agg(total=table.amount.sum())", "explanation": "Changed to proper agg() method instead of bracket notation"}, "meta": {"template": "syntax_errors", "variation": "wrong_method_chaining", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "1d085b63-e327-42a4-b279-164972668d8c", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"status": "string"}}}}, "input": {"broken_code": "table.filter(table.status == active)", "error": "NameError: name 'active' is not defined", "context_info": "String literal needs quotes"}, "target": {"fixed_code": "table.filter(table.status == 'active')", "explanation": "Added quotes around 'active' to make it a string literal"}, "meta": {"template": "syntax_errors", "variation": "incorrect_string_quotes", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "412ab4bd-bdb7-47e6-b08e-f4cc505d8cbf", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"category": "string", "amount": "float64"}}}}, "input": {"broken_code": "table.group_by('category').agg(total=amount.sum())", "error": "NameError: name 'amount' is not defined", "context_info": "Need to reference column through table"}, "target": {"fixed_code": "table.group_by('category').agg(total=table.amount.sum())", "explanation": "Added table. prefix to amount column reference"}, "meta": {"template": "syntax_errors", "variation": "missing_table_reference", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "7a3aa1fb-4ff5-4347-9e45-09060b09d7e5", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"age": "int64", "is_active": "boolean"}}}}, "input": {"broken_code": "table.filter(table.age > 18 & table.is_active)", "error": "TypeError: unsupported operand type(s) for &", "context_info": "Need parentheses for correct operator precedence"}, "target": {"fixed_code": "table.filter((table.age > 18) & table.is_active)", "explanation": "Added parentheses around age comparison for correct precedence"}, "meta": {"template": "syntax_errors", "variation": "wrong_operator_precedence", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "b4b9e4b2-ba76-4487-834b-efbeef7541d4", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"category": "string", "amount": "float64"}}}}, "input": {"broken_code": "table.groupe_by('category').agg(total=table.amount.sum())", "error": "AttributeError: 'Table' object has no attribute 'groupe_by'", "context_info": "Typo in method name"}, "target": {"fixed_code": "table.group_by('category').agg(total=table.amount.sum())", "explanation": "Fixed typo: 'groupe_by' \u2192 'group_by'"}, "meta": {"template": "syntax_errors", "variation": "typo_in_method_name", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "4af51500-b359-45a5-b457-f8b5d90cc7f3", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"category": "string", "amount": "float64"}}}}, "input": {"broken_code": "table.group_by('category').sum('amount')", "error": "TypeError: sum() takes 0 positional arguments but 1 was given", "context_info": "Need to use agg() method"}, "target": {"fixed_code": "table.group_by('category').agg(total=table.amount.sum())", "explanation": "Changed to proper agg() syntax instead of directly calling sum()"}, "meta": {"template": "syntax_errors", "variation": "wrong_aggregation_syntax", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "e80e34c4-ad6c-4d73-af86-041b73b06fa8", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"name": "string", "age": "int64", "email": "string"}}}}, "input": {"broken_code": "table.select('name' 'age', 'email')", "error": "SyntaxError: invalid syntax", "context_info": "Missing comma between arguments"}, "target": {"fixed_code": "table.select('name', 'age', 'email')", "explanation": "Added missing comma between 'name' and 'age'"}, "meta": {"template": "syntax_errors", "variation": "missing_comma_in_select", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "295f8111-9ba2-4a23-95a3-346278bf0d12", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"age": "int64"}}}}, "input": {"broken_code": "table.filter[table.age > 18]", "error": "TypeError: 'method' object is not subscriptable", "context_info": "filter is a method, use parentheses not brackets"}, "target": {"fixed_code": "table.filter(table.age > 18)", "explanation": "Changed brackets to parentheses for method call"}, "meta": {"template": "syntax_errors", "variation": "bracket_vs_parenthesis", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "d5628d5e-9d83-4944-b7b9-5959c5c4ea00", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"orders": {"schema": {"customer_id": "int64"}}, "customers": {"schema": {"customer_id": "int64"}}}}, "input": {"broken_code": "orders.join(customers, 'customer_id')", "error": "TypeError: join() argument must be a boolean expression", "context_info": "Join condition must be a comparison expression"}, "target": {"fixed_code": "orders.join(customers, orders.customer_id == customers.customer_id)", "explanation": "Changed to proper join condition with comparison operator"}, "meta": {"template": "syntax_errors", "variation": "wrong_join_syntax", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "7566bc56-6a1d-49ad-b321-0aa13e6c4004", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"age": "int64", "name": "string"}}}}, "input": {"broken_code": "result = table.filter(table.age > 18)\n  .select('name', 'age')", "error": "IndentationError: unexpected indent", "context_info": "Method chaining should be aligned"}, "target": {"fixed_code": "result = table.filter(table.age > 18).select('name', 'age')", "explanation": "Put method chain on same line or use proper line continuation"}, "meta": {"template": "syntax_errors", "variation": "indentation_error", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
{"id": "32dd6a51-a9d3-4223-9db4-bead2ed49b89", "task": "error_resolution", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nFix the compilation or type error in the provided Ibis code.\nOutput the fixed code and a brief explanation.", "context": {"tables": {"table": {"schema": {"email": "string"}}}}, "input": {"broken_code": "table.filter(not table.email.isnull())", "error": "TypeError: bad operand type for unary ~", "context_info": "Use notnull() instead of not isnull()"}, "target": {"fixed_code": "table.filter(table.email.notnull())", "explanation": "Changed to notnull() method instead of negating isnull()"}, "meta": {"template": "syntax_errors", "variation": "double_negation", "difficulty": "easy", "features": ["syntax_error", "debugging", "error_fix"], "error_type": "unknown"}}
