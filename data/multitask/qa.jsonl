{"id": "d2e63d89-7af0-407c-ae37-5d14418ea751", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I filter rows in Ibis where age is greater than 18?"}, "target": {"answer": "Use the filter() method with a comparison expression.", "code_example": "table.filter(table.age > 18)"}, "meta": {"template": "basic_operations_qa", "variation": "how_to_filter", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "2975fc98-ad99-45c1-a866-4252e2583ed7", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I select specific columns from an Ibis table?"}, "target": {"answer": "Use the select() method or bracket notation with column names.", "code_examples": ["table.select('name', 'age')", "table[['name', 'age']]"]}, "meta": {"template": "basic_operations_qa", "variation": "select_columns", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "fa6125e5-aee9-4027-890b-512f81ed8bd9", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I rename a column in Ibis?"}, "target": {"answer": "Use the relabel() method with a dictionary mapping old names to new names.", "code_example": "table.relabel({'old_name': 'new_name'})"}, "meta": {"template": "basic_operations_qa", "variation": "rename_column", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "4ddf25a5-0701-49c4-86cf-f7bb9714617f", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I sort an Ibis table by a column?"}, "target": {"answer": "Use the order_by() method. Add ibis.desc() for descending order.", "code_examples": ["table.order_by('age')  # ascending", "table.order_by(ibis.desc('age'))  # descending"]}, "meta": {"template": "basic_operations_qa", "variation": "sort_table", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "2669b4b8-819b-41de-b764-ce6f206daa8b", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I get only the first 10 rows from an Ibis table?"}, "target": {"answer": "Use the limit() or head() method.", "code_examples": ["table.limit(10)", "table.head(10)"]}, "meta": {"template": "basic_operations_qa", "variation": "limit_rows", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "86427d3e-bc09-4c4d-91f1-b9086e013456", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I count the number of rows in an Ibis table?"}, "target": {"answer": "Use the count() method.", "code_example": "table.count()"}, "meta": {"template": "basic_operations_qa", "variation": "count_rows", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "1fba62d8-cf72-4d72-8397-357b497687ce", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I get unique values from a column in Ibis?"}, "target": {"answer": "Use the distinct() method.", "code_example": "table.select('category').distinct()"}, "meta": {"template": "basic_operations_qa", "variation": "unique_values", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "1b0766fb-8f36-47b1-aeeb-0b9b06154b84", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I filter out rows where a column is null in Ibis?"}, "target": {"answer": "Use the notnull() method in a filter.", "code_example": "table.filter(table.email.notnull())"}, "meta": {"template": "basic_operations_qa", "variation": "null_check", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "bf9f07ac-4cb3-443d-a270-610b2390d234", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I filter with multiple conditions in Ibis?"}, "target": {"answer": "Use & for AND and | for OR, with parentheses for precedence.", "code_examples": ["table.filter((table.age > 18) & (table.is_active == True))", "table.filter((table.status == 'active') | (table.status == 'pending'))"]}, "meta": {"template": "basic_operations_qa", "variation": "multiple_conditions", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "22b7bfb5-806e-43a7-8ae6-5d4a1b2571ce", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I check if a column exists in an Ibis table?"}, "target": {"answer": "Check if the column name is in the table's schema or columns list.", "code_examples": ["'age' in table.columns", "'age' in table.schema().names"]}, "meta": {"template": "basic_operations_qa", "variation": "column_exists", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "f05fa4a6-fd88-464f-9e30-d1de90481cf1", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I add a new computed column to an Ibis table?"}, "target": {"answer": "Use the mutate() method or bracket assignment.", "code_examples": ["table.mutate(age_plus_one=table.age + 1)", "table['age_plus_one'] = table.age + 1"]}, "meta": {"template": "basic_operations_qa", "variation": "add_column", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "fb8c4ddc-670e-41c5-9af4-1a54dabb70e1", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I remove a column from an Ibis table?"}, "target": {"answer": "Use the drop() method.", "code_example": "table.drop('unwanted_column')"}, "meta": {"template": "basic_operations_qa", "variation": "drop_column", "difficulty": "easy", "features": ["qa", "filtering", "selection", "basics"]}}
{"id": "ce2e9bac-dca9-4a41-9205-d95fe5dc0c97", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I group by a column and sum another column in Ibis?"}, "target": {"answer": "Use the group_by() method followed by agg() with the sum aggregation.", "code_example": "table.group_by('category').agg(total=table.amount.sum())"}, "meta": {"template": "aggregation_qa", "variation": "how_to_groupby", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "f3d4e0e3-e8ab-463b-aabb-eafd16fb1938", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I compute multiple aggregations in a single group_by operation?"}, "target": {"answer": "Pass multiple named aggregations to the agg() method.", "code_examples": ["table.group_by('region').agg(total=table.sales.sum(), avg=table.sales.mean(), count=table.count())"]}, "meta": {"template": "aggregation_qa", "variation": "multiple_aggregations", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "755c3de0-d094-47fd-a665-fc2a4916d8a8", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I count unique values in Ibis?"}, "target": {"answer": "Use the nunique() method on a column within an aggregation.", "code_example": "table.group_by('page').agg(unique_visitors=table.user_id.nunique())"}, "meta": {"template": "aggregation_qa", "variation": "count_distinct", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "45adfae9-129a-4bea-ad1c-485207dc5c64", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I group by multiple columns in Ibis?"}, "target": {"answer": "Pass a list of column names to group_by().", "code_example": "table.group_by(['region', 'category']).agg(total=table.sales.sum())"}, "meta": {"template": "aggregation_qa", "variation": "groupby_multiple_columns", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "bf6f093e-a0a1-4d05-be7b-e2e7c9518fb1", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I filter groups after aggregation (like SQL HAVING)?"}, "target": {"answer": "Apply filter() after the aggregation.", "code_example": "result = table.group_by('customer_id').agg(order_count=table.count())\nresult.filter(result.order_count >= 10)\n"}, "meta": {"template": "aggregation_qa", "variation": "having_clause", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "40e15854-d8ea-4115-a7af-70bda8a42c4d", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I count rows meeting a condition within each group?"}, "target": {"answer": "Use a boolean expression with sum() to count True values.", "code_example": "table.group_by('category').agg(high_value=(table.amount > 1000).sum())"}, "meta": {"template": "aggregation_qa", "variation": "conditional_aggregation", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "df09af11-1780-477f-b0bd-28598abac9b5", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "What aggregation functions are available in Ibis?"}, "target": {"answer": "Common aggregations include sum(), mean(), min(), max(), count(), std(), var(), nunique(), and more.", "code_example": "table.group_by('category').agg(\n    total=table.amount.sum(),\n    average=table.amount.mean(),\n    minimum=table.amount.min(),\n    maximum=table.amount.max(),\n    count=table.count()\n)\n"}, "meta": {"template": "aggregation_qa", "variation": "aggregation_functions", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "8e444894-09d5-4896-8139-84f5e12bfeb5", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I aggregate the entire table without grouping?"}, "target": {"answer": "Use aggregate() or agg() directly without group_by().", "code_examples": ["table.aggregate(total=table.amount.sum())", "table.agg(avg_age=table.age.mean())"]}, "meta": {"template": "aggregation_qa", "variation": "aggregate_without_groupby", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "39a9e44a-7015-425b-b5b7-f8205292a524", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I get the first or last value in each group?"}, "target": {"answer": "Use first() or last() aggregation functions.", "code_example": "table.group_by('customer_id').agg(first_purchase=table.purchase_date.min(), last_purchase=table.purchase_date.max())"}, "meta": {"template": "aggregation_qa", "variation": "first_last_in_group", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "2efa9d01-666c-4713-b3bb-457c5f4b228b", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I calculate standard deviation and variance by group?"}, "target": {"answer": "Use the std() and var() methods.", "code_example": "table.group_by('category').agg(std_price=table.price.std(), var_price=table.price.var())"}, "meta": {"template": "aggregation_qa", "variation": "stddev_variance", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "512eac9d-c990-4fff-aac1-0e8ec5b8028f", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I calculate what percentage each group represents of the total?"}, "target": {"answer": "Compute group totals, then divide by overall total.", "code_example": "grouped = table.group_by('category').agg(group_total=table.sales.sum())\noverall_total = table.sales.sum()\ngrouped.mutate(percentage=grouped.group_total / overall_total * 100)\n"}, "meta": {"template": "aggregation_qa", "variation": "percentage_of_total", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "90240417-2dd8-47f1-86c5-40c902286d5f", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "Should I filter before or after grouping?"}, "target": {"answer": "Filter before grouping (WHERE) to reduce data, filter after grouping (HAVING) to filter aggregated results.", "code_examples": ["table.filter(table.year == 2024).group_by('region').agg(total=table.sales.sum())  # Filter before", "result = table.group_by('region').agg(total=table.sales.sum())\nresult.filter(result.total > 10000)  # Filter after"]}, "meta": {"template": "aggregation_qa", "variation": "filter_before_aggregation", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "b909d252-10a2-4bc7-add1-7aa53cb3f2a0", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "What's the difference between count() and counting rows?"}, "target": {"answer": "count() counts non-null values in a column, while table.count() counts all rows.", "code_examples": ["table.email.count()  # Count non-null emails", "table.count()  # Count all rows"]}, "meta": {"template": "aggregation_qa", "variation": "count_vs_size", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "3517f8d2-8ccb-46d6-aeb1-67a9422748a5", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How are NULL values handled in aggregations?"}, "target": {"answer": "Most aggregations ignore NULL values. sum(), mean(), etc. compute over non-null values only.", "code_example": "table.group_by('category').agg(avg_rating=table.rating.mean())  # NULLs ignored"}, "meta": {"template": "aggregation_qa", "variation": "aggregation_with_null", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "45e59892-016d-4380-ad1c-5a277eec8807", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I calculate the median in Ibis?"}, "target": {"answer": "Use the approx_median() method for approximate median.", "code_example": "table.group_by('category').agg(median_price=table.price.approx_median())"}, "meta": {"template": "aggregation_qa", "variation": "median_calculation", "difficulty": "medium", "features": ["qa", "aggregation", "group_by"]}}
{"id": "e001f4ce-7f36-4d4f-a517-359dfc38ed28", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I join two tables in Ibis?"}, "target": {"answer": "Use the join() method with a join condition.", "code_example": "orders.join(customers, orders.customer_id == customers.customer_id)"}, "meta": {"template": "joins_qa", "variation": "basic_join", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "923aee2d-0c04-4c74-85a0-cfb40f4d2043", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I do a left join in Ibis?"}, "target": {"answer": "Use the left_join() method.", "code_example": "users.left_join(profiles, users.user_id == profiles.user_id)"}, "meta": {"template": "joins_qa", "variation": "left_join", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "abd0f90d-9d23-453e-869e-aeaff7e29ce9", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "What's the difference between join() and left_join()?"}, "target": {"answer": "join() is an inner join (only matching rows), left_join() keeps all rows from the left table.", "code_examples": ["table_a.join(table_b, condition)  # Inner join - only matches", "table_a.left_join(table_b, condition)  # Left join - all from table_a"]}, "meta": {"template": "joins_qa", "variation": "inner_vs_left", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "a02f8b5d-0cca-4509-ad22-1cd39a218ccc", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I do a full outer join in Ibis?"}, "target": {"answer": "Use the outer_join() method.", "code_example": "table_a.outer_join(table_b, table_a.id == table_b.id)"}, "meta": {"template": "joins_qa", "variation": "outer_join", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "4a5e8e2a-cb4c-4567-91d3-8d2530c0221d", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I join on multiple columns?"}, "target": {"answer": "Combine multiple conditions with & operator.", "code_example": "sales_a.join(sales_b, (sales_a.region == sales_b.region) & (sales_a.quarter == sales_b.quarter))"}, "meta": {"template": "joins_qa", "variation": "multiple_join_conditions", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "09fe5e05-8567-49bb-bb65-5eb8e499c4a3", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I find rows in one table that don't exist in another?"}, "target": {"answer": "Use anti_join() or left join with null filter.", "code_examples": ["table_a.anti_join(table_b, table_a.id == table_b.id)", "table_a.left_join(table_b, table_a.id == table_b.id).filter(table_b.id.isnull())"]}, "meta": {"template": "joins_qa", "variation": "anti_join", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "644e956c-d747-4c3a-a977-9a4451fdbe05", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "What is a semi join and when would I use it?"}, "target": {"answer": "Semi join returns rows from left table that have matches in right table, without duplicating or adding right table columns.", "code_example": "products.semi_join(recent_orders, products.product_id == recent_orders.product_id)"}, "meta": {"template": "joins_qa", "variation": "semi_join", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "ecb735c5-935e-4735-9022-e740c7f37185", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I join a table to itself?"}, "target": {"answer": "Relabel one copy of the table and join it to the original.", "code_example": "managers = employees.relabel({'employee_id': 'manager_id', 'name': 'manager_name'})\nemployees.join(managers, employees.manager_id == managers.manager_id)\n"}, "meta": {"template": "joins_qa", "variation": "self_join", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "ef7652f3-7818-40d6-8723-e4bda6937db4", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I join multiple tables together?"}, "target": {"answer": "Chain join methods together.", "code_example": "orders.join(customers, orders.customer_id == customers.customer_id).join(products, orders.product_id == products.product_id)"}, "meta": {"template": "joins_qa", "variation": "chaining_joins", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "48467206-4618-46ef-8b60-99575581c2e3", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How do I do a cartesian product / cross join?"}, "target": {"answer": "Use cross_join() method.", "code_example": "colors.cross_join(sizes)"}, "meta": {"template": "joins_qa", "variation": "cross_join", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "e5ddb394-b0a3-494d-aae7-56947bd48a23", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "What is an asof join and when is it useful?"}, "target": {"answer": "Asof join matches on nearest key (useful for time-series). Joins based on closest preceding timestamp.", "code_example": "trades.asof_join(quotes, 'timestamp', predicates=trades.symbol == quotes.symbol)"}, "meta": {"template": "joins_qa", "variation": "asof_join", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "5f8fa943-15b7-4dda-b539-a11020d206e2", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "What happens when joined tables have columns with the same name?"}, "target": {"answer": "Both columns are kept. Access them through table prefixes or use relabel() to rename.", "code_example": "# Relabel before joining to avoid conflicts\ncustomers_renamed = customers.relabel({'id': 'customer_id'})\norders.join(customers_renamed, ...)\n"}, "meta": {"template": "joins_qa", "variation": "join_column_conflict", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "378b0bae-8495-4c83-b6f9-aaf0f06562f4", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "Can I filter before or after joining?"}, "target": {"answer": "Yes, you can filter before joining (more efficient) or after joining.", "code_examples": ["filtered_orders.join(customers, ...)  # Filter first", "orders.join(customers, ...).filter(...)  # Filter after"]}, "meta": {"template": "joins_qa", "variation": "join_with_filter", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "c3150a19-f196-45ae-b9f0-99578e4178dd", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How can I make joins faster?"}, "target": {"answer": "Filter before joining to reduce data size, ensure join keys are indexed in your backend.", "code_example": "orders.filter(orders.date >= '2024-01-01').join(customers, ...)  # Reduce data first"}, "meta": {"template": "joins_qa", "variation": "join_performance", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
{"id": "fca82527-c3f3-4b5e-9f0c-f753972a139e", "task": "qa", "system_prompt": "You are an expert in Ibis, a Python library for data manipulation.\nAnswer questions about Ibis clearly and concisely with code examples when helpful.", "input": {"question": "How are NULL values handled in joins?"}, "target": {"answer": "NULLs don't match in joins (NULL != NULL). Rows with NULL join keys won't match.", "code_example": "# NULL values in join columns won't create matches"}, "meta": {"template": "joins_qa", "variation": "null_in_joins", "difficulty": "medium", "features": ["qa", "joins", "merge"]}}
