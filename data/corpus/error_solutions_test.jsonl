{"error_type": "com.IbisInputError", "error_message": "At least one selector or `before` or `after` must be provided", "context": "# Code from lines 5081 to 5083", "solution": "Handle com.IbisInputError by checking the conditions", "source": "ibis/expr/types/relations.py"}
{"error_type": "IbisInputError", "error_message": "following start point must be non-negative", "context": "# Code from lines 274 to 274", "solution": "Handle IbisInputError by checking the conditions", "source": "ibis/expr/builders.py"}
{"error_type": "TypeError", "error_message": "`on` must be a string or a ValueExpr", "context": "# Code from lines 318 to 318", "solution": "Handle TypeError by checking the conditions", "source": "ibis/expr/types/joins.py"}
{"error_type": "ValueError", "error_message": "Must specify either interval value or components, but not both", "context": "# Code from lines 1083 to 1085", "solution": "Handle ValueError by checking the conditions", "source": "ibis/expr/types/temporal.py"}
{"error_type": "AssertionError", "error_message": "must not be called", "context": "# Code from lines 289 to 289", "solution": "Handle AssertionError by checking the conditions", "source": "ibis/common/tests/test_graph.py"}
{"error_type": "com.IbisInputError", "error_message": "You must pass at least one predicate to filter", "context": "# Code from lines 2913 to 2913", "solution": "Handle com.IbisInputError by checking the conditions", "source": "ibis/expr/types/relations.py"}
{"error_type": "ValueError", "error_message": "notimpl requires a raises", "context": "# Code from lines 317 to 317", "solution": "Handle ValueError by checking the conditions", "source": "ibis/backends/conftest.py"}
{"error_type": "ValueError", "error_message": "notyet requires a raises", "context": "# Code from lines 331 to 331", "solution": "Handle ValueError by checking the conditions", "source": "ibis/backends/conftest.py"}
{"error_type": "TypeError", "error_message": "Only variables can be used as capture keys", "context": "# Code from lines 355 to 355", "solution": "Handle TypeError by checking the conditions", "source": "ibis/common/patterns.py"}
