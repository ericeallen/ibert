{"name": "test_version", "file": "ibis/tests/test_version.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_version", "code": "# Code from lines 9 to 10"}
{"name": "test_flatten", "file": "ibis/tests/test_util.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_flatten", "code": "# Code from lines 29 to 30"}
{"name": "test_flatten_invalid_input", "file": "ibis/tests/test_util.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_flatten_invalid_input", "code": "# Code from lines 34 to 38"}
{"name": "test_import_object", "file": "ibis/tests/test_util.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_import_object", "code": "# Code from lines 41 to 51"}
{"name": "test_pseudo_hashable", "file": "ibis/tests/test_util.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pseudo_hashable", "code": "# Code from lines 57 to 140"}
{"name": "test_sql_config", "file": "ibis/tests/test_config.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_config", "code": "# Code from lines 9 to 16"}
{"name": "test_missing_backend", "file": "ibis/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_missing_backend", "code": "# Code from lines 32 to 35"}
{"name": "test_multiple_backends", "file": "ibis/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_backends", "code": "# Code from lines 38 to 48"}
{"name": "test_no_import", "file": "ibis/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "module"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_no_import", "code": "# Code from lines 52 to 59"}
{"name": "test_ibis_na_deprecation_warning", "file": "ibis/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ibis_na_deprecation_warning", "code": "# Code from lines 62 to 66"}
{"name": "test_ibis_desc_asc_default", "file": "ibis/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "api_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ibis_desc_asc_default", "code": "# Code from lines 76 to 82"}
{"name": "test_ibis_desc_asc", "file": "ibis/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "api_func"}, {"name": "nulls_first"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ibis_desc_asc", "code": "# Code from lines 94 to 100"}
{"name": "test_null_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_null_dtype", "code": "# Code from lines 14 to 17"}
{"name": "test_boolean_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_boolean_dtype", "code": "# Code from lines 21 to 23"}
{"name": "test_signed_integer_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_signed_integer_dtype", "code": "# Code from lines 27 to 29"}
{"name": "test_unsigned_integer_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_unsigned_integer_dtype", "code": "# Code from lines 33 to 35"}
{"name": "test_floating_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_floating_dtype", "code": "# Code from lines 39 to 41"}
{"name": "test_numeric_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_numeric_dtype", "code": "# Code from lines 45 to 47"}
{"name": "test_numeric_dtypes_nullable", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_numeric_dtypes_nullable", "code": "# Code from lines 51 to 53"}
{"name": "test_numeric_dtypes_non_nullable", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_numeric_dtypes_non_nullable", "code": "# Code from lines 57 to 59"}
{"name": "test_timestamp_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_timestamp_dtype", "code": "# Code from lines 63 to 66"}
{"name": "test_interval_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_interval_dtype", "code": "# Code from lines 70 to 72"}
{"name": "test_temporal_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_temporal_dtype", "code": "# Code from lines 76 to 78"}
{"name": "test_primitive_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_primitive_dtype", "code": "# Code from lines 82 to 84"}
{"name": "test_geospatial_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_geospatial_dtype", "code": "# Code from lines 88 to 90"}
{"name": "test_array_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_array_dtype", "code": "# Code from lines 94 to 97"}
{"name": "test_array_array_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_array_array_dtype", "code": "# Code from lines 101 to 104"}
{"name": "test_map_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_map_dtype", "code": "# Code from lines 108 to 112"}
{"name": "test_struct_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_struct_dtype", "code": "# Code from lines 116 to 119"}
{"name": "test_struct_variadic_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_struct_variadic_dtype", "code": "# Code from lines 123 to 126"}
{"name": "test_variadic_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_variadic_dtype", "code": "# Code from lines 130 to 132"}
{"name": "test_all_dtypes", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_all_dtypes", "code": "# Code from lines 136 to 137"}
{"name": "test_schema", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_schema", "code": "# Code from lines 141 to 145"}
{"name": "test_schema_array_dtype", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_schema_array_dtype", "code": "# Code from lines 149 to 152"}
{"name": "test_primitive_dtypes_to_pandas", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_primitive_dtypes_to_pandas", "code": "# Code from lines 156 to 158"}
{"name": "test_schema_to_pandas", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_schema_to_pandas", "code": "# Code from lines 162 to 165"}
{"name": "test_memtable", "file": "ibis/tests/test_strategies.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "memtable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_memtable", "code": "# Code from lines 169 to 171"}
{"name": "test_examples", "file": "ibis/examples/tests/test_examples.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "example"}, {"name": "example_con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.duckdb", "pytest.mark.backend", "skip_linux_nix"], "is_test": true, "test_name": "test_examples", "code": "# Code from lines 63 to 72"}
{"name": "test_non_example", "file": "ibis/examples/tests/test_examples.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_non_example", "code": "# Code from lines 75 to 78"}
{"name": "test_backend_arg", "file": "ibis/examples/tests/test_examples.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.duckdb", "pytest.mark.backend", "skip_linux_nix"], "is_test": true, "test_name": "test_backend_arg", "code": "# Code from lines 84 to 87"}
{"name": "test_table_name_arg", "file": "ibis/examples/tests/test_examples.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.duckdb", "pytest.mark.backend", "skip_linux_nix"], "is_test": true, "test_name": "test_table_name_arg", "code": "# Code from lines 93 to 97"}
{"name": "test_lazy_singledispatch", "file": "ibis/common/tests/test_dispatch.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lazy_singledispatch", "code": "# Code from lines 9 to 37"}
{"name": "test_lazy_singledispatch_extra_args", "file": "ibis/common/tests/test_dispatch.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lazy_singledispatch_extra_args", "code": "# Code from lines 40 to 55"}
{"name": "test_lazy_singledispatch_lazy", "file": "ibis/common/tests/test_dispatch.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lazy_singledispatch_lazy", "code": "# Code from lines 58 to 68"}
{"name": "test_lazy_singledispatch_lazy_walks_mro", "file": "ibis/common/tests/test_dispatch.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lazy_singledispatch_lazy_walks_mro", "code": "# Code from lines 71 to 94"}
{"name": "test_lazy_singledispatch_abc", "file": "ibis/common/tests/test_dispatch.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lazy_singledispatch_abc", "code": "# Code from lines 97 to 120"}
{"name": "test_pattern_matching", "file": "ibis/common/tests/test_grounds_py310.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_matching", "code": "# Code from lines 36 to 49"}
{"name": "test_generate_node", "file": "ibis/common/tests/test_graph_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "depth"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_generate_node", "code": "# Code from lines 41 to 44"}
{"name": "test_bfs", "file": "ibis/common/tests/test_graph_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bfs", "code": "# Code from lines 47 to 49"}
{"name": "test_dfs", "file": "ibis/common/tests/test_graph_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dfs", "code": "# Code from lines 52 to 54"}
{"name": "test_replace_pattern", "file": "ibis/common/tests/test_graph_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_pattern", "code": "# Code from lines 57 to 60"}
{"name": "test_replace_mapping", "file": "ibis/common/tests/test_graph_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_mapping", "code": "# Code from lines 63 to 66"}
{"name": "test_equality_caching", "file": "ibis/common/tests/test_graph_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_equality_caching", "code": "# Code from lines 69 to 75"}
{"name": "test_evaluate_annotations", "file": "ibis/common/tests/test_typing.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_evaluate_annotations", "code": "# Code from lines 41 to 44"}
{"name": "test_evaluate_annotations_with_self", "file": "ibis/common/tests/test_typing.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_evaluate_annotations_with_self", "code": "# Code from lines 47 to 51"}
{"name": "test_get_type_hints", "file": "ibis/common/tests/test_typing.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_type_hints", "code": "# Code from lines 54 to 72"}
{"name": "test_get_type_params", "file": "ibis/common/tests/test_typing.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_type_params", "code": "# Code from lines 96 to 100"}
{"name": "test_get_bound_typevars", "file": "ibis/common/tests/test_typing.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_bound_typevars", "code": "# Code from lines 103 to 116"}
{"name": "test_default_type_vars", "file": "ibis/common/tests/test_typing.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_default_type_vars", "code": "# Code from lines 119 to 130"}
{"name": "test_sentinel", "file": "ibis/common/tests/test_typing.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sentinel", "code": "# Code from lines 133 to 149"}
{"name": "test_interval_units", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "singular"}, {"name": "plural"}, {"name": "short"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["interval_units"], "is_test": true, "test_name": "test_interval_units", "code": "# Code from lines 39 to 43"}
{"name": "test_interval_unit_coercions", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "singular"}, {"name": "plural"}, {"name": "short"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["interval_units"], "is_test": true, "test_name": "test_interval_unit_coercions", "code": "# Code from lines 47 to 52"}
{"name": "test_interval_unit_aliases", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alias"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval_unit_aliases", "code": "# Code from lines 67 to 69"}
{"name": "test_normalize_timedelta", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "unit"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_timedelta", "code": "# Code from lines 91 to 92"}
{"name": "test_normalize_timedelta_invalid", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_timedelta_invalid", "code": "# Code from lines 110 to 112"}
{"name": "test_interval_unit_compatibility", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_unit_compatibility", "code": "# Code from lines 115 to 120"}
{"name": "test_normalize_timezone", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_timezone", "code": "# Code from lines 135 to 136"}
{"name": "test_normalize_datetime", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_datetime", "code": "# Code from lines 178 to 180"}
{"name": "test_normalize_datetime_pandas", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_datetime_pandas", "code": "# Code from lines 198 to 201"}
{"name": "test_normalize_datetime_with_time", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_normalize_datetime_with_time", "code": "# Code from lines 204 to 223"}
{"name": "test_normalized_datetime_tzname", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalized_datetime_tzname", "code": "# Code from lines 243 to 245"}
{"name": "test_normalized_datetime_tzname_pandas", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_normalized_datetime_tzname_pandas", "code": "# Code from lines 248 to 252"}
{"name": "test_normalized_datetime_tzname_pandas_non_utc", "file": "ibis/common/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_normalized_datetime_tzname_pandas_non_utc", "code": "# Code from lines 255 to 268"}
{"name": "test_immutability_of_patterns", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_immutability_of_patterns", "code": "# Code from lines 111 to 114"}
{"name": "test_nothing", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nothing", "code": "# Code from lines 117 to 120"}
{"name": "test_min", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_min", "code": "# Code from lines 123 to 126"}
{"name": "test_double", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_double", "code": "# Code from lines 129 to 131"}
{"name": "test_any", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_any", "code": "# Code from lines 134 to 138"}
{"name": "test_pattern_factory_wraps_variable_with_capture", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_factory_wraps_variable_with_capture", "code": "# Code from lines 141 to 148"}
{"name": "test_match_on_ellipsis", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_match_on_ellipsis", "code": "# Code from lines 151 to 154"}
{"name": "test_capture", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_capture", "code": "# Code from lines 157 to 165"}
{"name": "test_option", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_option", "code": "# Code from lines 168 to 182"}
{"name": "test_check", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_check", "code": "# Code from lines 185 to 193"}
{"name": "test_equal_to", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_equal_to", "code": "# Code from lines 196 to 207"}
{"name": "test_type_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_type_of", "code": "# Code from lines 210 to 215"}
{"name": "test_subclass_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subclass_of", "code": "# Code from lines 218 to 223"}
{"name": "test_instance_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_instance_of", "code": "# Code from lines 226 to 241"}
{"name": "test_lazy_instance_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lazy_instance_of", "code": "# Code from lines 244 to 247"}
{"name": "test_generic_instance_of_with_covariant_typevar", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_generic_instance_of_with_covariant_typevar", "code": "# Code from lines 261 to 269"}
{"name": "test_generic_instance_of_disallow_nested_coercion", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_generic_instance_of_disallow_nested_coercion", "code": "# Code from lines 272 to 284"}
{"name": "test_coerced_to", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_coerced_to", "code": "# Code from lines 287 to 303"}
{"name": "test_generic_coerced_to", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_generic_coerced_to", "code": "# Code from lines 306 to 360"}
{"name": "test_not", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_not", "code": "# Code from lines 363 to 371"}
{"name": "test_any_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_any_of", "code": "# Code from lines 374 to 386"}
{"name": "test_all_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_all_of", "code": "# Code from lines 389 to 406"}
{"name": "test_none_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_none_of", "code": "# Code from lines 409 to 417"}
{"name": "test_length", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_length", "code": "# Code from lines 420 to 447"}
{"name": "test_contains", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_contains", "code": "# Code from lines 450 to 463"}
{"name": "test_isin", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isin", "code": "# Code from lines 466 to 471"}
{"name": "test_sequence_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sequence_of", "code": "# Code from lines 474 to 482"}
{"name": "test_generic_sequence_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_generic_sequence_of", "code": "# Code from lines 485 to 498"}
{"name": "test_list_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_of", "code": "# Code from lines 501 to 508"}
{"name": "test_pattern_sequence", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_sequence", "code": "# Code from lines 511 to 521"}
{"name": "test_mapping_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mapping_of", "code": "# Code from lines 524 to 532"}
{"name": "test_object_pattern", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_object_pattern", "code": "# Code from lines 557 to 562"}
{"name": "test_object_pattern_complex_type", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_object_pattern_complex_type", "code": "# Code from lines 565 to 576"}
{"name": "test_object_pattern_from_instance_of", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_object_pattern_from_instance_of", "code": "# Code from lines 579 to 591"}
{"name": "test_object_pattern_from_coerced_to", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_object_pattern_from_coerced_to", "code": "# Code from lines 594 to 609"}
{"name": "test_object_pattern_matching_order", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_object_pattern_matching_order", "code": "# Code from lines 612 to 633"}
{"name": "test_object_pattern_matching_dictionary_field", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_object_pattern_matching_dictionary_field", "code": "# Code from lines 636 to 653"}
{"name": "test_object_pattern_requires_its_arguments_to_match", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_object_pattern_requires_its_arguments_to_match", "code": "# Code from lines 656 to 672"}
{"name": "test_callable_with", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_callable_with", "code": "# Code from lines 675 to 719"}
{"name": "test_callable_with_default_arguments", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_callable_with_default_arguments", "code": "# Code from lines 722 to 734"}
{"name": "test_pattern_list", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_list", "code": "# Code from lines 737 to 750"}
{"name": "test_pattern_list_from_tuple_typehint", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_list_from_tuple_typehint", "code": "# Code from lines 753 to 770"}
{"name": "test_pattern_list_unpack", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_list_unpack", "code": "# Code from lines 773 to 788"}
{"name": "test_matching", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_matching", "code": "# Code from lines 791 to 810"}
{"name": "test_replace_passes_matched_value_as_underscore", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_passes_matched_value_as_underscore", "code": "# Code from lines 813 to 822"}
{"name": "test_replace_in_nested_object_pattern", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_in_nested_object_pattern", "code": "# Code from lines 825 to 862"}
{"name": "test_replace_decorator", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_decorator", "code": "# Code from lines 865 to 871"}
{"name": "test_replace_using_deferred", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_using_deferred", "code": "# Code from lines 874 to 888"}
{"name": "test_matching_sequence_pattern", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_matching_sequence_pattern", "code": "# Code from lines 891 to 907"}
{"name": "test_matching_sequence_pattern_keeps_original_type", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_matching_sequence_pattern_keeps_original_type", "code": "# Code from lines 910 to 912"}
{"name": "test_matching_sequence_with_captures", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_matching_sequence_with_captures", "code": "# Code from lines 915 to 936"}
{"name": "test_matching_sequence_remaining", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_matching_sequence_remaining", "code": "# Code from lines 939 to 952"}
{"name": "test_matching_sequence_complicated", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_matching_sequence_complicated", "code": "# Code from lines 955 to 977"}
{"name": "test_pattern_sequence_with_nested_some", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_sequence_with_nested_some", "code": "# Code from lines 980 to 1024"}
{"name": "test_various_patterns", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pattern"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_various_patterns", "code": "# Code from lines 1057 to 1058"}
{"name": "test_various_not_matching_patterns", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pattern"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_various_not_matching_patterns", "code": "# Code from lines 1081 to 1082"}
{"name": "test_pattern_decorator", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_decorator", "code": "# Code from lines 1092 to 1094"}
{"name": "test_pattern_from_typehint", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "annot"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_pattern_from_typehint", "code": "# Code from lines 1128 to 1129"}
{"name": "test_pattern_from_typehint_uniontype", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.skipif"], "is_test": true, "test_name": "test_pattern_from_typehint_uniontype", "code": "# Code from lines 1133 to 1137"}
{"name": "test_pattern_from_typehint_disable_coercion", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_from_typehint_disable_coercion", "code": "# Code from lines 1140 to 1150"}
{"name": "test_pattern_from_coercible_protocol", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_from_coercible_protocol", "code": "# Code from lines 1186 to 1189"}
{"name": "test_pattern_coercible_bypass_coercion", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_coercible_bypass_coercion", "code": "# Code from lines 1192 to 1198"}
{"name": "test_pattern_coercible_checks_type", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_coercible_checks_type", "code": "# Code from lines 1201 to 1208"}
{"name": "test_pattern_coercible_sequence_type", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_coercible_sequence_type", "code": "# Code from lines 1217 to 1234"}
{"name": "test_pattern_function", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_function", "code": "# Code from lines 1237 to 1276"}
{"name": "test_node", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node", "code": "# Code from lines 1334 to 1340"}
{"name": "test_order_does_not_matter", "file": "ibis/common/tests/test_patterns.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "p1"}, {"name": "p2"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_order_does_not_matter", "code": "# Code from lines 1353 to 1354"}
{"name": "test_classes_are_based_on_abstract", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_classes_are_based_on_abstract", "code": "# Code from lines 22 to 26"}
{"name": "test_abstract", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_abstract", "code": "# Code from lines 29 to 58"}
{"name": "test_immutable", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_immutable", "code": "# Code from lines 61 to 78"}
{"name": "test_comparable_basic", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_comparable_basic", "code": "# Code from lines 119 to 127"}
{"name": "test_comparable_caching", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "cache"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_comparable_caching", "code": "# Code from lines 130 to 178"}
{"name": "test_comparable_garbage_collection", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "cache"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_comparable_garbage_collection", "code": "# Code from lines 181 to 209"}
{"name": "test_comparable_cache_reuse", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "cache"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_comparable_cache_reuse", "code": "# Code from lines 212 to 238"}
{"name": "test_singleton_basics", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_singleton_basics", "code": "# Code from lines 253 to 260"}
{"name": "test_singleton_lifetime", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_singleton_lifetime", "code": "# Code from lines 263 to 268"}
{"name": "test_singleton_with_argument", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_singleton_with_argument", "code": "# Code from lines 271 to 285"}
{"name": "test_final", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_final", "code": "# Code from lines 288 to 295"}
{"name": "test_slotted", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_slotted", "code": "# Code from lines 302 to 321"}
{"name": "test_slotted_inheritance", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_slotted_inheritance", "code": "# Code from lines 328 to 347"}
{"name": "test_frozen_slotted", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_frozen_slotted", "code": "# Code from lines 358 to 380"}
{"name": "test_frozen_slotted_inheritance", "file": "ibis/common/tests/test_bases.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_frozen_slotted_inheritance", "code": "# Code from lines 383 to 387"}
{"name": "test_normalize_decimal", "file": "ibis/common/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "precision"}, {"name": "scale"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_decimal", "code": "# Code from lines 31 to 32"}
{"name": "test_normalize_failing", "file": "ibis/common/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "precision"}, {"name": "scale"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_failing", "code": "# Code from lines 51 to 53"}
{"name": "test_normalize_decimal_dont_truncate_precision", "file": "ibis/common/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_normalize_decimal_dont_truncate_precision", "code": "# Code from lines 56 to 78"}
{"name": "test_argument_factory", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_argument_factory", "code": "# Code from lines 33 to 41"}
{"name": "test_attribute_factory", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_attribute_factory", "code": "# Code from lines 44 to 55"}
{"name": "test_annotations_are_immutable", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotations_are_immutable", "code": "# Code from lines 58 to 69"}
{"name": "test_annotations_are_not_hashable", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotations_are_not_hashable", "code": "# Code from lines 72 to 80"}
{"name": "test_default_argument", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_default_argument", "code": "# Code from lines 83 to 85"}
{"name": "test_optional_argument", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "default"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_optional_argument", "code": "# Code from lines 92 to 94"}
{"name": "test_valid_optional", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "argument"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_valid_optional", "code": "# Code from lines 109 to 110"}
{"name": "test_attribute_default_value", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_attribute_default_value", "code": "# Code from lines 113 to 128"}
{"name": "test_parameter", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parameter", "code": "# Code from lines 131 to 149"}
{"name": "test_signature", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_signature", "code": "# Code from lines 152 to 171"}
{"name": "test_signature_from_callable", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_signature_from_callable", "code": "# Code from lines 174 to 185"}
{"name": "test_signature_from_callable_with_varargs", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_signature_from_callable_with_varargs", "code": "# Code from lines 188 to 212"}
{"name": "test_signature_from_callable_with_positional_only_arguments", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_signature_from_callable_with_positional_only_arguments", "code": "# Code from lines 215 to 231"}
{"name": "test_signature_from_callable_with_keyword_only_arguments", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_signature_from_callable_with_keyword_only_arguments", "code": "# Code from lines 234 to 262"}
{"name": "test_signature_unbind", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_signature_unbind", "code": "# Code from lines 265 to 280"}
{"name": "test_signature_unbind_with_empty_variadic", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "d"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_signature_unbind_with_empty_variadic", "code": "# Code from lines 297 to 306"}
{"name": "test_annotated_function", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function", "code": "# Code from lines 309 to 326"}
{"name": "test_annotated_function_with_type_annotations", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_with_type_annotations", "code": "# Code from lines 329 to 346"}
{"name": "test_annotated_function_with_return_type_annotation", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_with_return_type_annotation", "code": "# Code from lines 349 to 360"}
{"name": "test_annotated_function_with_keyword_overrides", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_with_keyword_overrides", "code": "# Code from lines 363 to 371"}
{"name": "test_annotated_function_with_list_overrides", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_with_list_overrides", "code": "# Code from lines 374 to 380"}
{"name": "test_annotated_function_with_list_overrides_and_return_override", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_with_list_overrides_and_return_override", "code": "# Code from lines 383 to 391"}
{"name": "test_annotated_function_with_complex_type_annotations", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_with_complex_type_annotations", "code": "# Code from lines 410 to 423"}
{"name": "test_annotated_function_without_annotations", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_without_annotations", "code": "# Code from lines 426 to 432"}
{"name": "test_annotated_function_without_decoration", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_without_decoration", "code": "# Code from lines 435 to 444"}
{"name": "test_annotated_function_with_varargs", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_with_varargs", "code": "# Code from lines 447 to 456"}
{"name": "test_annotated_function_with_varkwargs", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotated_function_with_varkwargs", "code": "# Code from lines 459 to 468"}
{"name": "test_multiple_validation_failures", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_validation_failures", "code": "# Code from lines 471 to 478"}
{"name": "test_pickle", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle", "code": "# Code from lines 481 to 483"}
{"name": "test_cloudpickle", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cloudpickle", "code": "# Code from lines 486 to 489"}
{"name": "test_ok", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "a", "type": "int"}, {"name": "b", "type": "int"}, {"name": "c", "type": "int"}], "returns": "int", "has_kwargs": false, "has_varargs": false}, "decorators": ["annotated"], "is_test": true, "test_name": "test_ok", "code": "# Code from lines 351 to 352"}
{"name": "test_wrong", "file": "ibis/common/tests/test_annotations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "a", "type": "int"}, {"name": "b", "type": "int"}, {"name": "c", "type": "int"}], "returns": "int", "has_kwargs": false, "has_varargs": false}, "decorators": ["annotated"], "is_test": true, "test_name": "test_wrong", "code": "# Code from lines 355 to 356"}
{"name": "test_annotable", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable", "code": "# Code from lines 225 to 264"}
{"name": "test_annotable_with_bound_typevars_properly_coerce_values", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_with_bound_typevars_properly_coerce_values", "code": "# Code from lines 267 to 274"}
{"name": "test_annotable_with_additional_attributes", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_with_additional_attributes", "code": "# Code from lines 277 to 287"}
{"name": "test_annotable_is_mutable_by_default", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_is_mutable_by_default", "code": "# Code from lines 290 to 307"}
{"name": "test_annotable_with_type_annotations", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_with_type_annotations", "code": "# Code from lines 310 to 324"}
{"name": "test_annotable_with_self_typehint", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_with_self_typehint", "code": "# Code from lines 331 to 339"}
{"name": "test_annotable_with_recursive_generic_type_annotations", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_with_recursive_generic_type_annotations", "code": "# Code from lines 342 to 373"}
{"name": "test_composition_of_annotable_and_immutable", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_composition_of_annotable_and_immutable", "code": "# Code from lines 376 to 394"}
{"name": "test_composition_of_annotable_and_comparable", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_composition_of_annotable_and_comparable", "code": "# Code from lines 397 to 420"}
{"name": "test_maintain_definition_order", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_maintain_definition_order", "code": "# Code from lines 423 to 430"}
{"name": "test_signature_inheritance", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_signature_inheritance", "code": "# Code from lines 433 to 487"}
{"name": "test_positional_argument_reordering", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_positional_argument_reordering", "code": "# Code from lines 490 to 514"}
{"name": "test_keyword_argument_reordering", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_keyword_argument_reordering", "code": "# Code from lines 517 to 536"}
{"name": "test_variadic_argument_reordering", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_variadic_argument_reordering", "code": "# Code from lines 539 to 568"}
{"name": "test_variadic_keyword_argument_reordering", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_variadic_keyword_argument_reordering", "code": "# Code from lines 571 to 600"}
{"name": "test_variadic_argument", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_variadic_argument", "code": "# Code from lines 603 to 611"}
{"name": "test_variadic_keyword_argument", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_variadic_keyword_argument", "code": "# Code from lines 614 to 622"}
{"name": "test_copy_with_variadic_argument", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_copy_with_variadic_argument", "code": "# Code from lines 625 to 644"}
{"name": "test_concrete_copy_with_unknown_argument_raise", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_concrete_copy_with_unknown_argument_raise", "code": "# Code from lines 647 to 657"}
{"name": "test_concrete_pickling_variadic_arguments", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_concrete_pickling_variadic_arguments", "code": "# Code from lines 660 to 672"}
{"name": "test_dont_copy_default_argument", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dont_copy_default_argument", "code": "# Code from lines 675 to 682"}
{"name": "test_copy_mutable_with_default_attribute", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_copy_mutable_with_default_attribute", "code": "# Code from lines 685 to 713"}
{"name": "test_slots_are_inherited_and_overridable", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_slots_are_inherited_and_overridable", "code": "# Code from lines 716 to 734"}
{"name": "test_multiple_inheritance", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_inheritance", "code": "# Code from lines 737 to 771"}
{"name": "test_pickling_support", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "obj"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_pickling_support", "code": "# Code from lines 781 to 782"}
{"name": "test_multiple_inheritance_argument_order", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_inheritance_argument_order", "code": "# Code from lines 785 to 798"}
{"name": "test_multiple_inheritance_optional_argument_order", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_inheritance_optional_argument_order", "code": "# Code from lines 801 to 818"}
{"name": "test_immutability", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_immutability", "code": "# Code from lines 821 to 827"}
{"name": "test_annotable_with_dict_slot", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_with_dict_slot", "code": "# Code from lines 849 to 857"}
{"name": "test_annotable_attribute", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_attribute", "code": "# Code from lines 860 to 872"}
{"name": "test_annotable_attribute_init", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_attribute_init", "code": "# Code from lines 875 to 889"}
{"name": "test_annotable_mutability_and_serialization", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_mutability_and_serialization", "code": "# Code from lines 892 to 910"}
{"name": "test_initialized_attribute_basics", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_initialized_attribute_basics", "code": "# Code from lines 913 to 925"}
{"name": "test_initialized_attribute_with_validation", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_initialized_attribute_with_validation", "code": "# Code from lines 928 to 946"}
{"name": "test_initialized_attribute_mixed_with_classvar", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_initialized_attribute_mixed_with_classvar", "code": "# Code from lines 949 to 977"}
{"name": "test_composition_of_annotable_and_singleton", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_composition_of_annotable_and_singleton", "code": "# Code from lines 980 to 999"}
{"name": "test_concrete", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_concrete", "code": "# Code from lines 1002 to 1043"}
{"name": "test_composition_of_concrete_and_singleton", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_composition_of_concrete_and_singleton", "code": "# Code from lines 1046 to 1064"}
{"name": "test_init_subclass_keyword_arguments", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_init_subclass_keyword_arguments", "code": "# Code from lines 1067 to 1076"}
{"name": "test_argument_order_using_optional_annotations", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_argument_order_using_optional_annotations", "code": "# Code from lines 1079 to 1100"}
{"name": "test_annotable_with_optional_coercible_typehint", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_annotable_with_optional_coercible_typehint", "code": "# Code from lines 1103 to 1110"}
{"name": "test_error_message", "file": "ibis/common/tests/test_grounds.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_error_message", "code": "# Code from lines 1113 to 1131"}
{"name": "test_builder_just", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder_just", "code": "# Code from lines 33 to 45"}
{"name": "test_builder_just_unhashable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builder_just_unhashable", "code": "# Code from lines 56 to 59"}
{"name": "test_builder_variable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder_variable", "code": "# Code from lines 62 to 65"}
{"name": "test_builder_factory", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder_factory", "code": "# Code from lines 68 to 78"}
{"name": "test_builder_call", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder_call", "code": "# Code from lines 81 to 95"}
{"name": "test_builder_attr", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder_attr", "code": "# Code from lines 98 to 117"}
{"name": "test_builder_item", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder_item", "code": "# Code from lines 120 to 131"}
{"name": "test_builder_mapping", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder_mapping", "code": "# Code from lines 134 to 142"}
{"name": "test_builder", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder", "code": "# Code from lines 145 to 163"}
{"name": "test_builder_objects_are_hashable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builder_objects_are_hashable", "code": "# Code from lines 166 to 179"}
{"name": "test_deferred_builds", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_builds", "code": "# Code from lines 194 to 195"}
{"name": "test_deferred_supports_string_arguments", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_supports_string_arguments", "code": "# Code from lines 198 to 203"}
{"name": "test_deferred_object_are_not_hashable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_object_are_not_hashable", "code": "# Code from lines 206 to 209"}
{"name": "test_deferred_const", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_const", "code": "# Code from lines 212 to 217"}
{"name": "test_deferred_variable_getattr", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_variable_getattr", "code": "# Code from lines 220 to 228"}
{"name": "test_deferred_is_pickleable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "func"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_is_pickleable", "code": "# Code from lines 343 to 351"}
{"name": "test_deferred_getitem", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_getitem", "code": "# Code from lines 354 to 357"}
{"name": "test_deferred_getattr", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_getattr", "code": "# Code from lines 360 to 363"}
{"name": "test_deferred_call", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_call", "code": "# Code from lines 366 to 380"}
{"name": "test_deferred_method", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_method", "code": "# Code from lines 383 to 387"}
{"name": "test_deferred_method_with_args", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_method_with_args", "code": "# Code from lines 390 to 399"}
{"name": "test_deferred_method_with_kwargs", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_method_with_kwargs", "code": "# Code from lines 402 to 411"}
{"name": "test_deferred_apply", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_apply", "code": "# Code from lines 414 to 424"}
{"name": "test_deferred_binary_operations", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "symbol"}, {"name": "op"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_binary_operations", "code": "# Code from lines 444 to 455"}
{"name": "test_deferred_compare_operations", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "sym"}, {"name": "rsym"}, {"name": "op"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_compare_operations", "code": "# Code from lines 469 to 480"}
{"name": "test_deferred_unary_operations", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "symbol"}, {"name": "op"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_unary_operations", "code": "# Code from lines 490 to 495"}
{"name": "test_deferred_is_not_iterable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "obj"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_is_not_iterable", "code": "# Code from lines 499 to 507"}
{"name": "test_deferred_is_not_truthy", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "obj"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_is_not_truthy", "code": "# Code from lines 511 to 515"}
{"name": "test_deferrable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferrable", "code": "# Code from lines 518 to 539"}
{"name": "test_deferrable_repr", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferrable_repr", "code": "# Code from lines 542 to 547"}
{"name": "test_deferred_set_raises", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_set_raises", "code": "# Code from lines 550 to 552"}
{"name": "test_deferrable_nested_args", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferrable_nested_args", "code": "# Code from lines 564 to 574"}
{"name": "test_deferred_is_final", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_is_final", "code": "# Code from lines 577 to 581"}
{"name": "test_deferred_is_immutable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_is_immutable", "code": "# Code from lines 584 to 586"}
{"name": "test_deferred_namespace", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_namespace", "code": "# Code from lines 589 to 605"}
{"name": "test_custom_deferred_repr", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_custom_deferred_repr", "code": "# Code from lines 608 to 610"}
{"name": "test_null_deferrable", "file": "ibis/common/tests/test_deferred.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_deferrable", "code": "# Code from lines 613 to 616"}
{"name": "test_iterable", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_iterable", "code": "# Code from lines 24 to 37"}
{"name": "test_reversible", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_reversible", "code": "# Code from lines 40 to 59"}
{"name": "test_iterator", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_iterator", "code": "# Code from lines 62 to 79"}
{"name": "test_sized", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sized", "code": "# Code from lines 82 to 95"}
{"name": "test_container", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_container", "code": "# Code from lines 98 to 112"}
{"name": "test_collection", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_collection", "code": "# Code from lines 115 to 143"}
{"name": "test_sequence", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sequence", "code": "# Code from lines 146 to 178"}
{"name": "test_mapping", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mapping", "code": "# Code from lines 181 to 227"}
{"name": "test_myschema_identical", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_myschema_identical", "code": "# Code from lines 252 to 262"}
{"name": "test_mapset_mapping_api", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mapset_mapping_api", "code": "# Code from lines 265 to 288"}
{"name": "test_mapset_set_api", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mapset_set_api", "code": "# Code from lines 291 to 404"}
{"name": "test_frozendict", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_frozendict", "code": "# Code from lines 407 to 430"}
{"name": "test_frozenordereddict", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_frozenordereddict", "code": "# Code from lines 433 to 465"}
{"name": "test_rewindable_iterator", "file": "ibis/common/tests/test_collections.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rewindable_iterator", "code": "# Code from lines 468 to 496"}
{"name": "test_bfs", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bfs", "code": "# Code from lines 62 to 65"}
{"name": "test_construction", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_construction", "code": "# Code from lines 68 to 69"}
{"name": "test_graph_nodes", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_graph_nodes", "code": "# Code from lines 72 to 74"}
{"name": "test_graph_repr", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_graph_repr", "code": "# Code from lines 77 to 79"}
{"name": "test_dfs", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dfs", "code": "# Code from lines 82 to 85"}
{"name": "test_invert", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invert", "code": "# Code from lines 88 to 96"}
{"name": "test_toposort", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_toposort", "code": "# Code from lines 99 to 102"}
{"name": "test_toposort_cycle_detection", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_toposort_cycle_detection", "code": "# Code from lines 105 to 114"}
{"name": "test_nested_children", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested_children", "code": "# Code from lines 117 to 135"}
{"name": "test_traversals_with_filter", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_traversals_with_filter", "code": "# Code from lines 139 to 144"}
{"name": "test_traversal_with_filtering_out_root", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_traversal_with_filtering_out_root", "code": "# Code from lines 148 to 150"}
{"name": "test_replace_with_filtering_out_root", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_with_filtering_out_root", "code": "# Code from lines 153 to 156"}
{"name": "test_replace_with_mapping", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_with_mapping", "code": "# Code from lines 159 to 170"}
{"name": "test_replace_doesnt_recreate_unchanged_nodes", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "kind"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_replace_doesnt_recreate_unchanged_nodes", "code": "# Code from lines 174 to 200"}
{"name": "test_example", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_example", "code": "# Code from lines 203 to 242"}
{"name": "test_concrete_with_traversable_children", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_concrete_with_traversable_children", "code": "# Code from lines 245 to 281"}
{"name": "test_flatten_collections", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_flatten_collections", "code": "# Code from lines 309 to 323"}
{"name": "test_recursive_lookup", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_recursive_lookup", "code": "# Code from lines 326 to 352"}
{"name": "test_coerce_finder", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_coerce_finder", "code": "# Code from lines 355 to 372"}
{"name": "test_coerce_replacer", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_coerce_replacer", "code": "# Code from lines 375 to 387"}
{"name": "test_node_find_using_type", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node_find_using_type", "code": "# Code from lines 390 to 416"}
{"name": "test_node_find_using_pattern", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node_find_using_pattern", "code": "# Code from lines 419 to 427"}
{"name": "test_node_find_below", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node_find_below", "code": "# Code from lines 430 to 437"}
{"name": "test_node_find_topmost_using_type", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node_find_topmost_using_type", "code": "# Code from lines 440 to 451"}
{"name": "test_node_find_topmost_using_pattern", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node_find_topmost_using_pattern", "code": "# Code from lines 454 to 460"}
{"name": "test_node_find_topmost_dont_traverse_the_same_node_twice", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node_find_topmost_dont_traverse_the_same_node_twice", "code": "# Code from lines 463 to 469"}
{"name": "test_map_clear", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_clear", "code": "# Code from lines 472 to 494"}
{"name": "test_traverse", "file": "ibis/common/tests/test_graph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_traverse", "code": "# Code from lines 497 to 502"}
{"name": "test_concrete_construction", "file": "ibis/common/tests/test_grounds_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_concrete_construction", "code": "# Code from lines 31 to 32"}
{"name": "test_concrete_isinstance", "file": "ibis/common/tests/test_grounds_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_concrete_isinstance", "code": "# Code from lines 35 to 43"}
{"name": "test_disjoint_set", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_disjoint_set", "code": "# Code from lines 17 to 91"}
{"name": "test_enode", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_enode", "code": "# Code from lines 143 to 155"}
{"name": "test_enode_roundtrip", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_enode_roundtrip", "code": "# Code from lines 164 to 172"}
{"name": "test_enode_roundtrip_with_variadic_arg", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_enode_roundtrip_with_variadic_arg", "code": "# Code from lines 180 to 188"}
{"name": "test_enode_roundtrip_with_nested_arg", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_enode_roundtrip_with_nested_arg", "code": "# Code from lines 200 to 208"}
{"name": "test_disjoint_set_with_enode", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_disjoint_set_with_enode", "code": "# Code from lines 229 to 267"}
{"name": "test_pattern", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern", "code": "# Code from lines 270 to 281"}
{"name": "test_pattern_flatten", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_flatten", "code": "# Code from lines 284 to 309"}
{"name": "test_egraph_match_simple", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_match_simple", "code": "# Code from lines 312 to 322"}
{"name": "test_egraph_match_wrong_argnum", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_match_wrong_argnum", "code": "# Code from lines 325 to 350"}
{"name": "test_egraph_match_nested", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_match_nested", "code": "# Code from lines 353 to 371"}
{"name": "test_egraph_apply_nested", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_apply_nested", "code": "# Code from lines 374 to 386"}
{"name": "test_egraph_extract_simple", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_extract_simple", "code": "# Code from lines 389 to 394"}
{"name": "test_egraph_extract_minimum_cost", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_extract_minimum_cost", "code": "# Code from lines 397 to 411"}
{"name": "test_egraph_rewrite_to_variable", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_rewrite_to_variable", "code": "# Code from lines 414 to 421"}
{"name": "test_egraph_rewrite_to_constant_raises", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_rewrite_to_constant_raises", "code": "# Code from lines 424 to 432"}
{"name": "test_egraph_rewrite_to_pattern", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_rewrite_to_pattern", "code": "# Code from lines 435 to 442"}
{"name": "test_egraph_rewrite_dynamic", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_rewrite_dynamic", "code": "# Code from lines 445 to 460"}
{"name": "test_egraph_rewrite_commutative", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_egraph_rewrite_commutative", "code": "# Code from lines 463 to 476"}
{"name": "test_egraph_rewrite", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "node"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_egraph_rewrite", "code": "# Code from lines 483 to 496"}
{"name": "test_math_associate_adds", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_math_associate_adds", "code": "# Code from lines 507 to 518"}
{"name": "test_dynamic_rewrite", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dynamic_rewrite", "code": "# Code from lines 527 to 536"}
{"name": "test_dynamic_condition", "file": "ibis/common/tests/test_egraph.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dynamic_condition", "code": "# Code from lines 539 to 540"}
{"name": "test_decompile_invalid_type", "file": "ibis/expr/tests/test_decompile.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_decompile_invalid_type", "code": "# Code from lines 43 to 46"}
{"name": "test_basic", "file": "ibis/expr/tests/test_decompile.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_basic", "code": "# Code from lines 68 to 78"}
{"name": "test_view", "file": "ibis/expr/tests/test_decompile.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_view", "code": "# Code from lines 81 to 83"}
{"name": "test_distinct", "file": "ibis/expr/tests/test_decompile.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_distinct", "code": "# Code from lines 86 to 88"}
{"name": "test_reduction_methods", "file": "ibis/expr/tests/test_reductions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "fn"}, {"name": "operation"}, {"name": "cond"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_reduction_methods", "code": "# Code from lines 88 to 107"}
{"name": "test_argminmax_deferred", "file": "ibis/expr/tests/test_reductions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "func_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_argminmax_deferred", "code": "# Code from lines 111 to 114"}
{"name": "test_cov_corr_deferred", "file": "ibis/expr/tests/test_reductions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "func_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cov_corr_deferred", "code": "# Code from lines 118 to 121"}
{"name": "test_ordered_aggregations", "file": "ibis/expr/tests/test_reductions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ordered_aggregations", "code": "# Code from lines 125 to 146"}
{"name": "test_ordered_aggregations_no_order", "file": "ibis/expr/tests/test_reductions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ordered_aggregations_no_order", "code": "# Code from lines 150 to 158"}
{"name": "test_collect_distinct", "file": "ibis/expr/tests/test_reductions.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_collect_distinct", "code": "# Code from lines 161 to 177"}
{"name": "test_dereference_project", "file": "ibis/expr/tests/test_dereference.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dereference_project", "code": "# Code from lines 22 to 36"}
{"name": "test_dereference_mapping_self_reference", "file": "ibis/expr/tests/test_dereference.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "column"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dereference_mapping_self_reference", "code": "# Code from lines 40 to 44"}
{"name": "test_simplify_full_reprojection", "file": "ibis/expr/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simplify_full_reprojection", "code": "# Code from lines 18 to 21"}
{"name": "test_simplify_subsequent_field_selections", "file": "ibis/expr/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simplify_subsequent_field_selections", "code": "# Code from lines 24 to 47"}
{"name": "test_simplify_subsequent_value_selections", "file": "ibis/expr/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simplify_subsequent_value_selections", "code": "# Code from lines 50 to 80"}
{"name": "test_simplify_subsequent_filters", "file": "ibis/expr/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simplify_subsequent_filters", "code": "# Code from lines 83 to 87"}
{"name": "test_simplify_project_filter_project", "file": "ibis/expr/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simplify_project_filter_project", "code": "# Code from lines 90 to 104"}
{"name": "test_whole_schema", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_whole_schema", "code": "# Code from lines 17 to 102"}
{"name": "test_schema_from_tuples", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_tuples", "code": "# Code from lines 105 to 122"}
{"name": "test_schema_subset", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_subset", "code": "# Code from lines 125 to 133"}
{"name": "test_empty_schema", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_empty_schema", "code": "# Code from lines 136 to 144"}
{"name": "test_nullable_output", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nullable_output", "code": "# Code from lines 147 to 161"}
{"name": "test_api_accepts_schema_objects", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_api_accepts_schema_objects", "code": "# Code from lines 164 to 167"}
{"name": "test_schema_mapping_api", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_mapping_api", "code": "# Code from lines 170 to 191"}
{"name": "test_schema_equality", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_equality", "code": "# Code from lines 194 to 203"}
{"name": "test_schema_from_annotated_class", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_annotated_class", "code": "# Code from lines 238 to 239"}
{"name": "test_schema_from_namedtuple", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_namedtuple", "code": "# Code from lines 259 to 260"}
{"name": "test_schema_from_dataclass", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_dataclass", "code": "# Code from lines 286 to 287"}
{"name": "test_preferences", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_preferences", "code": "# Code from lines 305 to 309"}
{"name": "test_schema_is_coercible", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_is_coercible", "code": "# Code from lines 316 to 321"}
{"name": "test_schema_set_operations", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_set_operations", "code": "# Code from lines 324 to 352"}
{"name": "test_schema_infer_polars_dataframe", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lazy"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_schema_infer_polars_dataframe", "code": "# Code from lines 356 to 365"}
{"name": "test_schema_from_to_polars_schema", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_to_polars_schema", "code": "# Code from lines 368 to 382"}
{"name": "test_schema_from_to_numpy_dtypes", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_to_numpy_dtypes", "code": "# Code from lines 385 to 401"}
{"name": "test_schema_from_to_pandas_dtypes", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_to_pandas_dtypes", "code": "# Code from lines 404 to 435"}
{"name": "test_null_fields", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_fields", "code": "# Code from lines 438 to 441"}
{"name": "test_to_sqlglot_column_defs", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_sqlglot_column_defs", "code": "# Code from lines 444 to 456"}
{"name": "test_to_sqlglot_column_defs_empty_schema", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_sqlglot_column_defs_empty_schema", "code": "# Code from lines 459 to 462"}
{"name": "test_to_sqlglot_column_defs_create_table_integration", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_sqlglot_column_defs_create_table_integration", "code": "# Code from lines 465 to 477"}
{"name": "test_schema_from_sqlglot", "file": "ibis/expr/tests/test_schema.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_sqlglot", "code": "# Code from lines 480 to 604"}
{"name": "test_parse_sql_basic_projection", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_basic_projection", "code": "# Code from lines 22 to 26"}
{"name": "test_parse_sql_basic_join", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "how"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_sql_basic_join", "code": "# Code from lines 30 to 44"}
{"name": "test_parse_sql_limited_join", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_limited_join", "code": "# Code from lines 47 to 58"}
{"name": "test_parse_sql_multiple_joins", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_multiple_joins", "code": "# Code from lines 61 to 71"}
{"name": "test_parse_sql_basic_aggregation", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_basic_aggregation", "code": "# Code from lines 74 to 83"}
{"name": "test_parse_sql_basic_aggregation_with_join", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_basic_aggregation_with_join", "code": "# Code from lines 86 to 97"}
{"name": "test_parse_sql_aggregation_with_multiple_joins", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_aggregation_with_multiple_joins", "code": "# Code from lines 100 to 112"}
{"name": "test_parse_sql_simple_reduction", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_simple_reduction", "code": "# Code from lines 115 to 119"}
{"name": "test_parse_sql_scalar_subquery", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_scalar_subquery", "code": "# Code from lines 122 to 132"}
{"name": "test_parse_sql_join_subquery", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_join_subquery", "code": "# Code from lines 135 to 147"}
{"name": "test_parse_sql_simple_select_count", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_simple_select_count", "code": "# Code from lines 150 to 154"}
{"name": "test_parse_sql_table_alias", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_table_alias", "code": "# Code from lines 157 to 161"}
{"name": "test_parse_sql_join_with_filter", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_join_with_filter", "code": "# Code from lines 164 to 172"}
{"name": "test_parse_sql_in_clause", "file": "ibis/expr/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_sql_in_clause", "code": "# Code from lines 175 to 182"}
{"name": "test_exprs", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "expr_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_exprs", "code": "# Code from lines 39 to 43"}
{"name": "test_custom_expr", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_custom_expr", "code": "# Code from lines 46 to 60"}
{"name": "test_custom_expr_with_not_implemented_type", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_custom_expr_with_not_implemented_type", "code": "# Code from lines 63 to 81"}
{"name": "test_join", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "how"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_join", "code": "# Code from lines 85 to 91"}
{"name": "test_order_by", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by", "code": "# Code from lines 94 to 98"}
{"name": "test_optional_graphviz_repr", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_optional_graphviz_repr", "code": "# Code from lines 101 to 116"}
{"name": "test_between", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_between", "code": "# Code from lines 119 to 128"}
{"name": "test_asof_join", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_asof_join", "code": "# Code from lines 131 to 139"}
{"name": "test_filter", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter", "code": "# Code from lines 142 to 147"}
{"name": "test_html_escape", "file": "ibis/expr/tests/test_visualize.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_html_escape", "code": "# Code from lines 150 to 161"}
{"name": "test_schema_from_names_types", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_names_types", "code": "# Code from lines 18 to 20"}
{"name": "test_schema_from_names_and_types_length_must_match", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_names_and_types_length_must_match", "code": "# Code from lines 23 to 32"}
{"name": "test_schema_from_names_and_typesield_names", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_names_and_typesield_names", "code": "# Code from lines 35 to 38"}
{"name": "test_timestamp", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "string"}, {"name": "expected_value"}, {"name": "expected_timezone"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp", "code": "# Code from lines 82 to 87"}
{"name": "test_timestamp_pandas", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "string"}, {"name": "expected_value"}, {"name": "expected_timezone"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_pandas", "code": "# Code from lines 113 to 119"}
{"name": "test_repr_deferred_with_exprs", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "f"}, {"name": "sol"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_repr_deferred_with_exprs", "code": "# Code from lines 130 to 134"}
{"name": "test_duplicate_columns_in_memtable_not_allowed", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_duplicate_columns_in_memtable_not_allowed", "code": "# Code from lines 137 to 143"}
{"name": "test_memtable_column_names_match_schema", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_column_names_match_schema", "code": "# Code from lines 146 to 152"}
{"name": "test_implicit_coercion_of_null_literal", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_implicit_coercion_of_null_literal", "code": "# Code from lines 163 to 173"}
{"name": "test_nested_name_property", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested_name_property", "code": "# Code from lines 176 to 182"}
{"name": "test_unbound_table_namespace", "file": "ibis/expr/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unbound_table_namespace", "code": "# Code from lines 185 to 197"}
{"name": "test_field", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_field", "code": "# Code from lines 43 to 50"}
{"name": "test_relation_coercion", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_relation_coercion", "code": "# Code from lines 53 to 57"}
{"name": "test_unbound_table", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unbound_table", "code": "# Code from lines 60 to 79"}
{"name": "test_select_fields", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_fields", "code": "# Code from lines 82 to 100"}
{"name": "test_select_values", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_values", "code": "# Code from lines 103 to 128"}
{"name": "test_select_windowing_local_reduction", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_windowing_local_reduction", "code": "# Code from lines 131 to 133"}
{"name": "test_select_windowizing_analytic_function", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_windowizing_analytic_function", "code": "# Code from lines 136 to 138"}
{"name": "test_subquery_integrity_check", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_integrity_check", "code": "# Code from lines 141 to 149"}
{"name": "test_select_turns_scalar_reduction_into_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_turns_scalar_reduction_into_subquery", "code": "# Code from lines 152 to 158"}
{"name": "test_select_scalar_foreign_scalar_reduction_into_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_scalar_foreign_scalar_reduction_into_subquery", "code": "# Code from lines 161 to 166"}
{"name": "test_select_turns_value_with_multiple_parents_into_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_turns_value_with_multiple_parents_into_subquery", "code": "# Code from lines 169 to 176"}
{"name": "test_value_to_array_creates_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_to_array_creates_subquery", "code": "# Code from lines 179 to 187"}
{"name": "test_as_scalar_creates_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_as_scalar_creates_subquery", "code": "# Code from lines 190 to 215"}
{"name": "test_mutate", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate", "code": "# Code from lines 218 to 230"}
{"name": "test_mutate_overwrites_existing_column", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate_overwrites_existing_column", "code": "# Code from lines 233 to 240"}
{"name": "test_select_full_reprojection", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_full_reprojection", "code": "# Code from lines 243 to 253"}
{"name": "test_subsequent_selections_with_field_names", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subsequent_selections_with_field_names", "code": "# Code from lines 256 to 280"}
{"name": "test_subsequent_selections_field_dereferencing", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subsequent_selections_field_dereferencing", "code": "# Code from lines 283 to 347"}
{"name": "test_subsequent_selections_value_dereferencing", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subsequent_selections_value_dereferencing", "code": "# Code from lines 350 to 387"}
{"name": "test_where", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where", "code": "# Code from lines 390 to 414"}
{"name": "test_where_raies_for_empty_predicate_list", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_raies_for_empty_predicate_list", "code": "# Code from lines 417 to 420"}
{"name": "test_where_after_select", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_after_select", "code": "# Code from lines 423 to 432"}
{"name": "test_where_with_reduction", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_with_reduction", "code": "# Code from lines 435 to 442"}
{"name": "test_where_flattens_predicates", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_flattens_predicates", "code": "# Code from lines 445 to 455"}
{"name": "test_project_filter_sort", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_project_filter_sort", "code": "# Code from lines 458 to 477"}
{"name": "test_order_by_supports_varargs", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by_supports_varargs", "code": "# Code from lines 480 to 493"}
{"name": "test_subsequent_filter", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subsequent_filter", "code": "# Code from lines 496 to 500"}
{"name": "test_project_doesnt_dereference_literal_expressions", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_project_doesnt_dereference_literal_expressions", "code": "# Code from lines 503 to 520"}
{"name": "test_project_before_and_after_filter", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_project_before_and_after_filter", "code": "# Code from lines 523 to 552"}
{"name": "test_join", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join", "code": "# Code from lines 555 to 581"}
{"name": "test_join_integrity_checks", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_integrity_checks", "code": "# Code from lines 584 to 601"}
{"name": "test_join_unambiguous_select", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_unambiguous_select", "code": "# Code from lines 604 to 621"}
{"name": "test_join_with_subsequent_projection", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_subsequent_projection", "code": "# Code from lines 624 to 662"}
{"name": "test_join_with_subsequent_projection_colliding_names", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_subsequent_projection_colliding_names", "code": "# Code from lines 665 to 689"}
{"name": "test_chained_join", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_chained_join", "code": "# Code from lines 692 to 731"}
{"name": "test_chained_join_referencing_intermediate_table", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_chained_join_referencing_intermediate_table", "code": "# Code from lines 734 to 761"}
{"name": "test_chained_join_positional_cross", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "how"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_chained_join_positional_cross", "code": "# Code from lines 765 to 784"}
{"name": "test_join_predicate_dereferencing", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_predicate_dereferencing", "code": "# Code from lines 787 to 848"}
{"name": "test_join_predicate_dereferencing_using_tuple_syntax", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_predicate_dereferencing_using_tuple_syntax", "code": "# Code from lines 851 to 888"}
{"name": "test_join_with_selector_predicate", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_selector_predicate", "code": "# Code from lines 891 to 904"}
{"name": "test_join_rhs_dereferencing", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_rhs_dereferencing", "code": "# Code from lines 907 to 932"}
{"name": "test_aggregate", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate", "code": "# Code from lines 935 to 946"}
{"name": "test_aggregate_having", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_having", "code": "# Code from lines 949 to 965"}
{"name": "test_select_with_uncorrelated_scalar_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_with_uncorrelated_scalar_subquery", "code": "# Code from lines 968 to 988"}
{"name": "test_select_with_reduction_turns_into_window_function", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_with_reduction_turns_into_window_function", "code": "# Code from lines 991 to 1006"}
{"name": "test_select_with_correlated_scalar_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_with_correlated_scalar_subquery", "code": "# Code from lines 1009 to 1027"}
{"name": "test_aggregate_field_dereferencing", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_field_dereferencing", "code": "# Code from lines 1030 to 1094"}
{"name": "test_isin_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isin_subquery", "code": "# Code from lines 1097 to 1106"}
{"name": "test_filter_condition_referencing_agg_without_groupby_turns_it_into_a_subquery", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_condition_referencing_agg_without_groupby_turns_it_into_a_subquery", "code": "# Code from lines 1109 to 1124"}
{"name": "test_self_join", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join", "code": "# Code from lines 1127 to 1152"}
{"name": "test_self_join_view", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join_view", "code": "# Code from lines 1155 to 1168"}
{"name": "test_self_join_with_view_projection", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join_with_view_projection", "code": "# Code from lines 1171 to 1184"}
{"name": "test_joining_same_table_twice", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_joining_same_table_twice", "code": "# Code from lines 1187 to 1217"}
{"name": "test_join_chain_gets_reused_and_continued_after_a_select", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_chain_gets_reused_and_continued_after_a_select", "code": "# Code from lines 1220 to 1242"}
{"name": "test_self_join_extensive", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join_extensive", "code": "# Code from lines 1245 to 1302"}
{"name": "test_self_join_with_intermediate_selection", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join_with_intermediate_selection", "code": "# Code from lines 1305 to 1359"}
{"name": "test_name_collisions_raise", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_name_collisions_raise", "code": "# Code from lines 1386 to 1403"}
{"name": "test_self_view_join_followed_by_aggregate_correctly_dereference_fields", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_view_join_followed_by_aggregate_correctly_dereference_fields", "code": "# Code from lines 1406 to 1444"}
{"name": "test_join_expressions_are_equal", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_expressions_are_equal", "code": "# Code from lines 1447 to 1453"}
{"name": "test_join_between_joins", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_between_joins", "code": "# Code from lines 1456 to 1494"}
{"name": "test_join_with_filtered_join_of_left", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_filtered_join_of_left", "code": "# Code from lines 1497 to 1515"}
{"name": "test_join_method_docstrings", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_method_docstrings", "code": "# Code from lines 1518 to 1544"}
{"name": "test_join_with_compound_predicate", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_compound_predicate", "code": "# Code from lines 1547 to 1586"}
{"name": "test_inner_join_convenience", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_inner_join_convenience", "code": "# Code from lines 1589 to 1709"}
{"name": "test_subsequent_order_by_calls", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subsequent_order_by_calls", "code": "# Code from lines 1712 to 1716"}
{"name": "test_impure_operation_dereferencing", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_impure_operation_dereferencing", "code": "# Code from lines 1720 to 1741"}
{"name": "test_mutate_ambiguty_check_not_too_strict", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate_ambiguty_check_not_too_strict", "code": "# Code from lines 1744 to 1753"}
{"name": "test_projections_with_different_field_order_are_unequal", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projections_with_different_field_order_are_unequal", "code": "# Code from lines 1756 to 1762"}
{"name": "test_filters_are_allowed_to_have_the_same_name", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filters_are_allowed_to_have_the_same_name", "code": "# Code from lines 1765 to 1773"}
{"name": "test_projections_with_similar_expressions_have_different_names", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projections_with_similar_expressions_have_different_names", "code": "# Code from lines 1776 to 1789"}
{"name": "test_expr_in_join_projection", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_expr_in_join_projection", "code": "# Code from lines 1792 to 1854"}
{"name": "test_analytic_dereference", "file": "ibis/expr/tests/test_newrels.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_analytic_dereference", "code": "# Code from lines 1857 to 1863"}
{"name": "test_scalar_shape", "file": "ibis/expr/tests/test_datashape.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_shape", "code": "# Code from lines 15 to 20"}
{"name": "test_columnar_shape", "file": "ibis/expr/tests/test_datashape.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_columnar_shape", "code": "# Code from lines 23 to 28"}
{"name": "test_tabular_shape", "file": "ibis/expr/tests/test_datashape.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tabular_shape", "code": "# Code from lines 31 to 36"}
{"name": "test_shapes_are_singletons", "file": "ibis/expr/tests/test_datashape.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_shapes_are_singletons", "code": "# Code from lines 39 to 45"}
{"name": "test_shape_comparison", "file": "ibis/expr/tests/test_datashape.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_shape_comparison", "code": "# Code from lines 48 to 62"}
{"name": "test_shapes_are_hashable", "file": "ibis/expr/tests/test_datashape.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_shapes_are_hashable", "code": "# Code from lines 65 to 72"}
{"name": "test_backward_compat_aliases", "file": "ibis/expr/tests/test_datashape.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_backward_compat_aliases", "code": "# Code from lines 75 to 78"}
{"name": "test_any_alias_for_datashape", "file": "ibis/expr/tests/test_datashape.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_any_alias_for_datashape", "code": "# Code from lines 81 to 83"}
{"name": "test_tables_have_format_value_rules", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "cls"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_tables_have_format_value_rules", "code": "# Code from lines 18 to 19"}
{"name": "test_format_table_column", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_table_column", "code": "# Code from lines 22 to 26"}
{"name": "test_format_projection", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_projection", "code": "# Code from lines 29 to 34"}
{"name": "test_format_table_with_empty_schema", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_table_with_empty_schema", "code": "# Code from lines 37 to 41"}
{"name": "test_table_type_output", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_type_output", "code": "# Code from lines 44 to 58"}
{"name": "test_aggregate_arg_names", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_arg_names", "code": "# Code from lines 61 to 73"}
{"name": "test_format_multiple_join_with_projection", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_multiple_join_with_projection", "code": "# Code from lines 76 to 105"}
{"name": "test_memoize_filtered_table", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memoize_filtered_table", "code": "# Code from lines 108 to 119"}
{"name": "test_named_value_expr_show_name", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_named_value_expr_show_name", "code": "# Code from lines 122 to 134"}
{"name": "test_memoize_filtered_tables_in_join", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memoize_filtered_tables_in_join", "code": "# Code from lines 137 to 159"}
{"name": "test_argument_repr_shows_name", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_argument_repr_shows_name", "code": "# Code from lines 162 to 169"}
{"name": "test_scalar_parameter_formatting", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_parameter_formatting", "code": "# Code from lines 172 to 177"}
{"name": "test_same_column_multiple_aliases", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_same_column_multiple_aliases", "code": "# Code from lines 180 to 189"}
{"name": "test_scalar_parameter_repr", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_parameter_repr", "code": "# Code from lines 192 to 194"}
{"name": "test_repr_exact", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repr_exact", "code": "# Code from lines 197 to 207"}
{"name": "test_complex_repr", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_repr", "code": "# Code from lines 210 to 221"}
{"name": "test_value_exprs_repr", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_exprs_repr", "code": "# Code from lines 224 to 227"}
{"name": "test_show_types", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_show_types", "code": "# Code from lines 230 to 237"}
{"name": "test_schema_truncation", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_truncation", "code": "# Code from lines 240 to 261"}
{"name": "test_table_count_expr", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_count_expr", "code": "# Code from lines 264 to 274"}
{"name": "test_window_no_group_by", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_no_group_by", "code": "# Code from lines 277 to 283"}
{"name": "test_window_group_by", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_group_by", "code": "# Code from lines 286 to 293"}
{"name": "test_fill_null", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_fill_null", "code": "# Code from lines 296 to 306"}
{"name": "test_asof_join", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_asof_join", "code": "# Code from lines 309 to 318"}
{"name": "test_two_inner_joins", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_two_inner_joins", "code": "# Code from lines 321 to 334"}
{"name": "test_destruct_selection", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_destruct_selection", "code": "# Code from lines 337 to 353"}
{"name": "test_format_literal", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "literal"}, {"name": "typ"}, {"name": "output"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_format_literal", "code": "# Code from lines 360 to 362"}
{"name": "test_format_dummy_table", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_dummy_table", "code": "# Code from lines 365 to 369"}
{"name": "test_format_in_memory_table", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_in_memory_table", "code": "# Code from lines 372 to 380"}
{"name": "test_format_unbound_table_namespace", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_unbound_table_namespace", "code": "# Code from lines 383 to 399"}
{"name": "test_format_new_relational_operation", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_new_relational_operation", "code": "# Code from lines 402 to 419"}
{"name": "test_format_new_value_operation", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_new_value_operation", "code": "# Code from lines 422 to 439"}
{"name": "test_format_show_variables", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}, {"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_show_variables", "code": "# Code from lines 442 to 460"}
{"name": "test_default_format_implementation", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_default_format_implementation", "code": "# Code from lines 463 to 471"}
{"name": "test_arbitrary_traversables_are_supported", "file": "ibis/expr/tests/test_format.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_arbitrary_traversables_are_supported", "code": "# Code from lines 474 to 494"}
{"name": "test_replace_scalar_parameters", "file": "ibis/expr/operations/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "rule"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_replace_scalar_parameters", "code": "# Code from lines 72 to 73"}
{"name": "test_replace_scalar_parameters_using_variable", "file": "ibis/expr/operations/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_scalar_parameters_using_variable", "code": "# Code from lines 76 to 80"}
{"name": "test_replace_propagation", "file": "ibis/expr/operations/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_propagation", "code": "# Code from lines 83 to 88"}
{"name": "test_simplification", "file": "ibis/expr/operations/tests/test_rewrites.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simplification", "code": "# Code from lines 108 to 110"}
{"name": "test_node_base", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node_base", "code": "# Code from lines 53 to 89"}
{"name": "test_node_substitution", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_node_substitution", "code": "# Code from lines 92 to 105"}
{"name": "test_value_annotations", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_annotations", "code": "# Code from lines 108 to 136"}
{"name": "test_operation_definition", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_operation_definition", "code": "# Code from lines 139 to 155"}
{"name": "test_instance_of_operation", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_instance_of_operation", "code": "# Code from lines 158 to 168"}
{"name": "test_array_input", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_input", "code": "# Code from lines 171 to 181"}
{"name": "test_custom_table_expr", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_custom_table_expr", "code": "# Code from lines 184 to 194"}
{"name": "test_too_many_or_too_few_args_not_allowed", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_too_many_or_too_few_args_not_allowed", "code": "# Code from lines 197 to 205"}
{"name": "test_getitem_on_column_is_error", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_getitem_on_column_is_error", "code": "# Code from lines 208 to 215"}
{"name": "test_operation_class_aliases", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_operation_class_aliases", "code": "# Code from lines 218 to 223"}
{"name": "test_expression_class_aliases", "file": "ibis/expr/operations/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_expression_class_aliases", "code": "# Code from lines 226 to 233"}
{"name": "test_literal_coercion_type_inference", "file": "ibis/expr/operations/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_coercion_type_inference", "code": "# Code from lines 28 to 30"}
{"name": "test_coerced_to_literal", "file": "ibis/expr/operations/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "typehint"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coerced_to_literal", "code": "# Code from lines 47 to 49"}
{"name": "test_coerced_to_value", "file": "ibis/expr/operations/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "typehint"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coerced_to_value", "code": "# Code from lines 91 to 93"}
{"name": "test_coerced_to_interval_value", "file": "ibis/expr/operations/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_coerced_to_interval_value", "code": "# Code from lines 96 to 104"}
{"name": "test_error_message_when_constructing_literal", "file": "ibis/expr/operations/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "call"}, {"name": "error"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_error_message_when_constructing_literal", "code": "# Code from lines 120 to 123"}
{"name": "test_implicit_coercion_of_null_literal", "file": "ibis/expr/operations/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_implicit_coercion_of_null_literal", "code": "# Code from lines 126 to 136"}
{"name": "test_NULL", "file": "ibis/expr/operations/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_NULL", "code": "# Code from lines 139 to 144"}
{"name": "test_impure_values_are_equal", "file": "ibis/expr/operations/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_impure_values_are_equal", "code": "# Code from lines 148 to 150"}
{"name": "test_pattern_matching", "file": "ibis/expr/operations/tests/test_core_py310.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pattern_matching", "code": "# Code from lines 10 to 30"}
{"name": "test_struct_column_shape", "file": "ibis/expr/operations/tests/test_structs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_column_shape", "code": "# Code from lines 12 to 22"}
{"name": "test_struct_column_validates_input_lengths", "file": "ibis/expr/operations/tests/test_structs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_column_validates_input_lengths", "code": "# Code from lines 25 to 33"}
{"name": "test_sortkey_propagates_dtype_and_shape", "file": "ibis/expr/operations/tests/test_sortkeys.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sortkey_propagates_dtype_and_shape", "code": "# Code from lines 8 to 16"}
{"name": "test_signed_integer_castable_to_signed_integer", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "from_"}, {"name": "to"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_signed_integer_castable_to_signed_integer", "code": "# Code from lines 11 to 15"}
{"name": "test_unsigned_integer_castable_to_unsigned_integer", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "from_"}, {"name": "to"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_unsigned_integer_castable_to_unsigned_integer", "code": "# Code from lines 19 to 23"}
{"name": "test_integer_castable_to_floating", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "from_"}, {"name": "to"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_integer_castable_to_floating", "code": "# Code from lines 34 to 35"}
{"name": "test_integer_castable_to_decimal", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "from_"}, {"name": "to"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_integer_castable_to_decimal", "code": "# Code from lines 40 to 41"}
{"name": "test_integer_castable_to_boolean", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "from_"}, {"name": "to"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_integer_castable_to_boolean", "code": "# Code from lines 45 to 49"}
{"name": "test_implicitly_castable_primitives", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "source"}, {"name": "target"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_implicitly_castable_primitives", "code": "# Code from lines 71 to 72"}
{"name": "test_implicitly_uncastable_primitives", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "source"}, {"name": "target"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_implicitly_uncastable_primitives", "code": "# Code from lines 89 to 90"}
{"name": "test_implicitly_castable_int_to_bool", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_implicitly_castable_int_to_bool", "code": "# Code from lines 94 to 95"}
{"name": "test_implicitly_uncastable_values", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "source"}, {"name": "target"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_implicitly_uncastable_values", "code": "# Code from lines 102 to 103"}
{"name": "test_struct_different_fields", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_different_fields", "code": "# Code from lines 106 to 121"}
{"name": "test_castable_decimal_to_decimal", "file": "ibis/expr/datatypes/tests/test_cast.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "source"}, {"name": "target"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_castable_decimal_to_decimal", "code": "# Code from lines 141 to 144"}
{"name": "test_primitive_from_string", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "nullable"}, {"name": "spec"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_primitive_from_string", "code": "# Code from lines 47 to 48"}
{"name": "test_parse_decimal", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "spec"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_decimal", "code": "# Code from lines 62 to 63"}
{"name": "test_parse_decimal_failure", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_decimal_failure", "code": "# Code from lines 77 to 79"}
{"name": "test_parse_char_varchar", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "spec"}, {"name": "length"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_char_varchar", "code": "# Code from lines 86 to 87"}
{"name": "test_parse_char_varchar_invalid", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "spec"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_char_varchar_invalid", "code": "# Code from lines 93 to 95"}
{"name": "test_parse_array_token_error", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_array_token_error", "code": "# Code from lines 98 to 100"}
{"name": "test_parse_struct", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_struct", "code": "# Code from lines 103 to 144"}
{"name": "test_struct_with_string_types", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_with_string_types", "code": "# Code from lines 147 to 164"}
{"name": "test_struct_trailing_comma", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "type_string"}, {"name": "expected_dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_struct_trailing_comma", "code": "# Code from lines 175 to 177"}
{"name": "test_struct_trailing_comma_invalid", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "invalid_type_string"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_struct_trailing_comma_invalid", "code": "# Code from lines 190 to 192"}
{"name": "test_array_with_string_value_types", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_with_string_value_types", "code": "# Code from lines 195 to 199"}
{"name": "test_map_with_string_value_types", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_with_string_value_types", "code": "# Code from lines 202 to 204"}
{"name": "test_parse_empty_map_failure", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_empty_map_failure", "code": "# Code from lines 207 to 209"}
{"name": "test_parse_map_allow_non_primitive_keys", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_map_allow_non_primitive_keys", "code": "# Code from lines 212 to 215"}
{"name": "test_parse_timestamp_with_timezone_single_quote", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_timestamp_with_timezone_single_quote", "code": "# Code from lines 218 to 221"}
{"name": "test_parse_timestamp_with_timezone_double_quote", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_timestamp_with_timezone_double_quote", "code": "# Code from lines 224 to 227"}
{"name": "test_parse_timestamp_with_timezone_invalid_timezone", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_timestamp_with_timezone_invalid_timezone", "code": "# Code from lines 230 to 232"}
{"name": "test_parse_timestamp_with_scale", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "scale"}, {"name": "tz"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_timestamp_with_scale", "code": "# Code from lines 237 to 241"}
{"name": "test_parse_timestamp_with_scale_no_tz", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "scale"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_timestamp_with_scale_no_tz", "code": "# Code from lines 245 to 246"}
{"name": "test_parse_interval", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_interval", "code": "# Code from lines 265 to 267"}
{"name": "test_parse_interval_with_invalid_unit", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_interval_with_invalid_unit", "code": "# Code from lines 271 to 274"}
{"name": "test_parse_temporal_with_invalid_string_argument", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_temporal_with_invalid_string_argument", "code": "# Code from lines 288 to 290"}
{"name": "test_parse_time", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_time", "code": "# Code from lines 293 to 294"}
{"name": "test_parse_null", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_null", "code": "# Code from lines 297 to 298"}
{"name": "test_parse_dtype_roundtrip", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_parse_dtype_roundtrip", "code": "# Code from lines 327 to 328"}
{"name": "test_parse_empty_struct", "file": "ibis/expr/datatypes/tests/test_parse.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_empty_struct", "code": "# Code from lines 331 to 332"}
{"name": "test_infer_dtype", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_infer_dtype", "code": "# Code from lines 85 to 86"}
{"name": "test_infer_mixed_type_fails", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_infer_mixed_type_fails", "code": "# Code from lines 89 to 92"}
{"name": "test_infer_timestamp_with_tz", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_infer_timestamp_with_tz", "code": "# Code from lines 95 to 98"}
{"name": "test_infer_timedelta", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_infer_timedelta", "code": "# Code from lines 101 to 117"}
{"name": "test_normalize_timestamp", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_timestamp", "code": "# Code from lines 147 to 149"}
{"name": "test_normalize_date", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_date", "code": "# Code from lines 162 to 164"}
{"name": "test_normalize_interval", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_interval", "code": "# Code from lines 176 to 178"}
{"name": "test_normalize_json", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_normalize_json", "code": "# Code from lines 181 to 189"}
{"name": "test_normalize_none_with_non_nullable_type", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_normalize_none_with_non_nullable_type", "code": "# Code from lines 192 to 195"}
{"name": "test_normalize_non_convertible_int", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "kind"}, {"name": "bits"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_non_convertible_int", "code": "# Code from lines 200 to 203"}
{"name": "test_normalize_non_convertible_float", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "typename"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_non_convertible_float", "code": "# Code from lines 207 to 210"}
{"name": "test_normalize_decimal", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "dtype"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_decimal", "code": "# Code from lines 229 to 230"}
{"name": "test_normalize_decimal_invalid", "file": "ibis/expr/datatypes/tests/test_value.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_normalize_decimal_invalid", "code": "# Code from lines 233 to 239"}
{"name": "test_infer_dtype", "file": "ibis/expr/datatypes/tests/test_pandas_numpy_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_infer_dtype", "code": "# Code from lines 41 to 42"}
{"name": "test_normalize_timestamp", "file": "ibis/expr/datatypes/tests/test_pandas_numpy_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_timestamp", "code": "# Code from lines 56 to 58"}
{"name": "test_normalize_date", "file": "ibis/expr/datatypes/tests/test_pandas_numpy_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_date", "code": "# Code from lines 71 to 73"}
{"name": "test_infer_numpy_scalar", "file": "ibis/expr/datatypes/tests/test_pandas_numpy_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_infer_numpy_scalar", "code": "# Code from lines 99 to 100"}
{"name": "test_from_numpy_dtype", "file": "ibis/expr/datatypes/tests/test_pandas_numpy_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numpy_dtype"}, {"name": "ibis_dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_from_numpy_dtype", "code": "# Code from lines 123 to 126"}
{"name": "test_from_numpy_timedelta", "file": "ibis/expr/datatypes/tests/test_pandas_numpy_value.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_from_numpy_timedelta", "code": "# Code from lines 129 to 135"}
{"name": "test_infer_numpy_array", "file": "ibis/expr/datatypes/tests/test_pandas_numpy_value.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numpy_array"}, {"name": "expected_dtypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_infer_numpy_array", "code": "# Code from lines 188 to 192"}
{"name": "test_normalize_non_convertible_boolean", "file": "ibis/expr/datatypes/tests/test_pandas_numpy_value.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_normalize_non_convertible_boolean", "code": "# Code from lines 195 to 199"}
{"name": "test_validate_type", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_validate_type", "code": "# Code from lines 20 to 21"}
{"name": "test_dtype", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "spec"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype", "code": "# Code from lines 53 to 54"}
{"name": "test_nullable_dtype", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "args"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_nullable_dtype", "code": "# Code from lines 80 to 81"}
{"name": "test_bogus_union", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bogus_union", "code": "# Code from lines 84 to 86"}
{"name": "test_dtype_from_classes", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "klass"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_classes", "code": "# Code from lines 108 to 109"}
{"name": "test_signed_unsigned_bounds", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "klass"}, {"name": "lower"}, {"name": "upper"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_signed_unsigned_bounds", "code": "# Code from lines 125 to 128"}
{"name": "test_dtype_from_typehints", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "hint"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_typehints", "code": "# Code from lines 354 to 355"}
{"name": "test_dtype_from_newer_typehints", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "hint"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_newer_typehints", "code": "# Code from lines 359 to 360"}
{"name": "test_dtype_from_invalid_python_value", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dtype_from_invalid_python_value", "code": "# Code from lines 363 to 366"}
{"name": "test_dtype_from_invalid_python_type", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dtype_from_invalid_python_type", "code": "# Code from lines 369 to 375"}
{"name": "test_struct_subclass_from_tuples", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_subclass_from_tuples", "code": "# Code from lines 378 to 383"}
{"name": "test_struct_mapping_api", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_mapping_api", "code": "# Code from lines 386 to 422"}
{"name": "test_struct_set_operations", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_set_operations", "code": "# Code from lines 425 to 453"}
{"name": "test_struct_equality", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_equality", "code": "# Code from lines 456 to 465"}
{"name": "test_singleton_null", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_singleton_null", "code": "# Code from lines 468 to 469"}
{"name": "test_singleton_boolean", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_singleton_boolean", "code": "# Code from lines 472 to 480"}
{"name": "test_singleton_primitive", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_singleton_primitive", "code": "# Code from lines 483 to 486"}
{"name": "test_array_type_not_equals", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_type_not_equals", "code": "# Code from lines 489 to 495"}
{"name": "test_array_type_equals", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_type_equals", "code": "# Code from lines 498 to 504"}
{"name": "test_interval_invalid_value_type", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_invalid_value_type", "code": "# Code from lines 507 to 509"}
{"name": "test_interval_invalid_unit", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval_invalid_unit", "code": "# Code from lines 513 to 515"}
{"name": "test_timestamp_with_invalid_timezone", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_with_invalid_timezone", "code": "# Code from lines 518 to 520"}
{"name": "test_timestamp_with_timezone_repr", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_with_timezone_repr", "code": "# Code from lines 523 to 525"}
{"name": "test_timestamp_with_timezone_str", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_with_timezone_str", "code": "# Code from lines 528 to 530"}
{"name": "test_time_str", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_time_str", "code": "# Code from lines 533 to 534"}
{"name": "test_parse_null", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_null", "code": "# Code from lines 537 to 538"}
{"name": "test_timestamp_with_scale", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "scale"}, {"name": "tz"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_with_scale", "code": "# Code from lines 543 to 546"}
{"name": "test_timestamp_with_scale_no_tz", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "scale"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_with_scale_no_tz", "code": "# Code from lines 550 to 551"}
{"name": "test_timestamp_unit", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_unit", "code": "# Code from lines 554 to 562"}
{"name": "test_timestamp_from_unit", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_from_unit", "code": "# Code from lines 565 to 575"}
{"name": "test_is_methods", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype_class"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_is_methods", "code": "# Code from lines 600 to 604"}
{"name": "test_is_fixed_length_array", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_fixed_length_array", "code": "# Code from lines 607 to 612"}
{"name": "test_is_array", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_array", "code": "# Code from lines 615 to 617"}
{"name": "test_is_floating", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_floating", "code": "# Code from lines 620 to 621"}
{"name": "test_is_geospatial", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_geospatial", "code": "# Code from lines 624 to 625"}
{"name": "test_is_integer", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_integer", "code": "# Code from lines 628 to 629"}
{"name": "test_is_map", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_map", "code": "# Code from lines 632 to 633"}
{"name": "test_is_numeric", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_numeric", "code": "# Code from lines 636 to 640"}
{"name": "test_is_primitive", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_primitive", "code": "# Code from lines 643 to 646"}
{"name": "test_is_signed_integer", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_signed_integer", "code": "# Code from lines 649 to 651"}
{"name": "test_is_struct", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_struct", "code": "# Code from lines 654 to 655"}
{"name": "test_is_unsigned_integer", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_unsigned_integer", "code": "# Code from lines 658 to 660"}
{"name": "test_is_variadic", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_variadic", "code": "# Code from lines 663 to 665"}
{"name": "test_is_temporal", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_temporal", "code": "# Code from lines 668 to 672"}
{"name": "test_set_is_an_alias_of_array", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_set_is_an_alias_of_array", "code": "# Code from lines 675 to 676"}
{"name": "test_type_coercion", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_type_coercion", "code": "# Code from lines 679 to 721"}
{"name": "test_type_roundtrip", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}, {"name": "fmt"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_type_roundtrip", "code": "# Code from lines 740 to 742"}
{"name": "test_dtype_from_polars", "file": "ibis/expr/datatypes/tests/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dtype_from_polars", "code": "# Code from lines 745 to 747"}
{"name": "test_window_by_agg_schema", "file": "ibis/tests/expr/test_temporal_windows.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "method"}, {"name": "by"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_by_agg_schema", "code": "# Code from lines 23 to 34"}
{"name": "test_window_by_with_non_timestamp_column", "file": "ibis/tests/expr/test_temporal_windows.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_by_with_non_timestamp_column", "code": "# Code from lines 37 to 39"}
{"name": "test_window_by_grouped_agg", "file": "ibis/tests/expr/test_temporal_windows.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "method"}, {"name": "by"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_by_grouped_agg", "code": "# Code from lines 53 to 64"}
{"name": "test_window_by_global_agg", "file": "ibis/tests/expr/test_temporal_windows.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_by_global_agg", "code": "# Code from lines 77 to 87"}
{"name": "test_literal_equality_basic", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_equality_basic", "code": "# Code from lines 17 to 22"}
{"name": "test_literal_equality_int_float", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_equality_int_float", "code": "# Code from lines 25 to 30"}
{"name": "test_literal_equality_int16_int32", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_equality_int16_int32", "code": "# Code from lines 33 to 38"}
{"name": "test_literal_equality_int_interval", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_equality_int_interval", "code": "# Code from lines 41 to 45"}
{"name": "test_literal_equality_interval", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_equality_interval", "code": "# Code from lines 48 to 58"}
{"name": "test_pickle_literal", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle_literal", "code": "# Code from lines 61 to 66"}
{"name": "test_pickle_literal_interval", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle_literal_interval", "code": "# Code from lines 69 to 72"}
{"name": "test_normalized_underlying_value", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "userinput"}, {"name": "literal_type"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalized_underlying_value", "code": "# Code from lines 94 to 97"}
{"name": "test_struct_literal", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_struct_literal", "code": "# Code from lines 110 to 116"}
{"name": "test_struct_literal_non_castable", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_struct_literal_non_castable", "code": "# Code from lines 126 to 128"}
{"name": "test_struct_cast_to_empty_struct", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_cast_to_empty_struct", "code": "# Code from lines 131 to 133"}
{"name": "test_map_literal", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_literal", "code": "# Code from lines 136 to 140"}
{"name": "test_map_literal_non_castable", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_map_literal_non_castable", "code": "# Code from lines 149 to 152"}
{"name": "test_literal_mixed_type_fails", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_mixed_type_fails", "code": "# Code from lines 155 to 158"}
{"name": "test_timestamp_literal_without_tz", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_literal_without_tz", "code": "# Code from lines 161 to 164"}
{"name": "test_integer_as_decimal", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_integer_as_decimal", "code": "# Code from lines 167 to 169"}
{"name": "test_deferred", "file": "ibis/tests/expr/test_literal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred", "code": "# Code from lines 172 to 177"}
{"name": "test_empty_schema", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_empty_schema", "code": "# Code from lines 57 to 59"}
{"name": "test_columns", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_columns", "code": "# Code from lines 62 to 66"}
{"name": "test_view_new_relation", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_view_new_relation", "code": "# Code from lines 69 to 88"}
{"name": "test_getitem_column_select", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_getitem_column_select", "code": "# Code from lines 91 to 96"}
{"name": "test_select_using_selector", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_using_selector", "code": "# Code from lines 99 to 109"}
{"name": "test_table_tab_completion", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_tab_completion", "code": "# Code from lines 112 to 120"}
{"name": "test_getitem_attribute", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_getitem_attribute", "code": "# Code from lines 123 to 129"}
{"name": "test_getitem_missing_column", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_getitem_missing_column", "code": "# Code from lines 132 to 134"}
{"name": "test_getattr_missing_column", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_getattr_missing_column", "code": "# Code from lines 137 to 139"}
{"name": "test_typo_method_name_recommendation", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_typo_method_name_recommendation", "code": "# Code from lines 142 to 149"}
{"name": "test_projection", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection", "code": "# Code from lines 152 to 162"}
{"name": "test_projection_no_list", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_no_list", "code": "# Code from lines 165 to 169"}
{"name": "test_projection_with_exprs", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_with_exprs", "code": "# Code from lines 172 to 187"}
{"name": "test_projection_duplicate_names", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_duplicate_names", "code": "# Code from lines 190 to 192"}
{"name": "test_projection_sort_keys_errors", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": "Forbid using `asc`/`desc` in selections", "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_sort_keys_errors", "code": "# Code from lines 195 to 201"}
{"name": "test_projection_invalid_root", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_invalid_root", "code": "# Code from lines 204 to 212"}
{"name": "test_projection_with_star_expr", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_with_star_expr", "code": "# Code from lines 215 to 230"}
{"name": "test_deprecated_getitem_select_filter", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deprecated_getitem_select_filter", "code": "# Code from lines 234 to 258"}
{"name": "test_projection_mutate_analysis_bug", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_mutate_analysis_bug", "code": "# Code from lines 261 to 271"}
{"name": "test_projection_no_expr", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "empty"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_projection_no_expr", "code": "# Code from lines 275 to 277"}
{"name": "test_mutate", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate", "code": "# Code from lines 292 to 324"}
{"name": "test_mutate_alter_existing_columns", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate_alter_existing_columns", "code": "# Code from lines 327 to 347"}
{"name": "test_replace_column", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_replace_column", "code": "# Code from lines 350 to 357"}
{"name": "test_invalid_predicate", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_predicate", "code": "# Code from lines 360 to 365"}
{"name": "test_add_predicate_coalesce", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_predicate_coalesce", "code": "# Code from lines 368 to 382"}
{"name": "test_repr_same_but_distinct_objects", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repr_same_but_distinct_objects", "code": "# Code from lines 385 to 391"}
{"name": "test_filter_fusion_distinct_table_objects", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_fusion_distinct_table_objects", "code": "# Code from lines 394 to 406"}
{"name": "test_rename", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rename", "code": "# Code from lines 409 to 423"}
{"name": "test_rename_function", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rename_function", "code": "# Code from lines 426 to 436"}
{"name": "test_rename_format_string", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rename_format_string", "code": "# Code from lines 439 to 450"}
{"name": "test_rename_snake_case", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rename_snake_case", "code": "# Code from lines 453 to 467"}
{"name": "test_rename_all_caps", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rename_all_caps", "code": "# Code from lines 470 to 484"}
{"name": "test_limit", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit", "code": "# Code from lines 487 to 490"}
{"name": "test_order_by", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by", "code": "# Code from lines 493 to 506"}
{"name": "test_order_by_desc_deferred_sort_key", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by_desc_deferred_sort_key", "code": "# Code from lines 509 to 515"}
{"name": "test_order_by_asc_deferred_sort_key", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by_asc_deferred_sort_key", "code": "# Code from lines 518 to 526"}
{"name": "test_order_by_scalar", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "key"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_order_by_scalar", "code": "# Code from lines 543 to 545"}
{"name": "test_order_by_nonexistent_column_errors", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_func"}, {"name": "key"}, {"name": "exc_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_order_by_nonexistent_column_errors", "code": "# Code from lines 566 to 571"}
{"name": "test_slice", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_slice", "code": "# Code from lines 574 to 587"}
{"name": "test_invalid_slice", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "step"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_invalid_slice", "code": "# Code from lines 591 to 593"}
{"name": "test_table_count_nunique", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "method"}, {"name": "op_cls"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_count_nunique", "code": "# Code from lines 599 to 615"}
{"name": "test_len_raises_expression_error", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_len_raises_expression_error", "code": "# Code from lines 618 to 620"}
{"name": "test_sum_expr_basics", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "int_col"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sum_expr_basics", "code": "# Code from lines 623 to 627"}
{"name": "test_sum_expr_basics_floats", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "float_col"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sum_expr_basics_floats", "code": "# Code from lines 630 to 634"}
{"name": "test_mean_expr_basics", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "numeric_col"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mean_expr_basics", "code": "# Code from lines 637 to 640"}
{"name": "test_aggregate_no_keys", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_no_keys", "code": "# Code from lines 643 to 652"}
{"name": "test_aggregate_keys_basic", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_keys_basic", "code": "# Code from lines 655 to 667"}
{"name": "test_aggregate_having_implicit_metric", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_having_implicit_metric", "code": "# Code from lines 670 to 694"}
{"name": "test_agg_having_explicit_metric", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_agg_having_explicit_metric", "code": "# Code from lines 697 to 714"}
{"name": "test_aggregate_keywords", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_keywords", "code": "# Code from lines 717 to 725"}
{"name": "test_select_on_literals", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_on_literals", "code": "# Code from lines 728 to 732"}
{"name": "test_filter_on_literal_boolean", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_on_literal_boolean", "code": "# Code from lines 735 to 738"}
{"name": "test_filter_on_literal_string_is_column", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_on_literal_string_is_column", "code": "# Code from lines 741 to 744"}
{"name": "test_filter_on_literal_then_aggregate", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_on_literal_then_aggregate", "code": "# Code from lines 747 to 750"}
{"name": "test_group_by_having_api", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_having_api", "code": "# Code from lines 753 to 772"}
{"name": "test_group_by_kwargs", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_kwargs", "code": "# Code from lines 775 to 781"}
{"name": "test_group_by_nargs", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_nargs", "code": "# Code from lines 784 to 789"}
{"name": "test_compound_aggregate_expr", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compound_aggregate_expr", "code": "# Code from lines 792 to 797"}
{"name": "test_groupby_convenience", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_groupby_convenience", "code": "# Code from lines 800 to 810"}
{"name": "test_group_by_nothing", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "group"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_group_by_nothing", "code": "# Code from lines 818 to 820"}
{"name": "test_group_by_count_size", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_count_size", "code": "# Code from lines 823 to 831"}
{"name": "test_group_by_column_select_api", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_column_select_api", "code": "# Code from lines 834 to 845"}
{"name": "test_value_counts", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_counts", "code": "# Code from lines 848 to 857"}
{"name": "test_value_counts_on_window_function", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_counts_on_window_function", "code": "# Code from lines 860 to 862"}
{"name": "test_value_counts_unnamed_expr", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_counts_unnamed_expr", "code": "# Code from lines 865 to 870"}
{"name": "test_aggregate_unnamed_expr", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_unnamed_expr", "code": "# Code from lines 873 to 880"}
{"name": "test_join_no_predicate_list", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_no_predicate_list", "code": "# Code from lines 883 to 904"}
{"name": "test_join_deferred", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_deferred", "code": "# Code from lines 907 to 927"}
{"name": "test_join_invalid_predicate", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_invalid_predicate", "code": "# Code from lines 930 to 935"}
{"name": "test_asof_join", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_asof_join", "code": "# Code from lines 938 to 945"}
{"name": "test_asof_join_with_by", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_asof_join_with_by", "code": "# Code from lines 949 to 986"}
{"name": "test_asof_join_with_tolerance", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_interval"}, {"name": "timedelta_interval"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_asof_join_with_tolerance", "code": "# Code from lines 1001 to 1025"}
{"name": "test_equijoin_schema_merge", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_equijoin_schema_merge", "code": "# Code from lines 1028 to 1043"}
{"name": "test_join_combo_with_projection", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_combo_with_projection", "code": "# Code from lines 1046 to 1059"}
{"name": "test_self_join", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join", "code": "# Code from lines 1062 to 1088"}
{"name": "test_self_join_no_view_convenience", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join_no_view_convenience", "code": "# Code from lines 1091 to 1100"}
{"name": "test_join_project_after", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_project_after", "code": "# Code from lines 1103 to 1127"}
{"name": "test_semi_join_schema", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_semi_join_schema", "code": "# Code from lines 1130 to 1139"}
{"name": "test_cross_join", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cross_join", "code": "# Code from lines 1142 to 1152"}
{"name": "test_cross_join_multiple", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cross_join_multiple", "code": "# Code from lines 1155 to 1180"}
{"name": "test_filter_join", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_join", "code": "# Code from lines 1183 to 1190"}
{"name": "test_inner_join_overlapping_column_names", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_inner_join_overlapping_column_names", "code": "# Code from lines 1193 to 1227"}
{"name": "test_join_key_alternatives", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "key_maker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_join_key_alternatives", "code": "# Code from lines 1242 to 1263"}
{"name": "test_join_key_invalid", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_key_invalid", "code": "# Code from lines 1266 to 1274"}
{"name": "test_join_invalid_refs", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_invalid_refs", "code": "# Code from lines 1277 to 1284"}
{"name": "test_join_invalid_expr_type", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_invalid_expr_type", "code": "# Code from lines 1287 to 1293"}
{"name": "test_join_non_boolean_expr", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_non_boolean_expr", "code": "# Code from lines 1296 to 1303"}
{"name": "test_unravel_compound_equijoin", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unravel_compound_equijoin", "code": "# Code from lines 1306 to 1350"}
{"name": "test_union", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "setops_table_foo"}, {"name": "setops_table_bar"}, {"name": "setops_table_baz"}, {"name": "setops_relation_error_message"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_union", "code": "# Code from lines 1353 to 1367"}
{"name": "test_intersection", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "setops_table_foo"}, {"name": "setops_table_bar"}, {"name": "setops_table_baz"}, {"name": "setops_relation_error_message"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_intersection", "code": "# Code from lines 1370 to 1380"}
{"name": "test_difference", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "setops_table_foo"}, {"name": "setops_table_bar"}, {"name": "setops_table_baz"}, {"name": "setops_relation_error_message"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_difference", "code": "# Code from lines 1383 to 1393"}
{"name": "test_column_ref_on_projection_rename", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_ref_on_projection_rename", "code": "# Code from lines 1396 to 1415"}
{"name": "test_unresolved_existence_predicate", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t1"}, {"name": "t2"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unresolved_existence_predicate", "code": "# Code from lines 1430 to 1442"}
{"name": "test_aggregate_metrics", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_metrics", "code": "# Code from lines 1445 to 1458"}
{"name": "test_group_by_keys", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_keys", "code": "# Code from lines 1461 to 1470"}
{"name": "test_having", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_having", "code": "# Code from lines 1473 to 1491"}
{"name": "test_filter", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter", "code": "# Code from lines 1494 to 1503"}
{"name": "test_order_by2", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by2", "code": "# Code from lines 1506 to 1523"}
{"name": "test_projection2", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection2", "code": "# Code from lines 1526 to 1534"}
{"name": "test_mutate2", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate2", "code": "# Code from lines 1537 to 1551"}
{"name": "test_groupby_mutate", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_groupby_mutate", "code": "# Code from lines 1554 to 1561"}
{"name": "test_groupby_projection", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_groupby_projection", "code": "# Code from lines 1564 to 1571"}
{"name": "test_pickle_table_expr", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle_table_expr", "code": "# Code from lines 1574 to 1579"}
{"name": "test_pickle_table_node", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle_table_node", "code": "# Code from lines 1582 to 1584"}
{"name": "test_pickle_projection_node", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle_projection_node", "code": "# Code from lines 1587 to 1595"}
{"name": "test_pickle_group_by", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle_group_by", "code": "# Code from lines 1598 to 1603"}
{"name": "test_pickle_asof_join", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle_asof_join", "code": "# Code from lines 1606 to 1612"}
{"name": "test_group_by_key_function", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_key_function", "code": "# Code from lines 1615 to 1618"}
{"name": "test_unbound_table_name", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unbound_table_name", "code": "# Code from lines 1621 to 1625"}
{"name": "test_unbound_table_using_class_definition", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unbound_table_using_class_definition", "code": "# Code from lines 1634 to 1645"}
{"name": "test_mutate_chain", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate_chain", "code": "# Code from lines 1648 to 1665"}
{"name": "test_merge_as_of_allows_overlapping_columns", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_merge_as_of_allows_overlapping_columns", "code": "# Code from lines 1692 to 1721"}
{"name": "test_select_from_unambiguous_join_with_strings", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_from_unambiguous_join_with_strings", "code": "# Code from lines 1724 to 1730"}
{"name": "test_filter_applied_to_join", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_applied_to_join", "code": "# Code from lines 1733 to 1741"}
{"name": "test_join_lname_rname", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "how"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_join_lname_rname", "code": "# Code from lines 1745 to 1777"}
{"name": "test_join_lname_rname_still_collide", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_lname_rname_still_collide", "code": "# Code from lines 1780 to 1786"}
{"name": "test_drop", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop", "code": "# Code from lines 1792 to 1815"}
{"name": "test_drop_equality", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_equality", "code": "# Code from lines 1818 to 1821"}
{"name": "test_python_table_ambiguous", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_python_table_ambiguous", "code": "# Code from lines 1824 to 1830"}
{"name": "test_memtable_filter", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_filter", "code": "# Code from lines 1833 to 1838"}
{"name": "test_default_backend_with_unbound_table", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_default_backend_with_unbound_table", "code": "# Code from lines 1841 to 1849"}
{"name": "test_filter_with_literal", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_filter_with_literal", "code": "# Code from lines 1853 to 1861"}
{"name": "test_cast", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast", "code": "# Code from lines 1864 to 1879"}
{"name": "test_pivot_longer", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pivot_longer", "code": "# Code from lines 1882 to 1909"}
{"name": "test_pivot_longer_strip_prefix", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pivot_longer_strip_prefix", "code": "# Code from lines 1912 to 1925"}
{"name": "test_pivot_longer_pluck_regex", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pivot_longer_pluck_regex", "code": "# Code from lines 1928 to 1945"}
{"name": "test_pivot_longer_no_match", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pivot_longer_no_match", "code": "# Code from lines 1948 to 1962"}
{"name": "test_pivot_wider", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pivot_wider", "code": "# Code from lines 1965 to 1972"}
{"name": "test_invalid_deferred", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_deferred", "code": "# Code from lines 1975 to 1979"}
{"name": "test_invalid_distinct", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "keep"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_invalid_distinct", "code": "# Code from lines 1983 to 1986"}
{"name": "test_invalid_keep_distinct", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_keep_distinct", "code": "# Code from lines 1989 to 1992"}
{"name": "test_invalid_distinct_empty_key", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_distinct_empty_key", "code": "# Code from lines 1995 to 1998"}
{"name": "test_unbind_with_namespace", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unbind_with_namespace", "code": "# Code from lines 2001 to 2012"}
{"name": "test_table_bind", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_bind", "code": "# Code from lines 2015 to 2110"}
{"name": "test_table_dropna_depr_warn", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_dropna_depr_warn", "code": "# Code from lines 2114 to 2117"}
{"name": "test_table_fillna_depr_warn", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_fillna_depr_warn", "code": "# Code from lines 2121 to 2124"}
{"name": "test_dummy_table_disallows_aliases", "file": "ibis/tests/expr/test_table.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dummy_table_disallows_aliases", "code": "# Code from lines 2127 to 2131"}
{"name": "test_type_metadata", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_type_metadata", "code": "# Code from lines 13 to 17"}
{"name": "test_cast_scalar_to_decimal", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast_scalar_to_decimal", "code": "# Code from lines 20 to 25"}
{"name": "test_decimal_sum_type", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_decimal_sum_type", "code": "# Code from lines 28 to 32"}
{"name": "test_promote_decimal_type_mul", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_promote_decimal_type_mul", "code": "# Code from lines 35 to 40"}
{"name": "test_promote_decimal_type_add", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_promote_decimal_type_add", "code": "# Code from lines 43 to 48"}
{"name": "test_promote_decimal_type_mod", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_promote_decimal_type_mod", "code": "# Code from lines 51 to 56"}
{"name": "test_promote_decimal_type_max", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_promote_decimal_type_max", "code": "# Code from lines 59 to 63"}
{"name": "test_decimal_sum_type_precision", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "precision"}, {"name": "scale"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_decimal_sum_type_precision", "code": "# Code from lines 75 to 80"}
{"name": "test_decimal_aggregate_function_type", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_decimal_aggregate_function_type", "code": "# Code from lines 84 to 89"}
{"name": "test_ifelse", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse", "code": "# Code from lines 92 to 106"}
{"name": "test_fill_null", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_fill_null", "code": "# Code from lines 109 to 114"}
{"name": "test_invalid_precision_scale_combo", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "precision"}, {"name": "scale"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_invalid_precision_scale_combo", "code": "# Code from lines 126 to 128"}
{"name": "test_invalid_precision_scale_type", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "precision"}, {"name": "scale"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_invalid_precision_scale_type", "code": "# Code from lines 135 to 137"}
{"name": "test_decimal_str", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_decimal_str", "code": "# Code from lines 140 to 143"}
{"name": "test_decimal_repr", "file": "ibis/tests/expr/test_decimal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_decimal_repr", "code": "# Code from lines 146 to 150"}
{"name": "test_operation_requires_equal_schemas", "file": "ibis/tests/expr/test_set_operations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_operation_requires_equal_schemas", "code": "# Code from lines 42 to 44"}
{"name": "test_operation_supports_schemas_with_different_field_order", "file": "ibis/tests/expr/test_set_operations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_operation_supports_schemas_with_different_field_order", "code": "# Code from lines 48 to 65"}
{"name": "test_abs", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "lineitem"}, {"name": "colname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_abs", "code": "# Code from lines 59 to 67"}
{"name": "test_group_concat", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_concat", "code": "# Code from lines 70 to 82"}
{"name": "test_zero_ifnull", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_zero_ifnull", "code": "# Code from lines 85 to 94"}
{"name": "test_fill_null", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_fill_null", "code": "# Code from lines 97 to 108"}
{"name": "test_ceil_floor", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ceil_floor", "code": "# Code from lines 111 to 131"}
{"name": "test_sign", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sign", "code": "# Code from lines 134 to 144"}
{"name": "test_round", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_round", "code": "# Code from lines 147 to 169"}
{"name": "test_coalesce_instance_method", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "sql_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_coalesce_instance_method", "code": "# Code from lines 178 to 185"}
{"name": "test_integer_promotions", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "sql_table"}, {"name": "function"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_integer_promotions", "code": "# Code from lines 188 to 198"}
{"name": "test_floats", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "sql_table"}, {"name": "function"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_floats", "code": "# Code from lines 201 to 211"}
{"name": "test_deferred", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "sql_table"}, {"name": "function"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred", "code": "# Code from lines 214 to 218"}
{"name": "test_no_arguments_errors", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "function"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_no_arguments_errors", "code": "# Code from lines 221 to 226"}
{"name": "test_compile_without_dependencies", "file": "ibis/tests/expr/test_sql_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_compile_without_dependencies", "code": "# Code from lines 232 to 234"}
{"name": "test_lower_upper", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lower_upper", "code": "# Code from lines 23 to 38"}
{"name": "test_substr", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_substr", "code": "# Code from lines 41 to 56"}
{"name": "test_left_right", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_left_right", "code": "# Code from lines 59 to 67"}
{"name": "test_length", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_length", "code": "# Code from lines 70 to 77"}
{"name": "test_join", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join", "code": "# Code from lines 80 to 87"}
{"name": "test_contains", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_contains", "code": "# Code from lines 90 to 95"}
{"name": "test_add_radd", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "string_col"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_radd", "code": "# Code from lines 98 to 103"}
{"name": "test_startswith", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_startswith", "code": "# Code from lines 106 to 108"}
{"name": "test_endswith", "file": "ibis/tests/expr/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_endswith", "code": "# Code from lines 111 to 113"}
{"name": "test_temporal_literals", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_temporal_literals", "code": "# Code from lines 19 to 24"}
{"name": "test_interval_function_integers", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_function_integers", "code": "# Code from lines 27 to 37"}
{"name": "test_interval_function_timedelta", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_function_timedelta", "code": "# Code from lines 40 to 55"}
{"name": "test_interval_function_unit_keywords", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "kw"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval_function_unit_keywords", "code": "# Code from lines 74 to 77"}
{"name": "test_interval_function_multiple_keywords", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_function_multiple_keywords", "code": "# Code from lines 80 to 83"}
{"name": "test_interval_function_invalid", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_function_invalid", "code": "# Code from lines 86 to 91"}
{"name": "test_upconvert_interval", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "interval"}, {"name": "unit"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_upconvert_interval", "code": "# Code from lines 109 to 116"}
{"name": "test_cannot_upconvert", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "delta"}, {"name": "target"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_cannot_upconvert", "code": "# Code from lines 133 to 135"}
{"name": "test_multiply", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_multiply", "code": "# Code from lines 147 to 149"}
{"name": "test_add", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "expected_unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_add", "code": "# Code from lines 169 to 171"}
{"name": "test_subtract", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "expected_unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_subtract", "code": "# Code from lines 191 to 193"}
{"name": "test_downconvert_second_parts", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_downconvert_second_parts", "code": "# Code from lines 238 to 241"}
{"name": "test_downconvert_hours", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_downconvert_hours", "code": "# Code from lines 264 to 267"}
{"name": "test_downconvert_interval", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_downconvert_interval", "code": "# Code from lines 314 to 317"}
{"name": "test_combine_with_different_kinds", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "a"}, {"name": "b"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_combine_with_different_kinds", "code": "# Code from lines 328 to 329"}
{"name": "test_timedelta_generic_api", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timedelta_generic_api", "code": "# Code from lines 346 to 347"}
{"name": "test_interval_arithmetic", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "func"}, {"name": "expected_op"}, {"name": "expected_type"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval_arithmetic", "code": "# Code from lines 471 to 483"}
{"name": "test_interval", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "literal"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval", "code": "# Code from lines 501 to 503"}
{"name": "test_timestamp_arithmetics", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_arithmetics", "code": "# Code from lines 506 to 524"}
{"name": "test_date_arithmetics", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_date_arithmetics", "code": "# Code from lines 527 to 543"}
{"name": "test_time_arithmetics", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_time_arithmetics", "code": "# Code from lines 546 to 562"}
{"name": "test_invalid_date_arithmetics", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_date_arithmetics", "code": "# Code from lines 565 to 575"}
{"name": "test_interval_properties", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "prop"}, {"name": "expected_unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval_properties", "code": "# Code from lines 591 to 592"}
{"name": "test_interval_monthly_properties", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "interval"}, {"name": "prop"}, {"name": "expected_unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval_monthly_properties", "code": "# Code from lines 603 to 604"}
{"name": "test_unsupported_properties", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "interval"}, {"name": "prop"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_unsupported_properties", "code": "# Code from lines 615 to 617"}
{"name": "test_integer_to_interval", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "column"}, {"name": "unit"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_integer_to_interval", "code": "# Code from lines 624 to 629"}
{"name": "test_interval_comparisons", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "unit"}, {"name": "operands"}, {"name": "operator"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval_comparisons", "code": "# Code from lines 656 to 662"}
{"name": "test_complex_date_comparisons", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "operands"}, {"name": "interval"}, {"name": "arithmetic"}, {"name": "operator"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_complex_date_comparisons", "code": "# Code from lines 724 to 734"}
{"name": "test_interval_column_name", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_column_name", "code": "# Code from lines 737 to 740"}
{"name": "test_timestamp_truncate", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "operand"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_truncate", "code": "# Code from lines 797 to 800"}
{"name": "test_date_truncate", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "operand"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_date_truncate", "code": "# Code from lines 805 to 808"}
{"name": "test_time_truncate", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "operand"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_time_truncate", "code": "# Code from lines 813 to 816"}
{"name": "test_date_literal", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_date_literal", "code": "# Code from lines 819 to 826"}
{"name": "test_date_expression", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_date_expression", "code": "# Code from lines 829 to 840"}
{"name": "test_time_literal", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_time_literal", "code": "# Code from lines 843 to 850"}
{"name": "test_time_expression", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_time_expression", "code": "# Code from lines 853 to 864"}
{"name": "test_timestamp_literals", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_literals", "code": "# Code from lines 867 to 868"}
{"name": "test_timestamp_literal", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_literal", "code": "# Code from lines 871 to 882"}
{"name": "test_timestamp_expression", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_expression", "code": "# Code from lines 885 to 897"}
{"name": "test_timestamp_bucket", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_bucket", "code": "# Code from lines 900 to 930"}
{"name": "test_today", "file": "ibis/tests/expr/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_today", "code": "# Code from lines 933 to 936"}
{"name": "test_null", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null", "code": "# Code from lines 30 to 32"}
{"name": "test_literal_with_implicit_type", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_with_implicit_type", "code": "# Code from lines 58 to 65"}
{"name": "test_listeral_with_unhashable_values", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_type"}, {"name": "expected_value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_listeral_with_unhashable_values", "code": "# Code from lines 75 to 82"}
{"name": "test_literal_with_explicit_type", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_with_explicit_type", "code": "# Code from lines 118 to 120"}
{"name": "test_literal_with_explicit_geotype", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_with_explicit_geotype", "code": "# Code from lines 144 to 147"}
{"name": "test_normalize_decimal_literal", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}, {"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_normalize_decimal_literal", "code": "# Code from lines 164 to 166"}
{"name": "test_literal_complex_types", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_type"}, {"name": "expected_class"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_complex_types", "code": "# Code from lines 194 to 200"}
{"name": "test_simple_map_operations", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_map_operations", "code": "# Code from lines 203 to 224"}
{"name": "test_literal_with_non_coercible_type", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_with_non_coercible_type", "code": "# Code from lines 236 to 238"}
{"name": "test_literal_double_from_string_fails", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_double_from_string_fails", "code": "# Code from lines 241 to 243"}
{"name": "test_list_and_tuple_literals", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_and_tuple_literals", "code": "# Code from lines 246 to 257"}
{"name": "test_list_and_tuple_literals_geotype", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_and_tuple_literals_geotype", "code": "# Code from lines 260 to 266"}
{"name": "test_literal_array", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_array", "code": "# Code from lines 269 to 273"}
{"name": "test_isin_notin_list", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "container"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isin_notin_list", "code": "# Code from lines 277 to 288"}
{"name": "test_isin_notin_scalars", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isin_notin_scalars", "code": "# Code from lines 291 to 298"}
{"name": "test_scalar_isin_list_with_array", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_isin_list_with_array", "code": "# Code from lines 301 to 310"}
{"name": "test_distinct_table", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_distinct_table", "code": "# Code from lines 313 to 317"}
{"name": "test_nunique", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nunique", "code": "# Code from lines 320 to 322"}
{"name": "test_isnull", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isnull", "code": "# Code from lines 325 to 332"}
{"name": "test_notnull", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_notnull", "code": "# Code from lines 335 to 342"}
{"name": "test_null_eq_and_ne", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_null_eq_and_ne", "code": "# Code from lines 350 to 354"}
{"name": "test_isnan_isinf_column", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "column"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isnan_isinf_column", "code": "# Code from lines 358 to 365"}
{"name": "test_isnan_isinf_scalar", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isnan_isinf_scalar", "code": "# Code from lines 369 to 376"}
{"name": "test_cumulative_yield_array_types", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "column"}, {"name": "operation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cumulative_yield_array_types", "code": "# Code from lines 390 to 392"}
{"name": "test_log", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "log"}, {"name": "column"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_log", "code": "# Code from lines 401 to 403"}
{"name": "test_log_string", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_log_string", "code": "# Code from lines 409 to 413"}
{"name": "test_log_variants_string", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "klass"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_log_variants_string", "code": "# Code from lines 417 to 421"}
{"name": "test_log_boolean", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "log"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_log_boolean", "code": "# Code from lines 424 to 428"}
{"name": "test_log_literal", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "log"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_log_literal", "code": "# Code from lines 431 to 433"}
{"name": "test_cast_same_type_noop", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast_same_type_noop", "code": "# Code from lines 436 to 441"}
{"name": "test_string_slice_step", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_slice_step", "code": "# Code from lines 444 to 453"}
{"name": "test_string_to_number", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_to_number", "code": "# Code from lines 457 to 466"}
{"name": "test_number_to_string_column", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "col"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_number_to_string_column", "code": "# Code from lines 470 to 472"}
{"name": "test_number_to_string_scalar", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_number_to_string_scalar", "code": "# Code from lines 475 to 478"}
{"name": "test_casted_exprs_are_named", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_casted_exprs_are_named", "code": "# Code from lines 481 to 486"}
{"name": "test_negate", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "col"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_negate", "code": "# Code from lines 490 to 494"}
{"name": "test_negate_boolean_scalar", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_negate_boolean_scalar", "code": "# Code from lines 498 to 501"}
{"name": "test_negate_boolean_column", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_negate_boolean_column", "code": "# Code from lines 504 to 507"}
{"name": "test_arbitrary", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "column"}, {"name": "condition_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_arbitrary", "code": "# Code from lines 512 to 518"}
{"name": "test_any_all_notany", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "column"}, {"name": "operation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_any_all_notany", "code": "# Code from lines 531 to 534"}
{"name": "test_numbers_compare_numeric_literal", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "operation"}, {"name": "column"}, {"name": "case"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_numbers_compare_numeric_literal", "code": "# Code from lines 550 to 564"}
{"name": "test_boolean_comparisons", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_boolean_comparisons", "code": "# Code from lines 567 to 574"}
{"name": "test_string_comparisons", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "operation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_comparisons", "code": "# Code from lines 588 to 591"}
{"name": "test_boolean_logical_ops", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "operation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_boolean_logical_ops", "code": "# Code from lines 595 to 610"}
{"name": "test_and_", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_and_", "code": "# Code from lines 613 to 620"}
{"name": "test_or_", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_or_", "code": "# Code from lines 623 to 630"}
{"name": "test_null_column", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_column", "code": "# Code from lines 633 to 637"}
{"name": "test_null_column_union", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_column_union", "code": "# Code from lines 640 to 645"}
{"name": "test_string_compare_numeric_array", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_compare_numeric_array", "code": "# Code from lines 648 to 653"}
{"name": "test_string_compare_numeric_literal", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_compare_numeric_literal", "code": "# Code from lines 656 to 661"}
{"name": "test_between", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_between", "code": "# Code from lines 664 to 688"}
{"name": "test_chained_comparisons_not_allowed", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_chained_comparisons_not_allowed", "code": "# Code from lines 691 to 693"}
{"name": "test_binop_string_type_error", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "operation"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_binop_string_type_error", "code": "# Code from lines 701 to 706"}
{"name": "test_string_mul", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_mul", "code": "# Code from lines 710 to 716"}
{"name": "test_literal_promotions", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "op"}, {"name": "name"}, {"name": "case"}, {"name": "ex_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_promotions", "code": "# Code from lines 786 to 793"}
{"name": "test_null_literal_promotions", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_literal_promotions", "code": "# Code from lines 796 to 801"}
{"name": "test_zero_subtract_literal_promotions", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "op"}, {"name": "left_fn"}, {"name": "right_fn"}, {"name": "ex_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_zero_subtract_literal_promotions", "code": "# Code from lines 816 to 821"}
{"name": "test_substitute_dict", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_substitute_dict", "code": "# Code from lines 824 to 834"}
{"name": "test_not_without_boolean", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "typ"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_not_without_boolean", "code": "# Code from lines 846 to 850"}
{"name": "test_bitwise_exprs", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "fn"}, {"name": "expected_op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_bitwise_exprs", "code": "# Code from lines 872 to 875"}
{"name": "test_table_operations_with_integer_column", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "position"}, {"name": "names"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_operations_with_integer_column", "code": "# Code from lines 889 to 893"}
{"name": "test_generic_value_api_no_arithmetic", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "operation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_generic_value_api_no_arithmetic", "code": "# Code from lines 898 to 902"}
{"name": "test_fill_null_null", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_fill_null_null", "code": "# Code from lines 908 to 909"}
{"name": "test_string_temporal_compare", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_temporal_compare", "code": "# Code from lines 936 to 938"}
{"name": "test_decimal_modulo_output_type", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "type"}, {"name": "expected_type_class"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_decimal_modulo_output_type", "code": "# Code from lines 950 to 953"}
{"name": "test_time_compare", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_time_compare", "code": "# Code from lines 971 to 973"}
{"name": "test_time_timestamp_invalid_compare", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_time_timestamp_invalid_compare", "code": "# Code from lines 987 to 989"}
{"name": "test_scalar_parameter_compare", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "left"}, {"name": "right"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_scalar_parameter_compare", "code": "# Code from lines 1021 to 1022"}
{"name": "test_scalar_parameter_invalid_compare", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_scalar_parameter_invalid_compare", "code": "# Code from lines 1034 to 1036"}
{"name": "test_between_time_failure_time", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "creator"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_between_time_failure_time", "code": "# Code from lines 1051 to 1054"}
{"name": "test_empty_array_as_argument", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_empty_array_as_argument", "code": "# Code from lines 1057 to 1069"}
{"name": "test_nullable_column_propagated", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nullable_column_propagated", "code": "# Code from lines 1072 to 1096"}
{"name": "test_interval_negate", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "base_expr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interval_negate", "code": "# Code from lines 1106 to 1110"}
{"name": "test_large_timestamp", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_large_timestamp", "code": "# Code from lines 1113 to 1117"}
{"name": "test_timestamp_with_timezone", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_with_timezone", "code": "# Code from lines 1120 to 1127"}
{"name": "test_timestamp_timezone_type", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tz"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_timezone_type", "code": "# Code from lines 1131 to 1134"}
{"name": "test_map_get_broadcast", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_get_broadcast", "code": "# Code from lines 1137 to 1142"}
{"name": "test_map_getitem_broadcast", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_getitem_broadcast", "code": "# Code from lines 1145 to 1149"}
{"name": "test_map_keys_output_type", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_keys_output_type", "code": "# Code from lines 1152 to 1154"}
{"name": "test_map_values_output_type", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_values_output_type", "code": "# Code from lines 1157 to 1159"}
{"name": "test_scalar_isin_map_keys", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_isin_map_keys", "code": "# Code from lines 1162 to 1166"}
{"name": "test_column_isin_array", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_isin_array", "code": "# Code from lines 1169 to 1182"}
{"name": "test_column_isin_map_keys", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_isin_map_keys", "code": "# Code from lines 1185 to 1190"}
{"name": "test_map_get_with_compatible_value_smaller", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_get_with_compatible_value_smaller", "code": "# Code from lines 1193 to 1197"}
{"name": "test_map_get_with_compatible_value_bigger", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_get_with_compatible_value_bigger", "code": "# Code from lines 1200 to 1204"}
{"name": "test_map_get_with_incompatible_value_different_kind", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_get_with_incompatible_value_different_kind", "code": "# Code from lines 1207 to 1209"}
{"name": "test_map_get_with_null_on_not_nullable", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "null_value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_map_get_with_null_on_not_nullable", "code": "# Code from lines 1213 to 1218"}
{"name": "test_map_get_with_null_on_nullable", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "null_value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_map_get_with_null_on_nullable", "code": "# Code from lines 1222 to 1225"}
{"name": "test_map_get_with_null_on_null_type_with_null", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "null_value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_map_get_with_null_on_null_type_with_null", "code": "# Code from lines 1229 to 1232"}
{"name": "test_map_get_with_null_on_null_type_with_non_null", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_get_with_null_on_null_type_with_non_null", "code": "# Code from lines 1235 to 1237"}
{"name": "test_map_get_with_incompatible_value", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_get_with_incompatible_value", "code": "# Code from lines 1240 to 1243"}
{"name": "test_invalid_negate", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_invalid_negate", "code": "# Code from lines 1254 to 1258"}
{"name": "test_valid_negate", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_valid_negate", "code": "# Code from lines 1280 to 1284"}
{"name": "test_valid_negate_builtin", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_valid_negate_builtin", "code": "# Code from lines 1288 to 1290"}
{"name": "test_nullif_type", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "left"}, {"name": "right"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_nullif_type", "code": "# Code from lines 1309 to 1310"}
{"name": "test_nullif_fail", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_nullif_fail", "code": "# Code from lines 1314 to 1318"}
{"name": "test_select_on_unambiguous_join", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "join_method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_select_on_unambiguous_join", "code": "# Code from lines 1331 to 1340"}
{"name": "test_chained_select_on_join", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_chained_select_on_join", "code": "# Code from lines 1343 to 1349"}
{"name": "test_repr_list_of_lists", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repr_list_of_lists", "code": "# Code from lines 1352 to 1354"}
{"name": "test_repr_list_of_lists_in_table", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repr_list_of_lists_in_table", "code": "# Code from lines 1357 to 1361"}
{"name": "test_coalesce_type_inference_with_nulls", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coalesce_type_inference_with_nulls", "code": "# Code from lines 1378 to 1379"}
{"name": "test_literal_hash", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_hash", "code": "# Code from lines 1382 to 1388"}
{"name": "test_deferred", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op_name"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred", "code": "# Code from lines 1417 to 1438"}
{"name": "test_deferred_bool", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "bool_op_name"}, {"name": "bool_left"}, {"name": "bool_right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_bool", "code": "# Code from lines 1450 to 1456"}
{"name": "test_deferred_r_ops", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op_name"}, {"name": "expected_left"}, {"name": "expected_right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_r_ops", "code": "# Code from lines 1481 to 1491"}
{"name": "test_non_null_with_null_precedence", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr_fn"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_non_null_with_null_precedence", "code": "# Code from lines 1507 to 1510"}
{"name": "test_struct_names_types_fields", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_names_types_fields", "code": "# Code from lines 1513 to 1518"}
{"name": "test_array_literal", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "arg"}, {"name": "typestr"}, {"name": "type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_literal", "code": "# Code from lines 1530 to 1533"}
{"name": "test_array_length_scalar", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_length_scalar", "code": "# Code from lines 1536 to 1540"}
{"name": "test_array_map", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_map", "code": "# Code from lines 1543 to 1556"}
{"name": "test_array_filter", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_filter", "code": "# Code from lines 1559 to 1572"}
{"name": "test_deferred_function_call", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "func"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_function_call", "code": "# Code from lines 1591 to 1594"}
{"name": "test_deferred_nested_types", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_deferred_nested_types", "code": "# Code from lines 1610 to 1612"}
{"name": "test_numpy_ufuncs_dont_cast_columns", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_numpy_ufuncs_dont_cast_columns", "code": "# Code from lines 1615 to 1629"}
{"name": "test_logical_comparison_rlz_incompatible_error", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "operation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_logical_comparison_rlz_incompatible_error", "code": "# Code from lines 1636 to 1638"}
{"name": "test_case_rlz_incompatible_error", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_case_rlz_incompatible_error", "code": "# Code from lines 1641 to 1643"}
{"name": "test_group_by_order_by_deferred", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_group_by_order_by_deferred", "code": "# Code from lines 1647 to 1652"}
{"name": "test_rowid_only_physical_tables", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rowid_only_physical_tables", "code": "# Code from lines 1655 to 1661"}
{"name": "test_where_shape", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_shape", "code": "# Code from lines 1664 to 1669"}
{"name": "test_quantile_shape", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_quantile_shape", "code": "# Code from lines 1672 to 1682"}
{"name": "test_sample", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sample", "code": "# Code from lines 1685 to 1699"}
{"name": "test_deferred_doesnt_convert_callables", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_deferred_doesnt_convert_callables", "code": "# Code from lines 1702 to 1708"}
{"name": "test_in_subquery_shape", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_in_subquery_shape", "code": "# Code from lines 1711 to 1718"}
{"name": "test_value_fillna_depr_warn", "file": "ibis/tests/expr/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_fillna_depr_warn", "code": "# Code from lines 1722 to 1725"}
{"name": "test_field_select", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_field_select", "code": "# Code from lines 15 to 16"}
{"name": "test_string_cast_to_timestamp", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_cast_to_timestamp", "code": "# Code from lines 19 to 25"}
{"name": "test_extract_fields", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "field"}, {"name": "expected_operation"}, {"name": "expected_type"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_extract_fields", "code": "# Code from lines 41 to 45"}
{"name": "test_now", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_now", "code": "# Code from lines 48 to 51"}
{"name": "test_timestamp_literals", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_literals", "code": "# Code from lines 54 to 56"}
{"name": "test_invalid_timestamp_literal", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_timestamp_literal", "code": "# Code from lines 59 to 61"}
{"name": "test_comparison_timestamp", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_comparison_timestamp", "code": "# Code from lines 64 to 66"}
{"name": "test_comparisons_string", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_comparisons_string", "code": "# Code from lines 69 to 78"}
{"name": "test_comparisons_pandas_timestamp", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_comparisons_pandas_timestamp", "code": "# Code from lines 81 to 101"}
{"name": "test_timestamp_precedence", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_precedence", "code": "# Code from lines 104 to 107"}
{"name": "test_timestamp_field_access_on_date", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "field"}, {"name": "expected_operation"}, {"name": "expected_type"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_field_access_on_date", "code": "# Code from lines 118 to 124"}
{"name": "test_timestamp_field_access_on_date_failure", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "field"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_field_access_on_date_failure", "code": "# Code from lines 130 to 133"}
{"name": "test_timestamp_field_access_on_time", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "field"}, {"name": "expected_operation"}, {"name": "expected_type"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_field_access_on_time", "code": "# Code from lines 146 to 152"}
{"name": "test_timestamp_field_access_on_time_failure", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "field"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_field_access_on_time_failure", "code": "# Code from lines 156 to 159"}
{"name": "test_integer_timestamp_fails", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_integer_timestamp_fails", "code": "# Code from lines 162 to 164"}
{"name": "test_timestamp_range_with_str_inputs", "file": "ibis/tests/expr/test_timestamp.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "start"}, {"name": "stop"}, {"name": "step"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_range_with_str_inputs", "code": "# Code from lines 188 to 200"}
{"name": "test_rewrite_join_projection_without_other_ops", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rewrite_join_projection_without_other_ops", "code": "# Code from lines 14 to 55"}
{"name": "test_multiple_join_deeper_reference", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_join_deeper_reference", "code": "# Code from lines 58 to 69"}
{"name": "test_filter_on_projected_field", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_on_projected_field", "code": "# Code from lines 72 to 107"}
{"name": "test_join_predicate_from_derived_raises", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_predicate_from_derived_raises", "code": "# Code from lines 110 to 124"}
{"name": "test_bad_join_predicate_raises", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bad_join_predicate_raises", "code": "# Code from lines 127 to 133"}
{"name": "test_filter_self_join", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_self_join", "code": "# Code from lines 136 to 184"}
{"name": "test_is_ancestor_analytic", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_ancestor_analytic", "code": "# Code from lines 187 to 197"}
{"name": "test_mutation_fusion_no_overwrite", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": "Test fusion with chained mutation that doesn't overwrite existing\ncolumns.", "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutation_fusion_no_overwrite", "code": "# Code from lines 201 to 220"}
{"name": "test_mutation_fusion_overwrite", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": "Test fusion with chained mutation that overwrites existing columns.", "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutation_fusion_overwrite", "code": "# Code from lines 224 to 248"}
{"name": "test_select_filter_mutate_fusion", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": "Test fusion with filter followed by mutation on the same input.", "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_filter_mutate_fusion", "code": "# Code from lines 252 to 271"}
{"name": "test_agg_selection_does_not_share_roots", "file": "ibis/tests/expr/test_analysis.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_agg_selection_does_not_share_roots", "code": "# Code from lines 274 to 281"}
{"name": "test_aggregation_where", "file": "ibis/tests/expr/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_aggregation_where", "code": "# Code from lines 58 to 75"}
{"name": "test_geospatial_unary_op_repr", "file": "ibis/tests/expr/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geo_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_unary_op_repr", "code": "# Code from lines 13 to 15"}
{"name": "test_geospatial_bin_op_repr", "file": "ibis/tests/expr/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geo_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_bin_op_repr", "code": "# Code from lines 18 to 21"}
{"name": "test_geospatial_bin_op_repr_no_kwarg", "file": "ibis/tests/expr/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geo_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_bin_op_repr_no_kwarg", "code": "# Code from lines 24 to 29"}
{"name": "test_category_project", "file": "ibis/tests/expr/test_analytics.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_category_project", "code": "# Code from lines 44 to 50"}
{"name": "test_bucket", "file": "ibis/tests/expr/test_analytics.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bucket", "code": "# Code from lines 53 to 65"}
{"name": "test_bucket_error_cases", "file": "ibis/tests/expr/test_analytics.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bucket_error_cases", "code": "# Code from lines 68 to 87"}
{"name": "test_histogram", "file": "ibis/tests/expr/test_analytics.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_histogram", "code": "# Code from lines 90 to 97"}
{"name": "test_topk_analysis_bug", "file": "ibis/tests/expr/test_analytics.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "airlines"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_topk_analysis_bug", "code": "# Code from lines 100 to 105"}
{"name": "test_topk_function_late_bind", "file": "ibis/tests/expr/test_analytics.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "airlines"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_topk_function_late_bind", "code": "# Code from lines 108 to 113"}
{"name": "test_topk_name", "file": "ibis/tests/expr/test_analytics.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "airlines"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_topk_name", "code": "# Code from lines 116 to 125"}
{"name": "test_struct_operations", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_operations", "code": "# Code from lines 25 to 36"}
{"name": "test_struct_getattr", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_getattr", "code": "# Code from lines 39 to 43"}
{"name": "test_null_literal_getitem", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_literal_getitem", "code": "# Code from lines 46 to 51"}
{"name": "test_struct_tab_completion", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_tab_completion", "code": "# Code from lines 54 to 62"}
{"name": "test_struct_pickle", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_pickle", "code": "# Code from lines 65 to 68"}
{"name": "test_lift", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lift", "code": "# Code from lines 71 to 72"}
{"name": "test_unpack_from_table", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unpack_from_table", "code": "# Code from lines 75 to 76"}
{"name": "test_lift_join", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "s"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lift_join", "code": "# Code from lines 79 to 90"}
{"name": "test_unpack_join_from_table", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "s"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unpack_join_from_table", "code": "# Code from lines 93 to 97"}
{"name": "test_nested_lift", "file": "ibis/tests/expr/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested_lift", "code": "# Code from lines 100 to 106"}
{"name": "test_format_int_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_int_column", "code": "# Code from lines 20 to 26"}
{"name": "test_format_bool_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_bool_column", "code": "# Code from lines 29 to 33"}
{"name": "test_format_float_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_float_column", "code": "# Code from lines 36 to 41"}
{"name": "test_format_big_float_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_big_float_column", "code": "# Code from lines 44 to 48"}
{"name": "test_format_decimal", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "is_float"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_format_decimal", "code": "# Code from lines 52 to 66"}
{"name": "test_format_timestamp_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "prec"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_format_timestamp_column", "code": "# Code from lines 77 to 87"}
{"name": "test_format_time_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "prec"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_format_time_column", "code": "# Code from lines 98 to 108"}
{"name": "test_format_date_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "is_date"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_format_date_column", "code": "# Code from lines 112 to 117"}
{"name": "test_format_interval_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_interval_column", "code": "# Code from lines 120 to 124"}
{"name": "test_format_string_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_string_column", "code": "# Code from lines 127 to 140"}
{"name": "test_format_short_string_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_short_string_column", "code": "# Code from lines 143 to 149"}
{"name": "test_format_struct_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_struct_column", "code": "# Code from lines 152 to 158"}
{"name": "test_format_map_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_map_column", "code": "# Code from lines 161 to 167"}
{"name": "test_format_fully_null_column", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_fully_null_column", "code": "# Code from lines 170 to 174"}
{"name": "test_all_empty_groups_repr", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_all_empty_groups_repr", "code": "# Code from lines 177 to 181"}
{"name": "test_non_interactive_column_repr", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_non_interactive_column_repr", "code": "# Code from lines 184 to 194"}
{"name": "test_format_link", "file": "ibis/tests/expr/test_pretty_repr.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_link", "code": "# Code from lines 197 to 212"}
{"name": "test_ifelse_method", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse_method", "code": "# Code from lines 14 to 17"}
{"name": "test_ifelse_function_literals", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse_function_literals", "code": "# Code from lines 20 to 28"}
{"name": "test_ifelse_function_exprs", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse_function_exprs", "code": "# Code from lines 31 to 39"}
{"name": "test_ifelse_function_deferred", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse_function_deferred", "code": "# Code from lines 42 to 47"}
{"name": "test_case_dshape", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_case_dshape", "code": "# Code from lines 50 to 67"}
{"name": "test_case_dtype", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_case_dtype", "code": "# Code from lines 70 to 76"}
{"name": "test_multiple_case_expr", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_case_expr", "code": "# Code from lines 79 to 119"}
{"name": "test_pickle_multiple_case_node", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pickle_multiple_case_node", "code": "# Code from lines 122 to 140"}
{"name": "test_simple_case_null_else", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_case_null_else", "code": "# Code from lines 143 to 148"}
{"name": "test_multiple_case_null_else", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_case_null_else", "code": "# Code from lines 151 to 159"}
{"name": "test_case_mixed_type", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_case_mixed_type", "code": "# Code from lines 162 to 170"}
{"name": "test_err_on_bad_args", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_err_on_bad_args", "code": "# Code from lines 173 to 181"}
{"name": "test_err_on_nonbool_expr", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_err_on_nonbool_expr", "code": "# Code from lines 184 to 188"}
{"name": "test_err_on_noncomparable", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_err_on_noncomparable", "code": "# Code from lines 191 to 196"}
{"name": "test_err_on_empty_cases", "file": "ibis/tests/expr/test_case.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_err_on_empty_cases", "code": "# Code from lines 199 to 207"}
{"name": "test_vectorized_udf_operations", "file": "ibis/tests/expr/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "klass"}, {"name": "output_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_vectorized_udf_operations", "code": "# Code from lines 36 to 85"}
{"name": "test_udf_from_annotations", "file": "ibis/tests/expr/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dec"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_udf_from_annotations", "code": "# Code from lines 98 to 106"}
{"name": "test_udf_from_sig", "file": "ibis/tests/expr/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dec"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_udf_from_sig", "code": "# Code from lines 119 to 127"}
{"name": "test_udf_deferred", "file": "ibis/tests/expr/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dec"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_udf_deferred", "code": "# Code from lines 140 to 147"}
{"name": "test_builtin_scalar_noargs", "file": "ibis/tests/expr/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_noargs", "code": "# Code from lines 150 to 156"}
{"name": "test_None_type_hint", "file": "ibis/tests/expr/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_None_type_hint", "code": "# Code from lines 159 to 175"}
{"name": "test_format_sql_query_result", "file": "ibis/tests/expr/test_format_sql_operations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_format_sql_query_result", "code": "# Code from lines 7 to 26"}
{"name": "test_memoize_database_table", "file": "ibis/tests/expr/test_format_sql_operations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memoize_database_table", "code": "# Code from lines 29 to 48"}
{"name": "test_memoize_insert_sort_key", "file": "ibis/tests/expr/test_format_sql_operations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memoize_insert_sort_key", "code": "# Code from lines 51 to 64"}
{"name": "test_mutate_with_analytic_functions", "file": "ibis/tests/expr/test_window_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate_with_analytic_functions", "code": "# Code from lines 10 to 46"}
{"name": "test_value_over_api", "file": "ibis/tests/expr/test_window_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_over_api", "code": "# Code from lines 49 to 61"}
{"name": "test_conflicting_window_boundaries", "file": "ibis/tests/expr/test_window_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_conflicting_window_boundaries", "code": "# Code from lines 64 to 68"}
{"name": "test_rank_followed_by_over_call_merge_frames", "file": "ibis/tests/expr/test_window_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rank_followed_by_over_call_merge_frames", "code": "# Code from lines 71 to 75"}
{"name": "test_individual_columns", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_individual_columns", "code": "# Code from lines 10 to 13"}
{"name": "test_move_blocks", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_move_blocks", "code": "# Code from lines 16 to 19"}
{"name": "test_duplicates_not_renamed", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_duplicates_not_renamed", "code": "# Code from lines 22 to 25"}
{"name": "test_keep_non_contiguous_variables", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_keep_non_contiguous_variables", "code": "# Code from lines 28 to 31"}
{"name": "test_before_after_does_not_move_to_front", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_before_after_does_not_move_to_front", "code": "# Code from lines 34 to 36"}
{"name": "test_only_one_of_before_and_after", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_only_one_of_before_and_after", "code": "# Code from lines 39 to 43"}
{"name": "test_respects_order", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_respects_order", "code": "# Code from lines 46 to 50"}
{"name": "test_relocate_can_rename", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_relocate_can_rename", "code": "# Code from lines 53 to 57"}
{"name": "test_retains_last_duplicate_when_renaming_and_moving", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_retains_last_duplicate_when_renaming_and_moving", "code": "# Code from lines 60 to 67"}
{"name": "test_everything", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_everything", "code": "# Code from lines 70 to 73"}
{"name": "test_moves_to_front_with_no_before_and_no_after", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_moves_to_front_with_no_before_and_no_after", "code": "# Code from lines 76 to 78"}
{"name": "test_empty_before_moves_to_front", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_empty_before_moves_to_front", "code": "# Code from lines 81 to 83"}
{"name": "test_empty_after_moves_to_end", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_empty_after_moves_to_end", "code": "# Code from lines 86 to 88"}
{"name": "test_no_arguments", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_no_arguments", "code": "# Code from lines 91 to 94"}
{"name": "test_tuple_input", "file": "ibis/tests/expr/test_relocate.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tuple_input", "code": "# Code from lines 97 to 105"}
{"name": "test_window_boundary", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_boundary", "code": "# Code from lines 21 to 34"}
{"name": "test_window_boundary_typevars", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_boundary_typevars", "code": "# Code from lines 37 to 48"}
{"name": "test_window_boundary_coercions", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_boundary_coercions", "code": "# Code from lines 51 to 54"}
{"name": "test_window_builder_rows", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_builder_rows", "code": "# Code from lines 57 to 102"}
{"name": "test_window_builder_range", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_builder_range", "code": "# Code from lines 105 to 167"}
{"name": "test_window_builder_between", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_builder_between", "code": "# Code from lines 170 to 218"}
{"name": "test_window_api_supports_value_expressions", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_api_supports_value_expressions", "code": "# Code from lines 221 to 232"}
{"name": "test_window_api_supports_scalar_order_by", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_api_supports_scalar_order_by", "code": "# Code from lines 235 to 259"}
{"name": "test_window_api_properly_determines_how", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_api_properly_determines_how", "code": "# Code from lines 262 to 269"}
{"name": "test_window_api_properly_determines_how_numpy", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_api_properly_determines_how_numpy", "code": "# Code from lines 272 to 274"}
{"name": "test_window_api_mutually_exclusive_options", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_api_mutually_exclusive_options", "code": "# Code from lines 277 to 295"}
{"name": "test_window_builder_methods", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_builder_methods", "code": "# Code from lines 298 to 307"}
{"name": "test_window_api_preceding_following", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "method"}, {"name": "is_preceding"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_api_preceding_following", "code": "# Code from lines 317 to 338"}
{"name": "test_window_api_trailing_range", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_api_trailing_range", "code": "# Code from lines 341 to 357"}
{"name": "test_window_api_legacy_to_new", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "a"}, {"name": "b"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_api_legacy_to_new", "code": "# Code from lines 382 to 387"}
{"name": "test_window_api_preceding_following_invalid", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_api_preceding_following_invalid", "code": "# Code from lines 402 to 410"}
{"name": "test_window_api_preceding_following_invalid_tuple", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "kind"}, {"name": "begin"}, {"name": "end"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_api_preceding_following_invalid_tuple", "code": "# Code from lines 428 to 431"}
{"name": "test_window_bind_to_table", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_bind_to_table", "code": "# Code from lines 434 to 446"}
{"name": "test_window_bind_value_expression_using_over", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_bind_value_expression_using_over", "code": "# Code from lines 449 to 462"}
{"name": "test_window_analysis_propagate_nested_windows", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_analysis_propagate_nested_windows", "code": "# Code from lines 465 to 473"}
{"name": "test_window_analysis_combine_group_by", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_analysis_combine_group_by", "code": "# Code from lines 476 to 491"}
{"name": "test_window_analysis_combine_preserves_existing_window", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_analysis_combine_preserves_existing_window", "code": "# Code from lines 494 to 501"}
{"name": "test_window_analysis_auto_windowize_bug", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_analysis_auto_windowize_bug", "code": "# Code from lines 504 to 528"}
{"name": "test_windowization_wraps_reduction_inside_a_nested_value_expression", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_windowization_wraps_reduction_inside_a_nested_value_expression", "code": "# Code from lines 531 to 548"}
{"name": "test_group_by_with_window_function_preserves_range", "file": "ibis/tests/expr/test_window_frames.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_with_window_function_preserves_range", "code": "# Code from lines 551 to 572"}
{"name": "test_pipe_positional_args", "file": "ibis/tests/expr/test_pipe.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pipe_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pipe_positional_args", "code": "# Code from lines 34 to 41"}
{"name": "test_pipe_keyword_args", "file": "ibis/tests/expr/test_pipe.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pipe_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pipe_keyword_args", "code": "# Code from lines 44 to 51"}
{"name": "test_pipe_pass_to_keyword", "file": "ibis/tests/expr/test_pipe.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pipe_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pipe_pass_to_keyword", "code": "# Code from lines 54 to 61"}
{"name": "test_uuid", "file": "ibis/tests/expr/test_uuid.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_uuid", "code": "# Code from lines 6 to 9"}
{"name": "test_empty_selection", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "sel"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_empty_selection", "code": "# Code from lines 37 to 39"}
{"name": "test_where", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where", "code": "# Code from lines 42 to 43"}
{"name": "test_numeric", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_numeric", "code": "# Code from lines 46 to 47"}
{"name": "test_of_type", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "obj"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_of_type", "code": "# Code from lines 60 to 61"}
{"name": "test_of_type_abstract", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_of_type_abstract", "code": "# Code from lines 78 to 94"}
{"name": "test_startswith", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "prefixes"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_startswith", "code": "# Code from lines 102 to 103"}
{"name": "test_endswith", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_endswith", "code": "# Code from lines 106 to 107"}
{"name": "test_contains", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_contains", "code": "# Code from lines 110 to 111"}
{"name": "test_matches", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "rx"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_matches", "code": "# Code from lines 119 to 120"}
{"name": "test_compose_or", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compose_or", "code": "# Code from lines 123 to 126"}
{"name": "test_compose_and", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compose_and", "code": "# Code from lines 129 to 130"}
{"name": "test_compose_not", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compose_not", "code": "# Code from lines 133 to 134"}
{"name": "test_across_select", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "expr_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_across_select", "code": "# Code from lines 172 to 180"}
{"name": "test_across_mutate", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "expr_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_across_mutate", "code": "# Code from lines 193 to 201"}
{"name": "test_across_agg", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "expr_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_across_agg", "code": "# Code from lines 212 to 220"}
{"name": "test_across_group_by_select", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "expr_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_across_group_by_select", "code": "# Code from lines 235 to 243"}
{"name": "test_across_group_by_mutate", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "expr_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_across_group_by_mutate", "code": "# Code from lines 258 to 266"}
{"name": "test_across_group_by_agg", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "expr_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_across_group_by_agg", "code": "# Code from lines 281 to 289"}
{"name": "test_across_group_by_agg_with_grouped_selectors", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "expr_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_across_group_by_agg_with_grouped_selectors", "code": "# Code from lines 304 to 312"}
{"name": "test_across_list", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_across_list", "code": "# Code from lines 315 to 318"}
{"name": "test_across_str", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_across_str", "code": "# Code from lines 321 to 324"}
{"name": "test_if_all", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_if_all", "code": "# Code from lines 327 to 335"}
{"name": "test_if_any", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_if_any", "code": "# Code from lines 338 to 346"}
{"name": "test_index_negate", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_index_negate", "code": "# Code from lines 349 to 350"}
{"name": "test_index_slice_string_start", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_index_slice_string_start", "code": "# Code from lines 353 to 356"}
{"name": "test_index_slice_string_end", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_index_slice_string_end", "code": "# Code from lines 359 to 362"}
{"name": "test_index_string", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_index_string", "code": "# Code from lines 365 to 368"}
{"name": "test_first", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_first", "code": "# Code from lines 371 to 372"}
{"name": "test_last", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_last", "code": "# Code from lines 375 to 376"}
{"name": "test_all", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_all", "code": "# Code from lines 379 to 380"}
{"name": "test_sequence", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "seq"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_sequence", "code": "# Code from lines 395 to 396"}
{"name": "test_names_callable", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_names_callable", "code": "# Code from lines 399 to 415"}
{"name": "test_names_format_string", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_names_format_string", "code": "# Code from lines 418 to 434"}
{"name": "test_all_of", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_all_of", "code": "# Code from lines 437 to 442"}
{"name": "test_all_of_string_list", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_all_of_string_list", "code": "# Code from lines 445 to 449"}
{"name": "test_any_of", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_any_of", "code": "# Code from lines 452 to 455"}
{"name": "test_any_of_string_list", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_any_of_string_list", "code": "# Code from lines 458 to 463"}
{"name": "test_cols_error_on_misspelled_column", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cols_error_on_misspelled_column", "code": "# Code from lines 466 to 483"}
{"name": "test_order_by_with_selectors", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by_with_selectors", "code": "# Code from lines 486 to 498"}
{"name": "test_window_function_group_by", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_function_group_by", "code": "# Code from lines 501 to 503"}
{"name": "test_window_function_order_by", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_function_order_by", "code": "# Code from lines 506 to 508"}
{"name": "test_window_function_group_by_order_by", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_function_group_by_order_by", "code": "# Code from lines 511 to 521"}
{"name": "test_methods", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_methods", "code": "# Code from lines 524 to 533"}
{"name": "test_none_selector", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "penguins"}, {"name": "sel"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_none_selector", "code": "# Code from lines 537 to 551"}
{"name": "test_invalid_composition", "file": "ibis/tests/expr/test_selectors.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_composition", "code": "# Code from lines 554 to 567"}
{"name": "test_construction", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "construction_fn"}, {"name": "t"}, {"name": "base"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_construction", "code": "# Code from lines 141 to 142"}
{"name": "test_builtins", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "expr_fn"}, {"name": "builtin"}, {"name": "t"}, {"name": "base"}, {"name": "large_expr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtins", "code": "# Code from lines 155 to 157"}
{"name": "test_compile", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "module"}, {"name": "expr_fn"}, {"name": "t"}, {"name": "base"}, {"name": "large_expr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_compile", "code": "# Code from lines 187 to 197"}
{"name": "test_execute", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "expression_fn"}, {"name": "pt"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_execute", "code": "# Code from lines 316 to 318"}
{"name": "test_repr_tpc_h02", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "tpc_h02"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark"], "is_test": true, "test_name": "test_repr_tpc_h02", "code": "# Code from lines 430 to 431"}
{"name": "test_repr_huge_union", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark"], "is_test": true, "test_name": "test_repr_huge_union", "code": "# Code from lines 435 to 451"}
{"name": "test_op_argnames", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark"], "is_test": true, "test_name": "test_op_argnames", "code": "# Code from lines 455 to 458"}
{"name": "test_op_args", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark"], "is_test": true, "test_name": "test_op_args", "code": "# Code from lines 462 to 465"}
{"name": "test_complex_datatype_parse", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark"], "is_test": true, "test_name": "test_complex_datatype_parse", "code": "# Code from lines 469 to 475"}
{"name": "test_complex_datatype_builtins", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_complex_datatype_builtins", "code": "# Code from lines 480 to 484"}
{"name": "test_large_expr_equals", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "tpc_h02"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark"], "is_test": true, "test_name": "test_large_expr_equals", "code": "# Code from lines 488 to 489"}
{"name": "test_eq_datatypes", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "dtypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_eq_datatypes", "code": "# Code from lines 519 to 523"}
{"name": "test_multiple_joins", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "num_joins"}, {"name": "num_columns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_multiple_joins", "code": "# Code from lines 534 to 539"}
{"name": "test_compile_with_drops", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "module"}, {"name": "customers"}, {"name": "orders"}, {"name": "orders_items"}, {"name": "products"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.benchmark", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_compile_with_drops", "code": "# Code from lines 611 to 629"}
{"name": "test_repr_join", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "customers"}, {"name": "orders"}, {"name": "orders_items"}, {"name": "products"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repr_join", "code": "# Code from lines 632 to 640"}
{"name": "test_insert_duckdb", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "overwrite"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_insert_duckdb", "code": "# Code from lines 644 to 654"}
{"name": "test_snowflake_medium_sized_to_pandas", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_snowflake_medium_sized_to_pandas", "code": "# Code from lines 657 to 672"}
{"name": "test_parse_many_duckdb_types", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_many_duckdb_types", "code": "# Code from lines 675 to 682"}
{"name": "test_duckdb_to_pyarrow", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "sql"}, {"name": "ddb"}], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_duckdb_to_pyarrow", "code": "# Code from lines 719 to 727"}
{"name": "test_ibis_duckdb_to_pyarrow", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "sql"}, {"name": "ddb"}], "returns": "None", "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ibis_duckdb_to_pyarrow", "code": "# Code from lines 730 to 737"}
{"name": "test_big_eq_expr", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "src"}, {"name": "diff"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_big_eq_expr", "code": "# Code from lines 792 to 793"}
{"name": "test_big_join_expr", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "src"}, {"name": "diff"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_big_join_expr", "code": "# Code from lines 796 to 797"}
{"name": "test_big_join_compile", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "src"}, {"name": "diff"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_big_join_compile", "code": "# Code from lines 800 to 810"}
{"name": "test_big_expression_compile", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.timeout"], "is_test": true, "test_name": "test_big_expression_compile", "code": "# Code from lines 814 to 833"}
{"name": "test_column_access", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "many_cols"}, {"name": "getter"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_column_access", "code": "# Code from lines 846 to 847"}
{"name": "test_large_union_construct", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "many_tables"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_large_union_construct", "code": "# Code from lines 859 to 860"}
{"name": "test_large_union_compile", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "many_tables"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.timeout"], "is_test": true, "test_name": "test_large_union_compile", "code": "# Code from lines 864 to 868"}
{"name": "test_large_add", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "cols"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_large_add", "code": "# Code from lines 873 to 885"}
{"name": "test_memtable_register", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lots_of_tables"}, {"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.timeout"], "is_test": true, "test_name": "test_memtable_register", "code": "# Code from lines 901 to 904"}
{"name": "test_wide_drop_construct", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "wide_table"}, {"name": "cols_to_drop"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_wide_drop_construct", "code": "# Code from lines 925 to 926"}
{"name": "test_wide_drop_compile", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "wide_table"}, {"name": "cols_to_drop"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_wide_drop_compile", "code": "# Code from lines 929 to 934"}
{"name": "test_bind_on_wide_table", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "wide_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bind_on_wide_table", "code": "# Code from lines 937 to 944"}
{"name": "test_wide_rename", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "method"}, {"name": "cols"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_wide_rename", "code": "# Code from lines 969 to 971"}
{"name": "test_wide_relocate", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "input"}, {"name": "column"}, {"name": "relative"}, {"name": "cols"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_wide_relocate", "code": "# Code from lines 980 to 983"}
{"name": "test_duckdb_timestamp_conversion", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_duckdb_timestamp_conversion", "code": "# Code from lines 986 to 992"}
{"name": "test_selectors", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "cols"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_selectors", "code": "# Code from lines 996 to 1000"}
{"name": "test_dot_columns", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}, {"name": "ncols"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dot_columns", "code": "# Code from lines 1004 to 1007"}
{"name": "test_dedup_schema_failure_mode", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dedup_schema_failure_mode", "code": "# Code from lines 1010 to 1018"}
{"name": "test_dedup_schema", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dedup_schema", "code": "# Code from lines 1021 to 1028"}
{"name": "test_postgres_record_batches", "file": "ibis/tests/benchmarks/test_benchmarks.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pgtable"}, {"name": "benchmark"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_postgres_record_batches", "code": "# Code from lines 1058 to 1059"}
{"name": "test_persist_expression", "file": "ibis/backends/tests/test_expr_caching.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_persist_expression", "code": "# Code from lines 29 to 37"}
{"name": "test_persist_expression_contextmanager", "file": "ibis/backends/tests/test_expr_caching.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_persist_expression_contextmanager", "code": "# Code from lines 47 to 56"}
{"name": "test_persist_expression_multiple_refs", "file": "ibis/backends/tests/test_expr_caching.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "pytest.mark.never", "mark.notimpl", "mark.notyet"], "is_test": true, "test_name": "test_persist_expression_multiple_refs", "code": "# Code from lines 77 to 107"}
{"name": "test_persist_expression_repeated_cache", "file": "ibis/backends/tests/test_expr_caching.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_persist_expression_repeated_cache", "code": "# Code from lines 117 to 129"}
{"name": "test_persist_expression_release", "file": "ibis/backends/tests/test_expr_caching.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_persist_expression_release", "code": "# Code from lines 139 to 152"}
{"name": "test_con_dot_sql", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "schema"}, {"name": "ftname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_con_dot_sql", "code": "# Code from lines 52 to 84"}
{"name": "test_table_dot_sql", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_table_dot_sql", "code": "# Code from lines 93 to 124"}
{"name": "test_table_dot_sql_with_join", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_table_dot_sql_with_join", "code": "# Code from lines 143 to 185"}
{"name": "test_table_dot_sql_repr", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_table_dot_sql_repr", "code": "# Code from lines 192 to 213"}
{"name": "test_dot_sql_alias_with_params", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dot_sql_alias_with_params", "code": "# Code from lines 216 to 221"}
{"name": "test_dot_sql_reuse_alias_with_different_types", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dot_sql_reuse_alias_with_different_types", "code": "# Code from lines 224 to 230"}
{"name": "test_table_dot_sql_transpile", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "dialect"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet"], "is_test": true, "test_name": "test_table_dot_sql_transpile", "code": "# Code from lines 238 to 246"}
{"name": "test_con_dot_sql_transpile", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "dialect"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_con_dot_sql_transpile", "code": "# Code from lines 254 to 263"}
{"name": "test_order_by_no_projection", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_order_by_no_projection", "code": "# Code from lines 267 to 276"}
{"name": "test_dot_sql_limit", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dot_sql_limit", "code": "# Code from lines 279 to 286"}
{"name": "test_cte", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_cte", "code": "# Code from lines 294 to 309"}
{"name": "test_bare_minimum", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": "Test that a backend that supports dot sql can do the most basic thing.", "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "ftname_raw"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bare_minimum", "code": "# Code from lines 312 to 316"}
{"name": "test_embedded_cte", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "ftname_raw"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_embedded_cte", "code": "# Code from lines 319 to 323"}
{"name": "test_embedded_cte_with_alias_simple", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_embedded_cte_with_alias_simple", "code": "# Code from lines 326 to 335"}
{"name": "test_embedded_cte_with_alias_nested", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_embedded_cte_with_alias_nested", "code": "# Code from lines 346 to 358"}
{"name": "test_unnamed_columns", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.never", "pytest.mark.notyet"], "is_test": true, "test_name": "test_unnamed_columns", "code": "# Code from lines 366 to 381"}
{"name": "test_scalar_dot_sql", "file": "ibis/backends/tests/test_dot_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_dot_sql", "code": "# Code from lines 384 to 387"}
{"name": "test_mutating_join", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "batting"}, {"name": "awards_players"}, {"name": "how"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_mutating_join", "code": "# Code from lines 59 to 102"}
{"name": "test_filtering_join", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "batting"}, {"name": "awards_players"}, {"name": "how"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_filtering_join", "code": "# Code from lines 108 to 130"}
{"name": "test_join_then_filter_no_column_overlap", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "awards_players"}, {"name": "batting"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_then_filter_no_column_overlap", "code": "# Code from lines 133 to 142"}
{"name": "test_mutate_then_join_no_column_overlap", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate_then_join_no_column_overlap", "code": "# Code from lines 145 to 150"}
{"name": "test_semi_join_topk", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "batting"}, {"name": "awards_players"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.skip", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_semi_join_topk", "code": "# Code from lines 167 to 177"}
{"name": "test_join_with_pandas", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_join_with_pandas", "code": "# Code from lines 186 to 193"}
{"name": "test_join_with_pandas_non_null_typed_columns", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_pandas_non_null_typed_columns", "code": "# Code from lines 196 to 213"}
{"name": "test_join_with_trivial_predicate", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "awards_players"}, {"name": "predicate"}, {"name": "how"}, {"name": "pandas_value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_join_with_trivial_predicate", "code": "# Code from lines 256 to 272"}
{"name": "test_outer_join_nullability", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "how"}, {"name": "nrows"}, {"name": "gen_right"}, {"name": "keys"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_outer_join_nullability", "code": "# Code from lines 327 to 337"}
{"name": "test_complex_join_agg", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_join_agg", "code": "# Code from lines 340 to 347"}
{"name": "test_join_conflicting_columns", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_conflicting_columns", "code": "# Code from lines 350 to 367"}
{"name": "test_positional_join", "file": "ibis/backends/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_positional_join", "code": "# Code from lines 393 to 399"}
{"name": "test_string_literal", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "text_value"}, {"name": "expected_types"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_literal", "code": "# Code from lines 110 to 117"}
{"name": "test_string_col_is_unicode", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_col_is_unicode", "code": "# Code from lines 124 to 129"}
{"name": "test_string", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_func"}, {"name": "expected_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string", "code": "# Code from lines 636 to 641"}
{"name": "test_substring", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_func"}, {"name": "expected_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_substring", "code": "# Code from lines 702 to 707"}
{"name": "test_re_replace_global", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_re_replace_global", "code": "# Code from lines 713 to 716"}
{"name": "test_substr_with_null_values", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_substr_with_null_values", "code": "# Code from lines 720 to 734"}
{"name": "test_parse_url", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "result_func"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_parse_url", "code": "# Code from lines 819 to 823"}
{"name": "test_capitalize", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "inp"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_capitalize", "code": "# Code from lines 853 to 860"}
{"name": "test_array_string_join", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_array_string_join", "code": "# Code from lines 868 to 875"}
{"name": "test_empty_array_string_join", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_empty_array_string_join", "code": "# Code from lines 888 to 892"}
{"name": "test_subs_with_re_replace", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_subs_with_re_replace", "code": "# Code from lines 898 to 901"}
{"name": "test_multiple_subs", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_subs", "code": "# Code from lines 904 to 908"}
{"name": "test_levenshtein", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_levenshtein", "code": "# Code from lines 933 to 937"}
{"name": "test_no_conditional_percent_escape", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_no_conditional_percent_escape", "code": "# Code from lines 947 to 948"}
{"name": "test_non_match_regex_search_is_false", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_non_match_regex_search_is_false", "code": "# Code from lines 952 to 956"}
{"name": "test_re_split", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_re_split", "code": "# Code from lines 973 to 977"}
{"name": "test_re_split_column", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_re_split_column", "code": "# Code from lines 995 to 998"}
{"name": "test_re_split_column_multiple_patterns", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_re_split_column_multiple_patterns", "code": "# Code from lines 1031 to 1042"}
{"name": "test_concat_with_null", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_concat_with_null", "code": "# Code from lines 1050 to 1054"}
{"name": "test_concat", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "args"}, {"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_concat", "code": "# Code from lines 1071 to 1073"}
{"name": "test_string_methods_accents_and_emoji", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": "    \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n    \u2503 string_col \u2503\n    \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n    \u2502 string     \u2502\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n    \u2502 AbC             \u2502\n    \u2502 \n123\n    \u2502\n    \u2502 abc, 123   \u2502\n    \u2502 123        \u2502\n    \u2502 aBc        \u2502\n    \u2502 \ud83d\udc0d         \u2502\n    \u2502 \u00c9\u00e9\u00c8\u00e8\u00ea\u00e7     \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    ", "signature": {"args": [{"name": "string_temp_table"}, {"name": "backend"}, {"name": "result_mut"}, {"name": "expected_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_methods_accents_and_emoji", "code": "# Code from lines 1353 to 1379"}
{"name": "test_string_methods_no_accents_and_no_emoji", "file": "ibis/backends/tests/test_string.py", "type": "test", "docstring": "    \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n    \u2503 string_col \u2503\n    \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n    \u2502 string     \u2502\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n    \u2502 AbC             \u2502\n    \u2502 \n123\n    \u2502\n    \u2502 abc, 123   \u2502\n    \u2502 123        \u2502\n    \u2502 aBc        \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    ", "signature": {"args": [{"name": "string_temp_table_no_complications"}, {"name": "backend"}, {"name": "result_mut"}, {"name": "expected_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_methods_no_accents_and_no_emoji", "code": "# Code from lines 1435 to 1460"}
{"name": "test_array_column", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_column", "code": "# Code from lines 50 to 61"}
{"name": "test_array_scalar", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_scalar", "code": "# Code from lines 76 to 83"}
{"name": "test_array_repeat", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_array_repeat", "code": "# Code from lines 87 to 93"}
{"name": "test_array_repeat_column", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_array_repeat_column", "code": "# Code from lines 97 to 103"}
{"name": "test_array_concat", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_concat", "code": "# Code from lines 106 to 111"}
{"name": "test_array_concat_variadic", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_concat_variadic", "code": "# Code from lines 114 to 120"}
{"name": "test_array_concat_some_empty", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_array_concat_some_empty", "code": "# Code from lines 127 to 133"}
{"name": "test_array_radd_concat", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_radd_concat", "code": "# Code from lines 136 to 143"}
{"name": "test_array_concat_scalar", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_concat_scalar", "code": "# Code from lines 147 to 154"}
{"name": "test_array_concat_with_null", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_array_concat_with_null", "code": "# Code from lines 174 to 180"}
{"name": "test_array_concat_with_null_non_constant", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_array_concat_with_null_non_constant", "code": "# Code from lines 193 to 197"}
{"name": "test_array_length", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_length", "code": "# Code from lines 200 to 202"}
{"name": "test_list_literal", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_literal", "code": "# Code from lines 205 to 210"}
{"name": "test_np_array_literal", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_np_array_literal", "code": "# Code from lines 213 to 218"}
{"name": "test_array_index", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "idx"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_index", "code": "# Code from lines 222 to 227"}
{"name": "test_array_discovery", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.never", "pytest.mark.never", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_array_discovery", "code": "# Code from lines 273 to 285"}
{"name": "test_unnest_simple", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_unnest_simple", "code": "# Code from lines 299 to 310"}
{"name": "test_unnest_complex", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_unnest_complex", "code": "# Code from lines 319 to 343"}
{"name": "test_unnest_idempotent", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_unnest_idempotent", "code": "# Code from lines 352 to 371"}
{"name": "test_unnest_no_nulls", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_unnest_no_nulls", "code": "# Code from lines 380 to 401"}
{"name": "test_unnest_default_name", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_unnest_default_name", "code": "# Code from lines 410 to 422"}
{"name": "test_array_slice", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "start"}, {"name": "stop"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_array_slice", "code": "# Code from lines 460 to 467"}
{"name": "test_array_map", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}, {"name": "output"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_map", "code": "# Code from lines 517 to 526"}
{"name": "test_array_map_with_index", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}, {"name": "output"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_map_with_index", "code": "# Code from lines 576 to 585"}
{"name": "test_array_filter", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}, {"name": "output"}, {"name": "predicate"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_filter", "code": "# Code from lines 624 to 632"}
{"name": "test_array_filter_with_index", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}, {"name": "output"}, {"name": "predicate"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_filter_with_index", "code": "# Code from lines 671 to 679"}
{"name": "test_array_filter_with_index_lambda", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}, {"name": "output"}, {"name": "predicate"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_filter_with_index_lambda", "code": "# Code from lines 721 to 728"}
{"name": "test_array_contains", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "col"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_contains", "code": "# Code from lines 754 to 759"}
{"name": "test_array_position", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "a"}, {"name": "expected_array"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_array_position", "code": "# Code from lines 792 to 797"}
{"name": "test_array_remove", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_remove", "code": "# Code from lines 853 to 866"}
{"name": "test_array_unique", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_unique", "code": "# Code from lines 932 to 937"}
{"name": "test_array_sort", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_sort", "code": "# Code from lines 958 to 966"}
{"name": "test_array_union", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "a"}, {"name": "b"}, {"name": "expected_array"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_union", "code": "# Code from lines 1015 to 1023"}
{"name": "test_array_intersect", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_intersect", "code": "# Code from lines 1056 to 1065"}
{"name": "test_unnest_struct", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_unnest_struct", "code": "# Code from lines 1078 to 1088"}
{"name": "test_unnest_struct_with_multiple_fields", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_unnest_struct_with_multiple_fields", "code": "# Code from lines 1101 to 1116"}
{"name": "test_zip", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "nargs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "array_zip_notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_zip", "code": "# Code from lines 1133 to 1144"}
{"name": "test_zip_null", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "array_zip_notimpl", "pytest.mark.notyet", "pytest.mark.never", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_zip_null", "code": "# Code from lines 1172 to 1176"}
{"name": "test_array_of_struct_unnest", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_array_of_struct_unnest", "code": "# Code from lines 1204 to 1227"}
{"name": "test_array_flatten", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "flatten_data"}, {"name": "column"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_array_flatten", "code": "# Code from lines 1294 to 1304"}
{"name": "test_range_single_argument", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "n"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_range_single_argument", "code": "# Code from lines 1314 to 1317"}
{"name": "test_range_single_argument_unnest", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "n"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_range_single_argument_unnest", "code": "# Code from lines 1327 to 1330"}
{"name": "test_range_start_stop_step", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "start"}, {"name": "stop"}, {"name": "step"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_range_start_stop_step", "code": "# Code from lines 1342 to 1345"}
{"name": "test_range_start_stop_step_zero", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "start"}, {"name": "stop"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_range_start_stop_step_zero", "code": "# Code from lines 1362 to 1365"}
{"name": "test_unnest_empty_array", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_unnest_empty_array", "code": "# Code from lines 1378 to 1382"}
{"name": "test_array_map_with_conflicting_names", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_array_map_with_conflicting_names", "code": "# Code from lines 1396 to 1403"}
{"name": "test_complex_array_map", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["builtin_array", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_complex_array_map", "code": "# Code from lines 1411 to 1427"}
{"name": "test_timestamp_range", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "start"}, {"name": "stop"}, {"name": "step"}, {"name": "freq"}, {"name": "tzinfo"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "timestamp_range_tzinfos", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_range", "code": "# Code from lines 1525 to 1531"}
{"name": "test_timestamp_range_zero_step", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "start"}, {"name": "stop"}, {"name": "step"}, {"name": "tzinfo"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "timestamp_range_tzinfos", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_range_zero_step", "code": "# Code from lines 1584 to 1589"}
{"name": "test_repr_timestamp_array", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_repr_timestamp_array", "code": "# Code from lines 1595 to 1603"}
{"name": "test_unnest_range", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_unnest_range", "code": "# Code from lines 1610 to 1614"}
{"name": "test_array_literal_with_exprs", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_literal_with_exprs", "code": "# Code from lines 1633 to 1637"}
{"name": "test_zip_unnest_lift", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_zip_unnest_lift", "code": "# Code from lines 1654 to 1662"}
{"name": "test_table_unnest", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "colspec"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_table_unnest", "code": "# Code from lines 1678 to 1682"}
{"name": "test_table_unnest_with_offset", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_table_unnest_with_offset", "code": "# Code from lines 1693 to 1712"}
{"name": "test_table_unnest_with_keep_empty", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_table_unnest_with_keep_empty", "code": "# Code from lines 1718 to 1722"}
{"name": "test_table_unnest_column_expr", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_table_unnest_column_expr", "code": "# Code from lines 1736 to 1741"}
{"name": "test_table_unnest_array_of_struct_of_array", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_table_unnest_array_of_struct_of_array", "code": "# Code from lines 1754 to 1770"}
{"name": "test_array_agg_numeric", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data"}, {"name": "agg"}, {"name": "baseline_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "notimpl_aggs", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_agg_numeric", "code": "# Code from lines 1839 to 1848"}
{"name": "test_array_agg_bool", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data"}, {"name": "agg"}, {"name": "baseline_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_array_agg_bool", "code": "# Code from lines 1887 to 1896"}
{"name": "test_flatten", "file": "ibis/backends/tests/test_array.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_flatten", "code": "# Code from lines 1908 to 1915"}
{"name": "test_date_extract", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "attr"}, {"name": "expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_date_extract", "code": "# Code from lines 73 to 79"}
{"name": "test_timestamp_extract", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "attr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_extract", "code": "# Code from lines 106 to 113"}
{"name": "test_extract_iso_year", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "transform"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_extract_iso_year", "code": "# Code from lines 138 to 146"}
{"name": "test_iso_year_does_not_match_date_year", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_iso_year_does_not_match_date_year", "code": "# Code from lines 168 to 170"}
{"name": "test_timestamp_extract_literal", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_extract_literal", "code": "# Code from lines 223 to 225"}
{"name": "test_timestamp_extract_microseconds", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_extract_microseconds", "code": "# Code from lines 241 to 247"}
{"name": "test_timestamp_extract_milliseconds", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_timestamp_extract_milliseconds", "code": "# Code from lines 252 to 258"}
{"name": "test_timestamp_extract_epoch_seconds", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_extract_epoch_seconds", "code": "# Code from lines 268 to 279"}
{"name": "test_timestamp_extract_week_of_year", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_extract_week_of_year", "code": "# Code from lines 283 to 289"}
{"name": "test_timestamp_truncate", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "ibis_unit"}, {"name": "pandas_unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_truncate", "code": "# Code from lines 398 to 411"}
{"name": "test_date_truncate", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_date_truncate", "code": "# Code from lines 435 to 443"}
{"name": "test_integer_to_interval_timestamp", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "unit"}, {"name": "displacement_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_integer_to_interval_timestamp", "code": "# Code from lines 556 to 576"}
{"name": "test_integer_to_interval_date", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_integer_to_interval_date", "code": "# Code from lines 631 to 657"}
{"name": "test_temporal_binop", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "expr_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_temporal_binop", "code": "# Code from lines 839 to 848"}
{"name": "test_temporal_binop_pandas_timedelta", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "timedelta"}, {"name": "temporal_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_temporal_binop_pandas_timedelta", "code": "# Code from lines 914 to 923"}
{"name": "test_timestamp_comparison_filter", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "func_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_comparison_filter", "code": "# Code from lines 932 to 944"}
{"name": "test_timestamp_comparison_filter_numpy", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "func_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_timestamp_comparison_filter_numpy", "code": "# Code from lines 963 to 977"}
{"name": "test_interval_add_cast_scalar", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "sqlite_without_ymd_intervals"], "is_test": true, "test_name": "test_interval_add_cast_scalar", "code": "# Code from lines 982 to 988"}
{"name": "test_interval_add_cast_column", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "sqlite_without_ymd_intervals"], "is_test": true, "test_name": "test_interval_add_cast_column", "code": "# Code from lines 994 to 1008"}
{"name": "test_strftime", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "expr_fn"}, {"name": "pandas_pattern"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_strftime", "code": "# Code from lines 1048 to 1053"}
{"name": "test_integer_to_timestamp", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_integer_to_timestamp", "code": "# Code from lines 1142 to 1155"}
{"name": "test_string_as_timestamp", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "fmt"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_string_as_timestamp", "code": "# Code from lines 1224 to 1231"}
{"name": "test_string_as_date", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "fmt"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_string_as_date", "code": "# Code from lines 1290 to 1297"}
{"name": "test_string_as_time", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_string_as_time", "code": "# Code from lines 1318 to 1330"}
{"name": "test_day_of_week_scalar", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "date"}, {"name": "expected_index"}, {"name": "expected_day"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl", "mark_notyet_risingwave_14670"], "is_test": true, "test_name": "test_day_of_week_scalar", "code": "# Code from lines 1348 to 1354"}
{"name": "test_day_of_week_column", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "mark_notyet_risingwave_14670"], "is_test": true, "test_name": "test_day_of_week_column", "code": "# Code from lines 1359 to 1370"}
{"name": "test_day_of_week_column_group_by", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "day_of_week_expr"}, {"name": "day_of_week_pandas"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_day_of_week_column_group_by", "code": "# Code from lines 1393 to 1410"}
{"name": "test_now", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_now", "code": "# Code from lines 1414 to 1417"}
{"name": "test_now_from_projection", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_now_from_projection", "code": "# Code from lines 1421 to 1428"}
{"name": "test_today", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_today", "code": "# Code from lines 1431 to 1433"}
{"name": "test_today_from_projection", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_today_from_projection", "code": "# Code from lines 1436 to 1442"}
{"name": "test_date_literal", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_date_literal", "code": "# Code from lines 1462 to 1469"}
{"name": "test_timestamp_literal", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_timestamp_literal", "code": "# Code from lines 1493 to 1502"}
{"name": "test_timestamp_with_timezone_literal", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "timezone"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_with_timezone_literal", "code": "# Code from lines 1546 to 1551"}
{"name": "test_time_literal", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_time_literal", "code": "# Code from lines 1576 to 1585"}
{"name": "test_extract_time_from_timestamp", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "microsecond"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_extract_time_from_timestamp", "code": "# Code from lines 1628 to 1636"}
{"name": "test_interval_literal", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_interval_literal", "code": "# Code from lines 1697 to 1704"}
{"name": "test_date_column_from_ymd", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_date_column_from_ymd", "code": "# Code from lines 1708 to 1715"}
{"name": "test_timestamp_column_from_ymdhms", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_timestamp_column_from_ymdhms", "code": "# Code from lines 1722 to 1731"}
{"name": "test_date_scalar_from_iso", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_date_scalar_from_iso", "code": "# Code from lines 1734 to 1739"}
{"name": "test_date_column_from_iso", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_date_column_from_iso", "code": "# Code from lines 1743 to 1755"}
{"name": "test_timestamp_extract_milliseconds_with_big_value", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_extract_milliseconds_with_big_value", "code": "# Code from lines 1759 to 1763"}
{"name": "test_integer_cast_to_timestamp_column", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_integer_cast_to_timestamp_column", "code": "# Code from lines 1768 to 1772"}
{"name": "test_integer_cast_to_timestamp_scalar", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_integer_cast_to_timestamp_scalar", "code": "# Code from lines 1777 to 1781"}
{"name": "test_subsecond_cast_to_timestamp", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_subsecond_cast_to_timestamp", "code": "# Code from lines 1817 to 1823"}
{"name": "test_big_timestamp", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_big_timestamp", "code": "# Code from lines 1845 to 1851"}
{"name": "test_timestamp_date_comparison", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "left_fn"}, {"name": "right_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_date_comparison", "code": "# Code from lines 1875 to 1895"}
{"name": "test_large_timestamp", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_large_timestamp", "code": "# Code from lines 1910 to 1914"}
{"name": "test_timestamp_precision_output", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "ts"}, {"name": "scale"}, {"name": "unit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_precision_output", "code": "# Code from lines 2006 to 2011"}
{"name": "test_delta", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "start"}, {"name": "end"}, {"name": "unit"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_delta", "code": "# Code from lines 2067 to 2069"}
{"name": "test_timestamp_bucket", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "kws"}, {"name": "pd_freq"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_bucket", "code": "# Code from lines 2167 to 2171"}
{"name": "test_timestamp_bucket_offset", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "offset_mins"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_timestamp_bucket_offset", "code": "# Code from lines 2201 to 2209"}
{"name": "test_temporal_literal_sql", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "dialect"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_temporal_literal_sql", "code": "# Code from lines 2229 to 2232"}
{"name": "test_time_literal_sql", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dialect"}, {"name": "snapshot"}, {"name": "micros"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_time_literal_sql", "code": "# Code from lines 2258 to 2262"}
{"name": "test_date_scalar", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_date_scalar", "code": "# Code from lines 2326 to 2331"}
{"name": "test_simple_unix_date_offset", "file": "ibis/backends/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_simple_unix_date_offset", "code": "# Code from lines 2337 to 2343"}
{"name": "test_dataframe_interchange_no_execute", "file": "ibis/backends/tests/test_dataframe_interchange.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dataframe_interchange_no_execute", "code": "# Code from lines 13 to 53"}
{"name": "test_dataframe_interchange_dataframe_methods_execute", "file": "ibis/backends/tests/test_dataframe_interchange.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_dataframe_interchange_dataframe_methods_execute", "code": "# Code from lines 57 to 70"}
{"name": "test_dataframe_interchange_column_methods_execute", "file": "ibis/backends/tests/test_dataframe_interchange.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_dataframe_interchange_column_methods_execute", "code": "# Code from lines 74 to 99"}
{"name": "test_dataframe_interchange_select_after_execution_no_reexecute", "file": "ibis/backends/tests/test_dataframe_interchange.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_dataframe_interchange_select_after_execution_no_reexecute", "code": "# Code from lines 103 to 123"}
{"name": "test_aggregate", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_aggregate", "code": "# Code from lines 163 to 171"}
{"name": "test_aggregate_grouped", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_aggregate_grouped", "code": "# Code from lines 178 to 201"}
{"name": "test_reduction_ops", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}, {"name": "ibis_cond"}, {"name": "pandas_cond"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_reduction_ops", "code": "# Code from lines 517 to 540"}
{"name": "test_first_last", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "method"}, {"name": "filtered"}, {"name": "include_null"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_first_last", "code": "# Code from lines 583 to 607"}
{"name": "test_first_last_ordered", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "method"}, {"name": "filtered"}, {"name": "include_null"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_first_last_ordered", "code": "# Code from lines 643 to 659"}
{"name": "test_argmin_argmax", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "method"}, {"name": "filtered"}, {"name": "null_result"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_argmin_argmax", "code": "# Code from lines 677 to 692"}
{"name": "test_arbitrary", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "filtered"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_arbitrary", "code": "# Code from lines 709 to 724"}
{"name": "test_count_distinct_star", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "ibis_cond"}, {"name": "pandas_cond"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_count_distinct_star", "code": "# Code from lines 759 to 765"}
{"name": "test_quantile", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}, {"name": "ibis_cond"}, {"name": "pandas_cond"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_quantile", "code": "# Code from lines 852 to 863"}
{"name": "test_approx_quantile", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "filtered"}, {"name": "multi"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notyet"], "is_test": true, "test_name": "test_approx_quantile", "code": "# Code from lines 893 to 908"}
{"name": "test_corr_cov", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "batting"}, {"name": "batting_df"}, {"name": "result_fn"}, {"name": "expected_fn"}, {"name": "ibis_cond"}, {"name": "pandas_cond"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_corr_cov", "code": "# Code from lines 1073 to 1096"}
{"name": "test_approx_median", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_approx_median", "code": "# Code from lines 1104 to 1107"}
{"name": "test_median", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.never"], "is_test": true, "test_name": "test_median", "code": "# Code from lines 1122 to 1126"}
{"name": "test_string_quantile", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_quantile", "code": "# Code from lines 1178 to 1181"}
{"name": "test_date_quantile", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_date_quantile", "code": "# Code from lines 1215 to 1218"}
{"name": "test_group_concat", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "ibis_cond"}, {"name": "pandas_cond"}, {"name": "ibis_sep"}, {"name": "pandas_sep"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notyet"], "is_test": true, "test_name": "test_group_concat", "code": "# Code from lines 1262 to 1290"}
{"name": "test_group_concat_ordered", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "filtered"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_group_concat_ordered", "code": "# Code from lines 1307 to 1319"}
{"name": "test_collect", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "distinct"}, {"name": "filtered"}, {"name": "ordered"}, {"name": "include_null"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_collect", "code": "# Code from lines 1371 to 1393"}
{"name": "test_topk_op", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_topk_op", "code": "# Code from lines 1397 to 1407"}
{"name": "test_topk_filter_op", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_topk_filter_op", "code": "# Code from lines 1431 to 1444"}
{"name": "test_aggregate_list_like", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": "Tests .aggregate() where the result of an aggregation is a list-like.\n\nWe expect the list / np.array to be treated as a scalar (in other\nwords, the resulting table expression should have one element, which\nis the list / np.array).", "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "agg_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_aggregate_list_like", "code": "# Code from lines 1488 to 1504"}
{"name": "test_aggregate_mixed_udf", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": "Tests .aggregate() with multiple aggregations with mixed result types.\n\n(In particular, one aggregation that results in an array, and other\naggregation(s) that result in a non-array)", "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_aggregate_mixed_udf", "code": "# Code from lines 1538 to 1567"}
{"name": "test_binds_are_cast", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_binds_are_cast", "code": "# Code from lines 1570 to 1575"}
{"name": "test_agg_sort", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_agg_sort", "code": "# Code from lines 1578 to 1581"}
{"name": "test_filter", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter", "code": "# Code from lines 1584 to 1602"}
{"name": "test_agg_name_in_output_column", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_agg_name_in_output_column", "code": "# Code from lines 1605 to 1609"}
{"name": "test_grouped_case", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_grouped_case", "code": "# Code from lines 1612 to 1625"}
{"name": "test_group_concat_over_window", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_group_concat_over_window", "code": "# Code from lines 1647 to 1667"}
{"name": "test_value_counts_on_expr", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_counts_on_expr", "code": "# Code from lines 1670 to 1678"}
{"name": "test_group_by_expr", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail_version"], "is_test": true, "test_name": "test_group_by_expr", "code": "# Code from lines 1682 to 1695"}
{"name": "test_group_by_scalar", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet"], "is_test": true, "test_name": "test_group_by_scalar", "code": "# Code from lines 1704 to 1708"}
{"name": "test_empty_sum", "file": "ibis/backends/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_empty_sum", "code": "# Code from lines 1711 to 1717"}
{"name": "test_rowid", "file": "ibis/backends/tests/test_column.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_rowid", "code": "# Code from lines 31 to 40"}
{"name": "test_distinct_column", "file": "ibis/backends/tests/test_column.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "column"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_distinct_column", "code": "# Code from lines 47 to 51"}
{"name": "test_single_field", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "struct"}, {"name": "field"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_single_field", "code": "# Code from lines 42 to 49"}
{"name": "test_all_fields", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "struct"}, {"name": "struct_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_all_fields", "code": "# Code from lines 52 to 60"}
{"name": "test_literal", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_literal", "code": "# Code from lines 72 to 77"}
{"name": "test_null_literal", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "field"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.parametrize", "pytest.mark.notyet"], "is_test": true, "test_name": "test_null_literal", "code": "# Code from lines 86 to 91"}
{"name": "test_struct_column", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_struct_column", "code": "# Code from lines 95 to 103"}
{"name": "test_collect_into_struct", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_collect_into_struct", "code": "# Code from lines 107 to 125"}
{"name": "test_field_access_after_case", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_field_access_after_case", "code": "# Code from lines 137 to 141"}
{"name": "test_keyword_fields", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "nullable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_keyword_fields", "code": "# Code from lines 202 to 227"}
{"name": "test_isin_struct", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.xfail_version", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_isin_struct", "code": "# Code from lines 256 to 264"}
{"name": "test_field_overwrite_always_prefers_unpacked", "file": "ibis/backends/tests/test_struct.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_field_overwrite_always_prefers_unpacked", "code": "# Code from lines 277 to 299"}
{"name": "test_read_csv", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}, {"name": "in_table_name"}, {"name": "num_diamonds"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet"], "is_test": true, "test_name": "test_read_csv", "code": "# Code from lines 98 to 126"}
{"name": "test_read_csv_gz", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}, {"name": "gzip_csv"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_read_csv_gz", "code": "# Code from lines 144 to 148"}
{"name": "test_read_csv_with_dotted_name", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_read_csv_with_dotted_name", "code": "# Code from lines 164 to 173"}
{"name": "test_read_csv_schema", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_read_csv_schema", "code": "# Code from lines 189 to 208"}
{"name": "test_read_csv_glob", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}, {"name": "ft_data"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_read_csv_glob", "code": "# Code from lines 224 to 237"}
{"name": "test_read_parquet", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}, {"name": "data_dir"}, {"name": "fname"}, {"name": "in_table_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet"], "is_test": true, "test_name": "test_read_parquet", "code": "# Code from lines 260 to 277"}
{"name": "test_read_parquet_iterator", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}, {"name": "data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_read_parquet_iterator", "code": "# Code from lines 311 to 332"}
{"name": "test_read_parquet_glob", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}, {"name": "ft_data"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_read_parquet_glob", "code": "# Code from lines 348 to 361"}
{"name": "test_read_json_glob", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}, {"name": "ft_data"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_read_json_glob", "code": "# Code from lines 383 to 397"}
{"name": "test_read_garbage", "file": "ibis/backends/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_read_garbage", "code": "# Code from lines 419 to 430"}
{"name": "test_ifelse_select", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse_select", "code": "# Code from lines 11 to 31"}
{"name": "test_ifelse_column", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse_column", "code": "# Code from lines 34 to 47"}
{"name": "test_substitute", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_substitute", "code": "# Code from lines 50 to 60"}
{"name": "test_value_cases_scalar", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "inp"}, {"name": "exp"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_value_cases_scalar", "code": "# Code from lines 78 to 86"}
{"name": "test_value_cases_column", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_cases_column", "code": "# Code from lines 89 to 103"}
{"name": "test_ibis_cases_scalar", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ibis_cases_scalar", "code": "# Code from lines 106 to 109"}
{"name": "test_ibis_cases_column", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_ibis_cases_column", "code": "# Code from lines 117 to 132"}
{"name": "test_value_cases_null", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": "CASE x WHEN NULL never gets hit", "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_value_cases_null", "code": "# Code from lines 136 to 139"}
{"name": "test_ibis_case_still_works", "file": "ibis/backends/tests/test_conditionals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "example"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ibis_case_still_works", "code": "# Code from lines 162 to 172"}
{"name": "test_signatures", "file": "ibis/backends/tests/test_signatures.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "base_cls"}, {"name": "method"}, {"name": "backend_cls"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_signatures", "code": "# Code from lines 92 to 100"}
{"name": "test_null_literal", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_null_literal", "code": "# Code from lines 64 to 73"}
{"name": "test_null_literal_typed", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_null_literal_typed", "code": "# Code from lines 81 to 86"}
{"name": "test_null_literal_typed_typeof", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_literal_typed_typeof", "code": "# Code from lines 105 to 117"}
{"name": "test_boolean_literal", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_boolean_literal", "code": "# Code from lines 120 to 127"}
{"name": "test_scalar_fill_null_nullif", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_scalar_fill_null_nullif", "code": "# Code from lines 139 to 148"}
{"name": "test_isna", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "col"}, {"name": "value"}, {"name": "filt"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isna", "code": "# Code from lines 181 to 188"}
{"name": "test_column_fill_null", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_column_fill_null", "code": "# Code from lines 231 to 237"}
{"name": "test_coalesce", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coalesce", "code": "# Code from lines 248 to 257"}
{"name": "test_identical_to", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "sorted_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_identical_to", "code": "# Code from lines 261 to 275"}
{"name": "test_isin", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "sorted_df"}, {"name": "column"}, {"name": "elements"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_isin", "code": "# Code from lines 290 to 299"}
{"name": "test_notin", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "sorted_df"}, {"name": "column"}, {"name": "elements"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_notin", "code": "# Code from lines 314 to 323"}
{"name": "test_filter", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "sorted_df"}, {"name": "predicate_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_filter", "code": "# Code from lines 349 to 355"}
{"name": "test_filter_with_window_op", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "sorted_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_filter_with_window_op", "code": "# Code from lines 379 to 389"}
{"name": "test_case_where", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_case_where", "code": "# Code from lines 392 to 414"}
{"name": "test_select_filter_mutate", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": "Test that select, filter and mutate are executed in right order.\n\nBefore PR #2635, try_fusion in analysis.py would fuse these\noperations together in a way that the order of the operations were\nwrong. (mutate was executed before filter).", "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_select_filter_mutate", "code": "# Code from lines 422 to 446"}
{"name": "test_table_fill_null_invalid", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_fill_null_invalid", "code": "# Code from lines 449 to 463"}
{"name": "test_table_fill_null_mapping", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "replacements"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_fill_null_mapping", "code": "# Code from lines 475 to 486"}
{"name": "test_table_fill_null_scalar", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_fill_null_scalar", "code": "# Code from lines 489 to 503"}
{"name": "test_mutate_rename", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate_rename", "code": "# Code from lines 506 to 514"}
{"name": "test_drop_null_invalid", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_null_invalid", "code": "# Code from lines 517 to 524"}
{"name": "test_drop_null_table", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "how"}, {"name": "subset"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_drop_null_table", "code": "# Code from lines 543 to 563"}
{"name": "test_order_by", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "key"}, {"name": "df_kwargs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_order_by", "code": "# Code from lines 581 to 584"}
{"name": "test_order_by_random", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_order_by_random", "code": "# Code from lines 592 to 599"}
{"name": "test_order_by_nulls_default", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_order_by_nulls_default", "code": "# Code from lines 611 to 620"}
{"name": "test_order_by_nulls", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "nulls_first"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_order_by_nulls", "code": "# Code from lines 632 to 640"}
{"name": "test_order_by_two_cols_nulls", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op1"}, {"name": "nf1"}, {"name": "nf2"}, {"name": "op2"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.never", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_order_by_two_cols_nulls", "code": "# Code from lines 709 to 728"}
{"name": "test_table_info", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_table_info", "code": "# Code from lines 736 to 749"}
{"name": "test_table_info_large", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_table_info_large", "code": "# Code from lines 760 to 766"}
{"name": "test_table_describe", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "selector"}, {"name": "expected_columns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_describe", "code": "# Code from lines 896 to 902"}
{"name": "test_table_describe_large", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_table_describe_large", "code": "# Code from lines 929 to 935"}
{"name": "test_isin_notin", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "ibis_op"}, {"name": "pandas_op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isin_notin", "code": "# Code from lines 955 to 959"}
{"name": "test_isin_notin_column_expr", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "ibis_op"}, {"name": "pandas_op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isin_notin_column_expr", "code": "# Code from lines 987 to 991"}
{"name": "test_logical_negation_literal", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_logical_negation_literal", "code": "# Code from lines 1003 to 1004"}
{"name": "test_logical_negation_column", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_logical_negation_column", "code": "# Code from lines 1008 to 1011"}
{"name": "test_zero_ifnull_literals", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "dtype"}, {"name": "zero"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_zero_ifnull_literals", "code": "# Code from lines 1018 to 1020"}
{"name": "test_zero_ifnull_column", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_zero_ifnull_column", "code": "# Code from lines 1023 to 1027"}
{"name": "test_select_filter", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_filter", "code": "# Code from lines 1030 to 1042"}
{"name": "test_select_filter_select", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_filter_select", "code": "# Code from lines 1045 to 1051"}
{"name": "test_between", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_between", "code": "# Code from lines 1054 to 1059"}
{"name": "test_interactive", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_interactive", "code": "# Code from lines 1063 to 1072"}
{"name": "test_uncorrelated_subquery", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "batting"}, {"name": "batting_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_uncorrelated_subquery", "code": "# Code from lines 1081 to 1087"}
{"name": "test_int_column", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_int_column", "code": "# Code from lines 1090 to 1094"}
{"name": "test_int_scalar", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_int_scalar", "code": "# Code from lines 1097 to 1100"}
{"name": "test_exists", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}, {"name": "awards_players"}, {"name": "method_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_exists", "code": "# Code from lines 1108 to 1116"}
{"name": "test_typeof", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_typeof", "code": "# Code from lines 1123 to 1128"}
{"name": "test_isin_uncorrelated_simple", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.xfail_version", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_isin_uncorrelated_simple", "code": "# Code from lines 1145 to 1154"}
{"name": "test_isin_uncorrelated", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "batting"}, {"name": "awards_players"}, {"name": "batting_df"}, {"name": "awards_players_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.xfail_version", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_isin_uncorrelated", "code": "# Code from lines 1171 to 1186"}
{"name": "test_isin_uncorrelated_filter", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "batting"}, {"name": "awards_players"}, {"name": "batting_df"}, {"name": "awards_players_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isin_uncorrelated_filter", "code": "# Code from lines 1189 to 1205"}
{"name": "test_literal_na", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_na", "code": "# Code from lines 1253 to 1256"}
{"name": "test_memtable_bool_column", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_bool_column", "code": "# Code from lines 1259 to 1262"}
{"name": "test_memtable_construct_from_pyarrow", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_construct_from_pyarrow", "code": "# Code from lines 1265 to 1280"}
{"name": "test_memtable_construct_from_pyarrow_c_stream", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_memtable_construct_from_pyarrow_c_stream", "code": "# Code from lines 1286 to 1301"}
{"name": "test_memtable_construct_from_polars", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "lazy"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_memtable_construct_from_polars", "code": "# Code from lines 1305 to 1319"}
{"name": "test_memtable_column_naming", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}, {"name": "df"}, {"name": "columns"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_memtable_column_naming", "code": "# Code from lines 1332 to 1336"}
{"name": "test_memtable_column_naming_mismatch", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}, {"name": "df"}, {"name": "columns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_memtable_column_naming_mismatch", "code": "# Code from lines 1348 to 1352"}
{"name": "test_memtable_from_geopandas_dataframe", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_memtable_from_geopandas_dataframe", "code": "# Code from lines 1366 to 1373"}
{"name": "test_pivot_longer", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_pivot_longer", "code": "# Code from lines 1393 to 1423"}
{"name": "test_pivot_wider", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pivot_wider", "code": "# Code from lines 1426 to 1439"}
{"name": "test_select_distinct_order_by", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_distinct_order_by", "code": "# Code from lines 1442 to 1445"}
{"name": "test_select_distinct_order_by_alias", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_select_distinct_order_by_alias", "code": "# Code from lines 1456 to 1465"}
{"name": "test_select_distinct_order_by_expr", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_distinct_order_by_expr", "code": "# Code from lines 1468 to 1471"}
{"name": "test_select_distinct_filter_order_by_commute", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": "For simple versions of these ops, the order in which they're called\ndoesn't matter, they're all handled in a commutative way.", "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "ops"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_select_distinct_filter_order_by_commute", "code": "# Code from lines 1485 to 1503"}
{"name": "test_distinct_on_keep", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "on"}, {"name": "keep"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_distinct_on_keep", "code": "# Code from lines 1550 to 1565"}
{"name": "test_distinct_on_keep_is_none", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "on"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_distinct_on_keep_is_none", "code": "# Code from lines 1611 to 1626"}
{"name": "test_hash", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_hash", "code": "# Code from lines 1676 to 1683"}
{"name": "test_hashbytes", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_hashbytes", "code": "# Code from lines 1703 to 1714"}
{"name": "test_hexdigest", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_hexdigest", "code": "# Code from lines 1735 to 1746"}
{"name": "test_cast", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "from_type"}, {"name": "to_type"}, {"name": "from_val"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cast", "code": "# Code from lines 1794 to 1797"}
{"name": "test_try_cast", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "from_val"}, {"name": "to_type"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_try_cast", "code": "# Code from lines 1835 to 1838"}
{"name": "test_try_cast_null", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "from_val"}, {"name": "to_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_try_cast_null", "code": "# Code from lines 1876 to 1877"}
{"name": "test_try_cast_table", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_try_cast_table", "code": "# Code from lines 1893 to 1902"}
{"name": "test_try_cast_func", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "from_val"}, {"name": "to_type"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_try_cast_func", "code": "# Code from lines 1932 to 1935"}
{"name": "test_static_table_slice", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "slc"}, {"name": "expected_count_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_static_table_slice", "code": "# Code from lines 2052 to 2059"}
{"name": "test_dynamic_table_slice", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "slc"}, {"name": "expected_count_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.never", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_dynamic_table_slice", "code": "# Code from lines 2156 to 2163"}
{"name": "test_dynamic_table_slice_with_computed_offset", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.never", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_dynamic_table_slice_with_computed_offset", "code": "# Code from lines 2224 to 2239"}
{"name": "test_sample", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "method"}, {"name": "alltypes"}, {"name": "subquery"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_sample", "code": "# Code from lines 2246 to 2255"}
{"name": "test_sample_memtable", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_sample_memtable", "code": "# Code from lines 2259 to 2263"}
{"name": "test_sample_with_seed", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_sample_with_seed", "code": "# Code from lines 2287 to 2292"}
{"name": "test_simple_memtable_construct", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_memtable_construct", "code": "# Code from lines 2295 to 2299"}
{"name": "test_select_mutate_with_dict", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_mutate_with_dict", "code": "# Code from lines 2302 to 2312"}
{"name": "test_select_scalar", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_scalar", "code": "# Code from lines 2315 to 2318"}
{"name": "test_isnull_equality", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_isnull_equality", "code": "# Code from lines 2322 to 2330"}
{"name": "test_subsequent_overlapping_order_by", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_subsequent_overlapping_order_by", "code": "# Code from lines 2338 to 2347"}
{"name": "test_select_sort_sort", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_select_sort_sort", "code": "# Code from lines 2362 to 2379"}
{"name": "test_select_sort_sort_deferred", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_select_sort_sort_deferred", "code": "# Code from lines 2394 to 2426"}
{"name": "test_topk_counts_null", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_topk_counts_null", "code": "# Code from lines 2434 to 2439"}
{"name": "test_null_isin_null_is_null", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.never"], "is_test": true, "test_name": "test_null_isin_null_is_null", "code": "# Code from lines 2452 to 2455"}
{"name": "test_value_counts_on_tables", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_counts_on_tables", "code": "# Code from lines 2458 to 2469"}
{"name": "test_union_generates_predictable_aliases", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_union_generates_predictable_aliases", "code": "# Code from lines 2472 to 2478"}
{"name": "test_pivot_wider_empty_id_columns", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "id_cols"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_pivot_wider_empty_id_columns", "code": "# Code from lines 2484 to 2511"}
{"name": "test_simple_pivot_wider", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_simple_pivot_wider", "code": "# Code from lines 2519 to 2526"}
{"name": "test_named_literal", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_named_literal", "code": "# Code from lines 2529 to 2534"}
{"name": "test_table_describe_with_multiple_decimal_columns", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_table_describe_with_multiple_decimal_columns", "code": "# Code from lines 2565 to 2571"}
{"name": "test_empty_memtable", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "input"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_empty_memtable", "code": "# Code from lines 2583 to 2585"}
{"name": "test_order_by_preservation", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by_preservation", "code": "# Code from lines 2588 to 2591"}
{"name": "test_distinct_delete_duplicates_entirely", "file": "ibis/backends/tests/test_generic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_distinct_delete_duplicates_entirely", "code": "# Code from lines 2594 to 2597"}
{"name": "test_literal", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "expr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.never"], "is_test": true, "test_name": "test_literal", "code": "# Code from lines 48 to 49"}
{"name": "test_group_by_has_index", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_group_by_has_index", "code": "# Code from lines 53 to 72"}
{"name": "test_cte_refs_in_topo_order", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_cte_refs_in_topo_order", "code": "# Code from lines 76 to 85"}
{"name": "test_isin_bug", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_isin_bug", "code": "# Code from lines 89 to 93"}
{"name": "test_union_aliasing", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_union_aliasing", "code": "# Code from lines 109 to 158"}
{"name": "test_selects_with_impure_operations_not_merged", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_selects_with_impure_operations_not_merged", "code": "# Code from lines 182 to 188"}
{"name": "test_to_sql_default_backend", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_to_sql_default_backend", "code": "# Code from lines 192 to 198"}
{"name": "test_many_subqueries", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_many_subqueries", "code": "# Code from lines 202 to 212"}
{"name": "test_mixed_qualified_and_unqualified_predicates", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_mixed_qualified_and_unqualified_predicates", "code": "# Code from lines 217 to 230"}
{"name": "test_rewrite_context", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}, {"name": "backend_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_rewrite_context", "code": "# Code from lines 240 to 244"}
{"name": "test_sample", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend_name"}, {"name": "snapshot"}, {"name": "subquery"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_sample", "code": "# Code from lines 255 to 262"}
{"name": "test_order_by_no_deference_literals", "file": "ibis/backends/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_order_by_no_deference_literals", "code": "# Code from lines 267 to 272"}
{"name": "test_notimpl", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_notimpl", "code": "# Code from lines 11 to 12"}
{"name": "test_notimpl_raises_none", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_notimpl_raises_none", "code": "# Code from lines 16 to 17"}
{"name": "test_notimpl_raises_none_tuple", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_notimpl_raises_none_tuple", "code": "# Code from lines 21 to 22"}
{"name": "test_notimpl_raises_tuple_exception_none", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_notimpl_raises_tuple_exception_none", "code": "# Code from lines 26 to 27"}
{"name": "test_notyet", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_notyet", "code": "# Code from lines 31 to 32"}
{"name": "test_notyet_raises_none", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_notyet_raises_none", "code": "# Code from lines 36 to 37"}
{"name": "test_notyet_raises_none_tuple", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_notyet_raises_none_tuple", "code": "# Code from lines 41 to 42"}
{"name": "test_notyet_raises_tuple_exception_none", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_notyet_raises_tuple_exception_none", "code": "# Code from lines 46 to 47"}
{"name": "test_never", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_never", "code": "# Code from lines 51 to 52"}
{"name": "test_never_raises_none", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_never_raises_none", "code": "# Code from lines 56 to 57"}
{"name": "test_never_raises_none_tuple", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_never_raises_none_tuple", "code": "# Code from lines 61 to 62"}
{"name": "test_never_raises_tuple_exception_none", "file": "ibis/backends/tests/test_markers.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never"], "is_test": true, "test_name": "test_never_raises_tuple_exception_none", "code": "# Code from lines 66 to 67"}
{"name": "test_numeric_literal", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "expr"}, {"name": "expected_types"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_numeric_literal", "code": "# Code from lines 255 to 261"}
{"name": "test_decimal_literal", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "expr"}, {"name": "expected_types"}, {"name": "expected_result"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_decimal_literal", "code": "# Code from lines 635 to 647"}
{"name": "test_isnan_isinf", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "operand_fn"}, {"name": "expected_operand_fn"}, {"name": "expr_fn"}, {"name": "expected_expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_isnan_isinf", "code": "# Code from lines 718 to 740"}
{"name": "test_math_functions_literals", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_math_functions_literals", "code": "# Code from lines 829 to 837"}
{"name": "test_trig_functions_literals", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_trig_functions_literals", "code": "# Code from lines 853 to 855"}
{"name": "test_trig_functions_columns", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "expr"}, {"name": "alltypes"}, {"name": "df"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_trig_functions_columns", "code": "# Code from lines 879 to 884"}
{"name": "test_cotangent", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cotangent", "code": "# Code from lines 887 to 892"}
{"name": "test_simple_math_functions_columns", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "expr_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple_math_functions_columns", "code": "# Code from lines 944 to 950"}
{"name": "test_floor_divide_precedence", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_floor_divide_precedence", "code": "# Code from lines 953 to 957"}
{"name": "test_complex_math_functions_columns", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "expr_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_complex_math_functions_columns", "code": "# Code from lines 1036 to 1042"}
{"name": "test_backend_specific_numerics", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "df"}, {"name": "alltypes"}, {"name": "expr_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_backend_specific_numerics", "code": "# Code from lines 1097 to 1101"}
{"name": "test_binary_arithmetic_operations", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "opname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_binary_arithmetic_operations", "code": "# Code from lines 1105 to 1120"}
{"name": "test_integer_truediv", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_integer_truediv", "code": "# Code from lines 1123 to 1126"}
{"name": "test_mod", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mod", "code": "# Code from lines 1129 to 1136"}
{"name": "test_floating_mod", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_floating_mod", "code": "# Code from lines 1150 to 1157"}
{"name": "test_divide_by_zero", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "column"}, {"name": "denominator"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_divide_by_zero", "code": "# Code from lines 1283 to 1290"}
{"name": "test_random", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_random", "code": "# Code from lines 1296 to 1300"}
{"name": "test_random_different_per_row", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_random_different_per_row", "code": "# Code from lines 1306 to 1308"}
{"name": "test_clip", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "ibis_func"}, {"name": "pandas_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_clip", "code": "# Code from lines 1351 to 1356"}
{"name": "test_histogram", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_histogram", "code": "# Code from lines 1365 to 1377"}
{"name": "test_constants", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "const"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_constants", "code": "# Code from lines 1381 to 1384"}
{"name": "test_bitwise_columns", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "op"}, {"name": "left_fn"}, {"name": "right_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "flink_no_bitwise"], "is_test": true, "test_name": "test_bitwise_columns", "code": "# Code from lines 1411 to 1416"}
{"name": "test_bitwise_shift", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "op"}, {"name": "left_fn"}, {"name": "right_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notimpl", "flink_no_bitwise"], "is_test": true, "test_name": "test_bitwise_shift", "code": "# Code from lines 1443 to 1454"}
{"name": "test_bitwise_scalars", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "flink_no_bitwise"], "is_test": true, "test_name": "test_bitwise_scalars", "code": "# Code from lines 1490 to 1494"}
{"name": "test_bitwise_not_scalar", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "flink_no_bitwise"], "is_test": true, "test_name": "test_bitwise_not_scalar", "code": "# Code from lines 1500 to 1504"}
{"name": "test_bitwise_not_col", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "flink_no_bitwise"], "is_test": true, "test_name": "test_bitwise_not_col", "code": "# Code from lines 1510 to 1514"}
{"name": "test_column_round_is_integer", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_round_is_integer", "code": "# Code from lines 1517 to 1528"}
{"name": "test_scalar_round_is_integer", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_round_is_integer", "code": "# Code from lines 1531 to 1536"}
{"name": "test_memtable_decimal", "file": "ibis/backends/tests/test_numeric.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "numbers"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_memtable_decimal", "code": "# Code from lines 1561 to 1571"}
{"name": "test_udf", "file": "ibis/backends/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["no_python_udfs", "cloudpickle_version_mismatch", "mark.notyet"], "is_test": true, "test_name": "test_udf", "code": "# Code from lines 39 to 57"}
{"name": "test_map_udf", "file": "ibis/backends/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["no_python_udfs", "cloudpickle_version_mismatch", "mark.notimpl", "mark.never", "mark.notyet", "mark.notyet"], "is_test": true, "test_name": "test_map_udf", "code": "# Code from lines 72 to 88"}
{"name": "test_map_merge_udf", "file": "ibis/backends/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["no_python_udfs", "cloudpickle_version_mismatch", "mark.notimpl", "mark.never", "mark.notyet", "mark.notyet"], "is_test": true, "test_name": "test_map_merge_udf", "code": "# Code from lines 101 to 140"}
{"name": "test_vectorized_udf", "file": "ibis/backends/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "batting"}, {"name": "add_one"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["no_python_udfs", "mark.notyet", "mark.notyet", "mark.parametrize"], "is_test": true, "test_name": "test_vectorized_udf", "code": "# Code from lines 194 to 210"}
{"name": "test_binary_literal", "file": "ibis/backends/tests/test_binary.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_binary_literal", "code": "# Code from lines 35 to 42"}
{"name": "test_macaddr_literal", "file": "ibis/backends/tests/test_network.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_macaddr_literal", "code": "# Code from lines 31 to 39"}
{"name": "test_inet_literal", "file": "ibis/backends/tests/test_network.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "test_value"}, {"name": "expected_values"}, {"name": "expected_types"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_inet_literal", "code": "# Code from lines 122 to 130"}
{"name": "test_elementwise_udf", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf_df"}, {"name": "udf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_elementwise_udf", "code": "# Code from lines 272 to 282"}
{"name": "test_elementwise_udf_mutate", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf_df"}, {"name": "udf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_elementwise_udf_mutate", "code": "# Code from lines 286 to 297"}
{"name": "test_analytic_udf", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_analytic_udf", "code": "# Code from lines 301 to 305"}
{"name": "test_analytic_udf_mutate", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf_df"}, {"name": "udf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_analytic_udf_mutate", "code": "# Code from lines 310 to 316"}
{"name": "test_reduction_udf", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_alltypes"}, {"name": "udf_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_reduction_udf", "code": "# Code from lines 319 to 322"}
{"name": "test_reduction_udf_array_return_type", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": "Tests reduction UDF returning an array.", "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_reduction_udf_array_return_type", "code": "# Code from lines 325 to 336"}
{"name": "test_reduction_udf_on_empty_data", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": "Test that summarization can handle empty data.", "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_reduction_udf_on_empty_data", "code": "# Code from lines 339 to 347"}
{"name": "test_output_type_in_list_invalid", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_output_type_in_list_invalid", "code": "# Code from lines 350 to 361"}
{"name": "test_valid_kwargs", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_valid_kwargs", "code": "# Code from lines 364 to 402"}
{"name": "test_valid_args", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_valid_args", "code": "# Code from lines 405 to 427"}
{"name": "test_valid_args_and_kwargs", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_valid_args_and_kwargs", "code": "# Code from lines 430 to 469"}
{"name": "test_invalid_kwargs", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_kwargs", "code": "# Code from lines 472 to 481"}
{"name": "test_elementwise_udf_destruct", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_elementwise_udf_destruct", "code": "# Code from lines 485 to 495"}
{"name": "test_elementwise_udf_overwrite_destruct", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_elementwise_udf_overwrite_destruct", "code": "# Code from lines 498 to 514"}
{"name": "test_elementwise_udf_overwrite_destruct_and_assign", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_elementwise_udf_overwrite_destruct_and_assign", "code": "# Code from lines 517 to 539"}
{"name": "test_elementwise_udf_destructure_exact_once", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_alltypes"}, {"name": "func"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_elementwise_udf_destructure_exact_once", "code": "# Code from lines 547 to 565"}
{"name": "test_elementwise_udf_multiple_overwrite_destruct", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_elementwise_udf_multiple_overwrite_destruct", "code": "# Code from lines 568 to 585"}
{"name": "test_elementwise_udf_named_destruct", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": "Test error when assigning name to a destruct column.", "signature": {"args": [{"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_elementwise_udf_named_destruct", "code": "# Code from lines 588 to 597"}
{"name": "test_elementwise_udf_struct", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_elementwise_udf_struct", "code": "# Code from lines 600 to 617"}
{"name": "test_analytic_udf_destruct", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_analytic_udf_destruct", "code": "# Code from lines 622 to 633"}
{"name": "test_analytic_udf_destruct_no_group_by", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_analytic_udf_destruct_no_group_by", "code": "# Code from lines 637 to 652"}
{"name": "test_analytic_udf_destruct_overwrite", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_analytic_udf_destruct_overwrite", "code": "# Code from lines 656 to 677"}
{"name": "test_reduction_udf_destruct_group_by", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}, {"name": "udf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_reduction_udf_destruct_group_by", "code": "# Code from lines 682 to 702"}
{"name": "test_reduction_udf_destruct_no_group_by", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_reduction_udf_destruct_no_group_by", "code": "# Code from lines 706 to 716"}
{"name": "test_reduction_udf_destruct_no_group_by_overwrite", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_reduction_udf_destruct_no_group_by_overwrite", "code": "# Code from lines 720 to 737"}
{"name": "test_reduction_udf_destruct_window", "file": "ibis/backends/tests/test_vectorized_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "udf_backend"}, {"name": "udf_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_reduction_udf_destruct_window", "code": "# Code from lines 742 to 760"}
{"name": "test_grouped_bounded_expanding_window", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_grouped_bounded_expanding_window", "code": "# Code from lines 310 to 332"}
{"name": "test_ungrouped_bounded_expanding_window", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_ungrouped_bounded_expanding_window", "code": "# Code from lines 393 to 409"}
{"name": "test_grouped_bounded_following_window", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "preceding"}, {"name": "following"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_grouped_bounded_following_window", "code": "# Code from lines 422 to 453"}
{"name": "test_grouped_bounded_preceding_window", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "window_fn"}, {"name": "window_size"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_grouped_bounded_preceding_window", "code": "# Code from lines 514 to 535"}
{"name": "test_grouped_unbounded_window", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_grouped_unbounded_window", "code": "# Code from lines 586 to 601"}
{"name": "test_simple_ungrouped_unbound_following_window", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "ibis_method_name"}, {"name": "pandas_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_simple_ungrouped_unbound_following_window", "code": "# Code from lines 621 to 632"}
{"name": "test_simple_ungrouped_window_with_scalar_order_by", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.never", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_simple_ungrouped_window_with_scalar_order_by", "code": "# Code from lines 649 to 654"}
{"name": "test_ungrouped_unbounded_window", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "result_fn"}, {"name": "expected_fn"}, {"name": "ordered"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_ungrouped_unbounded_window", "code": "# Code from lines 924 to 946"}
{"name": "test_grouped_bounded_range_window", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_grouped_bounded_range_window", "code": "# Code from lines 960 to 1005"}
{"name": "test_percent_rank_whole_table_no_order_by", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_percent_rank_whole_table_no_order_by", "code": "# Code from lines 1020 to 1027"}
{"name": "test_grouped_ordered_window_coalesce", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_grouped_ordered_window_coalesce", "code": "# Code from lines 1032 to 1062"}
{"name": "test_mutate_window_filter", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_mutate_window_filter", "code": "# Code from lines 1072 to 1083"}
{"name": "test_first_last", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_first_last", "code": "# Code from lines 1088 to 1109"}
{"name": "test_range_expression_bounds", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_range_expression_bounds", "code": "# Code from lines 1142 to 1174"}
{"name": "test_rank_followed_by_over_call_merge_frames", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.never", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_rank_followed_by_over_call_merge_frames", "code": "# Code from lines 1192 to 1209"}
{"name": "test_windowed_order_by_sequence_is_preserved", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_windowed_order_by_sequence_is_preserved", "code": "# Code from lines 1224 to 1239"}
{"name": "test_duplicate_ordered_sum", "file": "ibis/backends/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_duplicate_ordered_sum", "code": "# Code from lines 1258 to 1288"}
{"name": "test_map_nulls", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "k"}, {"name": "v"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.parametrize", "mark_notyet_datafusion"], "is_test": true, "test_name": "test_map_nulls", "code": "# Code from lines 46 to 50"}
{"name": "test_map_keys_nulls", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "k"}, {"name": "v"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.parametrize", "mark_notyet_datafusion"], "is_test": true, "test_name": "test_map_keys_nulls", "code": "# Code from lines 62 to 66"}
{"name": "test_map_values_nulls", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "map"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.parametrize", "mark_notyet_datafusion"], "is_test": true, "test_name": "test_map_values_nulls", "code": "# Code from lines 90 to 91"}
{"name": "test_map_get_contains_nulls", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "map"}, {"name": "key"}, {"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_map_get_contains_nulls", "code": "# Code from lines 156 to 158"}
{"name": "test_map_merge_nulls", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "m1"}, {"name": "m2"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.parametrize", "mark_notyet_datafusion"], "is_test": true, "test_name": "test_map_merge_nulls", "code": "# Code from lines 183 to 185"}
{"name": "test_map_table", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_datafusion"], "is_test": true, "test_name": "test_map_table", "code": "# Code from lines 189 to 192"}
{"name": "test_column_map_values", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_datafusion"], "is_test": true, "test_name": "test_column_map_values", "code": "# Code from lines 196 to 201"}
{"name": "test_column_map_merge", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_datafusion", "pytest.mark.notyet"], "is_test": true, "test_name": "test_column_map_merge", "code": "# Code from lines 208 to 218"}
{"name": "test_literal_map_keys", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_map_keys", "code": "# Code from lines 221 to 228"}
{"name": "test_literal_map_values", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_map_values", "code": "# Code from lines 231 to 236"}
{"name": "test_scalar_isin_literal_map_keys", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_isin_literal_map_keys", "code": "# Code from lines 239 to 246"}
{"name": "test_map_scalar_contains_key_scalar", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_scalar_contains_key_scalar", "code": "# Code from lines 249 to 256"}
{"name": "test_map_scalar_contains_key_column", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_scalar_contains_key_column", "code": "# Code from lines 259 to 265"}
{"name": "test_map_column_contains_key_scalar", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_column_contains_key_scalar", "code": "# Code from lines 268 to 275"}
{"name": "test_map_column_contains_key_column", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_column_contains_key_column", "code": "# Code from lines 278 to 284"}
{"name": "test_literal_map_merge", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_datafusion", "pytest.mark.notyet"], "is_test": true, "test_name": "test_literal_map_merge", "code": "# Code from lines 291 to 296"}
{"name": "test_literal_map_getitem_broadcast", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_datafusion"], "is_test": true, "test_name": "test_literal_map_getitem_broadcast", "code": "# Code from lines 300 to 309"}
{"name": "test_map_get_all_types", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "keys"}, {"name": "values"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["values", "keys", "mark_notyet_datafusion"], "is_test": true, "test_name": "test_map_get_all_types", "code": "# Code from lines 431 to 436"}
{"name": "test_map_contains_all_types", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "keys"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["keys"], "is_test": true, "test_name": "test_map_contains_all_types", "code": "# Code from lines 440 to 444"}
{"name": "test_literal_map_get_broadcast", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_datafusion"], "is_test": true, "test_name": "test_literal_map_get_broadcast", "code": "# Code from lines 448 to 457"}
{"name": "test_map_construct_dict", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "keys"}, {"name": "values"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_map_construct_dict", "code": "# Code from lines 467 to 470"}
{"name": "test_map_construct_array_column", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_map_construct_array_column", "code": "# Code from lines 478 to 483"}
{"name": "test_map_get_with_compatible_value_smaller", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_postgres"], "is_test": true, "test_name": "test_map_get_with_compatible_value_smaller", "code": "# Code from lines 487 to 490"}
{"name": "test_map_get_with_compatible_value_bigger", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_postgres"], "is_test": true, "test_name": "test_map_get_with_compatible_value_bigger", "code": "# Code from lines 494 to 497"}
{"name": "test_map_get_with_incompatible_value_different_kind", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_postgres"], "is_test": true, "test_name": "test_map_get_with_incompatible_value_different_kind", "code": "# Code from lines 501 to 504"}
{"name": "test_map_get_with_null_on_not_nullable", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "null_value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_datafusion", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_map_get_with_null_on_not_nullable", "code": "# Code from lines 509 to 514"}
{"name": "test_map_get_with_null_on_null_type_with_null", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "null_value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_map_get_with_null_on_null_type_with_null", "code": "# Code from lines 526 to 530"}
{"name": "test_map_get_with_null_on_null_type_with_non_null", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "mark_notyet_postgres"], "is_test": true, "test_name": "test_map_get_with_null_on_null_type_with_non_null", "code": "# Code from lines 537 to 540"}
{"name": "test_map_create_table", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "mark_notyet_datafusion"], "is_test": true, "test_name": "test_map_create_table", "code": "# Code from lines 549 to 554"}
{"name": "test_map_length", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_map_length", "code": "# Code from lines 562 to 564"}
{"name": "test_map_keys_unnest", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_datafusion"], "is_test": true, "test_name": "test_map_keys_unnest", "code": "# Code from lines 568 to 571"}
{"name": "test_map_contains_null", "file": "ibis/backends/tests/test_map.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_contains_null", "code": "# Code from lines 574 to 577"}
{"name": "test_impure_correlated", "file": "ibis/backends/tests/test_impure.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "impure"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "mark_impures"], "is_test": true, "test_name": "test_impure_correlated", "code": "# Code from lines 95 to 108"}
{"name": "test_chained_selections", "file": "ibis/backends/tests/test_impure.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "impure"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "mark_impures"], "is_test": true, "test_name": "test_chained_selections", "code": "# Code from lines 114 to 127"}
{"name": "test_impure_uncorrelated_different_id", "file": "ibis/backends/tests/test_impure.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "impure"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "impure_params_uncorrelated"], "is_test": true, "test_name": "test_impure_uncorrelated_different_id", "code": "# Code from lines 170 to 179"}
{"name": "test_impure_uncorrelated_same_id", "file": "ibis/backends/tests/test_impure.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "impure"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "impure_params_uncorrelated"], "is_test": true, "test_name": "test_impure_uncorrelated_same_id", "code": "# Code from lines 185 to 191"}
{"name": "test_self_join_with_generated_keys", "file": "ibis/backends/tests/test_impure.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_self_join_with_generated_keys", "code": "# Code from lines 220 to 231"}
{"name": "test_backend_name", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_backend_name", "code": "# Code from lines 11 to 13"}
{"name": "test_version", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_version", "code": "# Code from lines 18 to 19"}
{"name": "test_catalog_consistency", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_catalog_consistency", "code": "# Code from lines 40 to 55"}
{"name": "test_list_tables", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 58 to 64"}
{"name": "test_tables_accessor_mapping", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tables_accessor_mapping", "code": "# Code from lines 67 to 82"}
{"name": "test_tables_accessor_getattr", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tables_accessor_getattr", "code": "# Code from lines 85 to 95"}
{"name": "test_tables_accessor_tab_completion", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tables_accessor_tab_completion", "code": "# Code from lines 98 to 105"}
{"name": "test_tables_accessor_repr", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tables_accessor_repr", "code": "# Code from lines 108 to 111"}
{"name": "test_limit_chain", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_limit_chain", "code": "# Code from lines 121 to 124"}
{"name": "test_unbind", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_unbind", "code": "# Code from lines 134 to 140"}
{"name": "test_get_backend", "file": "ibis/backends/tests/test_api.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_backend", "code": "# Code from lines 143 to 145"}
{"name": "test_json_getitem_object", "file": "ibis/backends/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "json_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_json_getitem_object", "code": "# Code from lines 33 to 42"}
{"name": "test_json_getitem_array", "file": "ibis/backends/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "json_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_json_getitem_array", "code": "# Code from lines 57 to 62"}
{"name": "test_json_map", "file": "ibis/backends/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "json_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_json_map", "code": "# Code from lines 71 to 84"}
{"name": "test_json_array", "file": "ibis/backends/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "json_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_json_array", "code": "# Code from lines 93 to 101"}
{"name": "test_json_unwrap", "file": "ibis/backends/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "json_t"}, {"name": "typ"}, {"name": "expected_data"}, {"name": "expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_json_unwrap", "code": "# Code from lines 130 to 141"}
{"name": "test_create_table", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "temp_table"}, {"name": "func"}, {"name": "sch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_create_table", "code": "# Code from lines 103 to 111"}
{"name": "test_create_table_overwrite_temp", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "temp_table"}, {"name": "temp"}, {"name": "overwrite"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_create_table_overwrite_temp", "code": "# Code from lines 186 to 203"}
{"name": "test_load_data", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "temp_table"}, {"name": "lamduh"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_load_data", "code": "# Code from lines 218 to 243"}
{"name": "test_query_schema", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ddl_backend"}, {"name": "expr_fn"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.parametrize"], "is_test": true, "test_name": "test_query_schema", "code": "# Code from lines 257 to 270"}
{"name": "test_sql", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_sql", "code": "# Code from lines 279 to 285"}
{"name": "test_create_table_from_schema", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "new_schema"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_create_table_from_schema", "code": "# Code from lines 305 to 317"}
{"name": "test_create_temporary_table_from_schema", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_no_data"}, {"name": "new_schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "mark.notimpl", "mark.notimpl", "pytest.mark.notimpl", "pytest.mark.never", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_create_temporary_table_from_schema", "code": "# Code from lines 347 to 370"}
{"name": "test_rename_table", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}, {"name": "temp_table_orig"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_rename_table", "code": "# Code from lines 398 to 404"}
{"name": "test_nullable_input_output", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "mark.never", "pytest.mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_nullable_input_output", "code": "# Code from lines 419 to 427"}
{"name": "test_create_drop_view", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ddl_con"}, {"name": "temp_view"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl"], "is_test": true, "test_name": "test_create_drop_view", "code": "# Code from lines 431 to 451"}
{"name": "test_employee_schema", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": "Any", "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.fixture"], "is_test": true, "test_name": "test_employee_schema", "code": "# Code from lines 455 to 463"}
{"name": "test_employee_data_2", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.fixture"], "is_test": true, "test_name": "test_employee_data_2", "code": "# Code from lines 495 to 507"}
{"name": "test_insert_no_overwrite_from_dataframe", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "test_employee_data_2"}, {"name": "employee_empty_temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_insert_no_overwrite_from_dataframe", "code": "# Code from lines 523 to 533"}
{"name": "test_insert_overwrite_from_dataframe", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "employee_data_1_temp_table"}, {"name": "test_employee_data_2"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_insert_overwrite_from_dataframe", "code": "# Code from lines 549 to 560"}
{"name": "test_insert_no_overwrite_from_expr", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "employee_empty_temp_table"}, {"name": "employee_data_2_temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_insert_no_overwrite_from_expr", "code": "# Code from lines 564 to 576"}
{"name": "test_insert_overwrite_from_expr", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "employee_data_1_temp_table"}, {"name": "employee_data_2_temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_insert_overwrite_from_expr", "code": "# Code from lines 588 to 600"}
{"name": "test_insert_overwrite_from_list", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "employee_data_1_temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_insert_overwrite_from_list", "code": "# Code from lines 612 to 626"}
{"name": "test_insert_from_memtable", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_insert_from_memtable", "code": "# Code from lines 639 to 649"}
{"name": "test_list_catalogs", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_list_catalogs", "code": "# Code from lines 669 to 687"}
{"name": "test_list_database_contents", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_list_database_contents", "code": "# Code from lines 695 to 718"}
{"name": "test_unsigned_integer_type", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_unsigned_integer_type", "code": "# Code from lines 749 to 755"}
{"name": "test_connect_url", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "url"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.backend", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_connect_url", "code": "# Code from lines 822 to 828"}
{"name": "test_in_memory_table", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "arg"}, {"name": "lambda_"}, {"name": "expected"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_in_memory_table", "code": "# Code from lines 875 to 880"}
{"name": "test_filter_memory_table", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_memory_table", "code": "# Code from lines 883 to 890"}
{"name": "test_agg_memory_table", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_agg_memory_table", "code": "# Code from lines 893 to 899"}
{"name": "test_self_join_memory_table", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join_memory_table", "code": "# Code from lines 902 to 912"}
{"name": "test_create_table_in_memory", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "obj"}, {"name": "table_name"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_create_table_in_memory", "code": "# Code from lines 1027 to 1036"}
{"name": "test_default_backend_option", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_default_backend_option", "code": "# Code from lines 1039 to 1046"}
{"name": "test_default_backend_no_duckdb", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.usefixtures"], "is_test": true, "test_name": "test_default_backend_no_duckdb", "code": "# Code from lines 1052 to 1071"}
{"name": "test_default_backend_no_duckdb_read_parquet", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.usefixtures"], "is_test": true, "test_name": "test_default_backend_no_duckdb_read_parquet", "code": "# Code from lines 1075 to 1092"}
{"name": "test_dunder_array_table", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dunder_array_table", "code": "# Code from lines 1096 to 1100"}
{"name": "test_dunder_array_column", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dunder_array_column", "code": "# Code from lines 1104 to 1110"}
{"name": "test_interactive_repr_show_types", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "show_types"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interactive_repr_show_types", "code": "# Code from lines 1114 to 1125"}
{"name": "test_interactive_repr_max_columns", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "is_jupyter"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_interactive_repr_max_columns", "code": "# Code from lines 1129 to 1165"}
{"name": "test_repr_mimebundle", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "interactive"}, {"name": "expr_type"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_repr_mimebundle", "code": "# Code from lines 1170 to 1185"}
{"name": "test_has_operation_no_geo", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": "Previously some backends mistakenly reported Geo operations as\nsupported.\n\nSince most backends don't support Geo operations, we test that\nthey're excluded here, skipping the few backends that explicitly do\nsupport them.", "signature": {"args": [{"name": "con"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.never", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_has_operation_no_geo", "code": "# Code from lines 1193 to 1201"}
{"name": "test_has_operation_no_builtins", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "module_name"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_has_operation_no_builtins", "code": "# Code from lines 1217 to 1219"}
{"name": "test_get_backend", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_backend", "code": "# Code from lines 1222 to 1232"}
{"name": "test_set_backend", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_set_backend", "code": "# Code from lines 1235 to 1238"}
{"name": "test_set_backend_name", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_set_backend_name", "code": "# Code from lines 1248 to 1258"}
{"name": "test_set_backend_url", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "url"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_set_backend_url", "code": "# Code from lines 1281 to 1291"}
{"name": "test_create_table_timestamp", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.never", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_create_table_timestamp", "code": "# Code from lines 1326 to 1336"}
{"name": "test_overwrite", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ddl_con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark.notimpl", "mark.notimpl", "mark.notimpl", "mark.notimpl", "mark.notimpl"], "is_test": true, "test_name": "test_overwrite", "code": "# Code from lines 1360 to 1379"}
{"name": "test_insert_with_database_specified", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_create_database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_insert_with_database_specified", "code": "# Code from lines 1397 to 1413"}
{"name": "test_create_catalog", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_create_catalog"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_create_catalog", "code": "# Code from lines 1417 to 1422"}
{"name": "test_create_database", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_create_database"}, {"name": "catalog"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_database", "code": "# Code from lines 1426 to 1435"}
{"name": "test_list_databases", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_create_database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_databases", "code": "# Code from lines 1438 to 1440"}
{"name": "test_create_catalog_database", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_create_catalog_database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_create_catalog_database", "code": "# Code from lines 1444 to 1452"}
{"name": "test_list_catalogs_databases", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_create_catalog_database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_list_catalogs_databases", "code": "# Code from lines 1456 to 1470"}
{"name": "test_close_connection", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.skip"], "is_test": true, "test_name": "test_close_connection", "code": "# Code from lines 1481 to 1494"}
{"name": "test_json_to_pyarrow", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.never", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_json_to_pyarrow", "code": "# Code from lines 1518 to 1551"}
{"name": "test_schema_with_caching", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_schema_with_caching", "code": "# Code from lines 1570 to 1578"}
{"name": "test_insert_using_col_name_not_position", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "first_row"}, {"name": "second_row"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_insert_using_col_name_not_position", "code": "# Code from lines 1609 to 1622"}
{"name": "test_from_connection", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "top_level"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.never"], "is_test": true, "test_name": "test_from_connection", "code": "# Code from lines 1631 to 1635"}
{"name": "test_table_not_found", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_not_found", "code": "# Code from lines 1638 to 1640"}
{"name": "test_no_accidental_cross_database_table_load", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_create_database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_no_accidental_cross_database_table_load", "code": "# Code from lines 1646 to 1674"}
{"name": "test_cross_database_join", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_create_database"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_cross_database_join", "code": "# Code from lines 1681 to 1710"}
{"name": "test_insert_into_table_missing_columns", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_insert_into_table_missing_columns", "code": "# Code from lines 1730 to 1748"}
{"name": "test_memtable_cleanup", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_memtable_cleanup", "code": "# Code from lines 1758 to 1773"}
{"name": "test_memtable_registered_exactly_once", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_memtable_registered_exactly_once", "code": "# Code from lines 1781 to 1791"}
{"name": "test_stateful_data_is_loaded_once", "file": "ibis/backends/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}, {"name": "tmp_path_factory"}, {"name": "worker_id"}, {"name": "mocker"}, {"name": "i"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_stateful_data_is_loaded_once", "code": "# Code from lines 1795 to 1818"}
{"name": "test_union", "file": "ibis/backends/tests/test_set_ops.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "union_subsets"}, {"name": "distinct"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_union", "code": "# Code from lines 39 to 49"}
{"name": "test_union_mixed_distinct", "file": "ibis/backends/tests/test_set_ops.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "union_subsets"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_union_mixed_distinct", "code": "# Code from lines 53 to 62"}
{"name": "test_intersect", "file": "ibis/backends/tests/test_set_ops.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "distinct"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_intersect", "code": "# Code from lines 87 to 106"}
{"name": "test_difference", "file": "ibis/backends/tests/test_set_ops.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "distinct"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_difference", "code": "# Code from lines 131 to 150"}
{"name": "test_table_set_operations_api", "file": "ibis/backends/tests/test_set_ops.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_set_operations_api", "code": "# Code from lines 154 to 163"}
{"name": "test_top_level_union", "file": "ibis/backends/tests/test_set_ops.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "distinct"}, {"name": "ordered"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_top_level_union", "code": "# Code from lines 187 to 196"}
{"name": "test_top_level_intersect_difference", "file": "ibis/backends/tests/test_set_ops.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "distinct"}, {"name": "opname"}, {"name": "expected"}, {"name": "ordered"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_top_level_intersect_difference", "code": "# Code from lines 239 to 258"}
{"name": "test_uuid_literal", "file": "ibis/backends/tests/test_uuid.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "backend"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_uuid_literal", "code": "# Code from lines 49 to 58"}
{"name": "test_uuid_function", "file": "ibis/backends/tests/test_uuid.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.never"], "is_test": true, "test_name": "test_uuid_function", "code": "# Code from lines 69 to 72"}
{"name": "test_uuid_unique_each_row", "file": "ibis/backends/tests/test_uuid.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_uuid_unique_each_row", "code": "# Code from lines 79 to 83"}
{"name": "test_floating_scalar_parameter", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "column"}, {"name": "raw_value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_floating_scalar_parameter", "code": "# Code from lines 27 to 33"}
{"name": "test_date_scalar_parameter", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "start_string"}, {"name": "end_string"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_date_scalar_parameter", "code": "# Code from lines 42 to 52"}
{"name": "test_timestamp_accepts_date_literals", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_accepts_date_literals", "code": "# Code from lines 55 to 60"}
{"name": "test_scalar_param_array", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_scalar_param_array", "code": "# Code from lines 67 to 71"}
{"name": "test_scalar_param_struct", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.never"], "is_test": true, "test_name": "test_scalar_param_struct", "code": "# Code from lines 79 to 83"}
{"name": "test_scalar_param_map", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.never", "pytest.mark.notyet"], "is_test": true, "test_name": "test_scalar_param_map", "code": "# Code from lines 92 to 96"}
{"name": "test_scalar_param", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "df"}, {"name": "value"}, {"name": "dtype"}, {"name": "col"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_scalar_param", "code": "# Code from lines 129 to 137"}
{"name": "test_scalar_param_date", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "alltypes"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_scalar_param_date", "code": "# Code from lines 146 to 174"}
{"name": "test_scalar_param_nested", "file": "ibis/backends/tests/test_param.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_scalar_param_nested", "code": "# Code from lines 191 to 195"}
{"name": "test_load_examples", "file": "ibis/backends/tests/test_examples.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "example"}, {"name": "columns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.skipif", "pytest.mark.notyet", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_load_examples", "code": "# Code from lines 68 to 71"}
{"name": "test_files", "file": "ibis/backends/tests/base.py", "type": "test", "docstring": "Returns an iterable of test files to load into a Docker container before testing.", "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property", "abc.abstractmethod"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 349 to 351"}
{"name": "test_interactive_execute_on_repr", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "queries"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_interactive_execute_on_repr", "code": "# Code from lines 39 to 41"}
{"name": "test_repr_png_is_none_in_interactive", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repr_png_is_none_in_interactive", "code": "# Code from lines 44 to 46"}
{"name": "test_repr_png_is_not_none_in_not_interactive", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repr_png_is_not_none_in_not_interactive", "code": "# Code from lines 49 to 55"}
{"name": "test_default_limit", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "queries"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_default_limit", "code": "# Code from lines 59 to 62"}
{"name": "test_respect_set_limit", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "queries"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_respect_set_limit", "code": "# Code from lines 66 to 69"}
{"name": "test_disable_query_limit", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "queries"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_disable_query_limit", "code": "# Code from lines 73 to 82"}
{"name": "test_interactive_non_compilable_repr_does_not_fail", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": "https://github.com/ibis-project/ibis/issues/170", "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interactive_non_compilable_repr_does_not_fail", "code": "# Code from lines 85 to 87"}
{"name": "test_isin_rule_suppressed_exception_repr_not_fail", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isin_rule_suppressed_exception_repr_not_fail", "code": "# Code from lines 90 to 94"}
{"name": "test_no_recursion_error", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_no_recursion_error", "code": "# Code from lines 97 to 109"}
{"name": "test_scalar_uses_pyarrow", "file": "ibis/backends/tests/test_interactive.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "table"}, {"name": "monkeypatch"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_scalar_uses_pyarrow", "code": "# Code from lines 116 to 128"}
{"name": "test_asof_join", "file": "ibis/backends/tests/test_asof_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "time_left"}, {"name": "time_right"}, {"name": "time_df1"}, {"name": "time_df2"}, {"name": "direction"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notyet"], "is_test": true, "test_name": "test_asof_join", "code": "# Code from lines 103 to 118"}
{"name": "test_keyed_asof_join_with_tolerance", "file": "ibis/backends/tests/test_asof_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "time_keyed_left"}, {"name": "time_keyed_right"}, {"name": "time_keyed_df1"}, {"name": "time_keyed_df2"}, {"name": "direction"}, {"name": "op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.notimpl", "pytest.mark.notyet", "pytest.mark.xfail_version"], "is_test": true, "test_name": "test_keyed_asof_join_with_tolerance", "code": "# Code from lines 148 to 182"}
{"name": "test_table___arrow_c_stream__", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.skipif"], "is_test": true, "test_name": "test_table___arrow_c_stream__", "code": "# Code from lines 46 to 56"}
{"name": "test_table_to_pyarrow_batches", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_to_pyarrow_batches", "code": "# Code from lines 60 to 67"}
{"name": "test_column_to_pyarrow_batches", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_column_to_pyarrow_batches", "code": "# Code from lines 71 to 78"}
{"name": "test_table_to_pyarrow_table", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_to_pyarrow_table", "code": "# Code from lines 82 to 86"}
{"name": "test_column_to_pyarrow_array", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_column_to_pyarrow_array", "code": "# Code from lines 90 to 94"}
{"name": "test_empty_column_to_pyarrow", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_empty_column_to_pyarrow", "code": "# Code from lines 98 to 102"}
{"name": "test_empty_scalar_to_pyarrow", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_empty_scalar_to_pyarrow", "code": "# Code from lines 106 to 109"}
{"name": "test_scalar_to_pyarrow_scalar", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_scalar_to_pyarrow_scalar", "code": "# Code from lines 113 to 115"}
{"name": "test_table_to_pyarrow_table_schema", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_table_to_pyarrow_table_schema", "code": "# Code from lines 119 to 134"}
{"name": "test_column_to_pyarrow_table_schema", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_to_pyarrow_table_schema", "code": "# Code from lines 137 to 141"}
{"name": "test_table_pyarrow_batch_chunk_size", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_table_pyarrow_batch_chunk_size", "code": "# Code from lines 150 to 156"}
{"name": "test_column_pyarrow_batch_chunk_size", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_column_pyarrow_batch_chunk_size", "code": "# Code from lines 165 to 173"}
{"name": "test_to_pyarrow_batches_borked_types", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": "This is a temporary test to expose an(other) issue with sqlite typing\nshenanigans.", "signature": {"args": [{"name": "batting"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_to_pyarrow_batches_borked_types", "code": "# Code from lines 181 to 190"}
{"name": "test_to_pyarrow_memtable", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_pyarrow_memtable", "code": "# Code from lines 193 to 197"}
{"name": "test_to_pyarrow_batches_memtable", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_pyarrow_batches_memtable", "code": "# Code from lines 200 to 207"}
{"name": "test_table_to_parquet", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}, {"name": "backend"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_to_parquet", "code": "# Code from lines 210 to 220"}
{"name": "test_table_to_parquet_dir", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}, {"name": "backend"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_to_parquet_dir", "code": "# Code from lines 223 to 250"}
{"name": "test_table_to_parquet_writer_kwargs", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "version"}, {"name": "tmp_path"}, {"name": "backend"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_to_parquet_writer_kwargs", "code": "# Code from lines 259 to 288"}
{"name": "test_roundtrip_partitioned_parquet", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}, {"name": "con"}, {"name": "backend"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_roundtrip_partitioned_parquet", "code": "# Code from lines 314 to 336"}
{"name": "test_memtable_to_file", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": "Tests against a regression spotted in #6091 where a `memtable` that is\ncreated and then immediately exported to `parquet` (or csv) will error\nbecause we weren't registering the in-memory table before trying to export\nit.", "signature": {"args": [{"name": "tmp_path"}, {"name": "con"}, {"name": "ftype"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_memtable_to_file", "code": "# Code from lines 340 to 361"}
{"name": "test_table_to_csv", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}, {"name": "backend"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_to_csv", "code": "# Code from lines 364 to 374"}
{"name": "test_to_json", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "tmp_path"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl"], "is_test": true, "test_name": "test_to_json", "code": "# Code from lines 402 to 406"}
{"name": "test_table_to_csv_writer_kwargs", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "delimiter"}, {"name": "tmp_path"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_to_csv_writer_kwargs", "code": "# Code from lines 415 to 424"}
{"name": "test_to_pyarrow_decimal", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "dtype"}, {"name": "pyarrow_dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_to_pyarrow_decimal", "code": "# Code from lines 462 to 473"}
{"name": "test_roundtrip_delta", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "alltypes"}, {"name": "tmp_path"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_roundtrip_delta", "code": "# Code from lines 498 to 513"}
{"name": "test_arrow_timestamp_with_time_zone", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_arrow_timestamp_with_time_zone", "code": "# Code from lines 525 to 542"}
{"name": "test_to_torch", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_to_torch", "code": "# Code from lines 549 to 563"}
{"name": "test_empty_memtable", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_empty_memtable", "code": "# Code from lines 572 to 576"}
{"name": "test_to_pandas_batches_empty_table", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_pandas_batches_empty_table", "code": "# Code from lines 579 to 584"}
{"name": "test_to_pandas_batches_nonempty_table", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "n"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_to_pandas_batches_nonempty_table", "code": "# Code from lines 588 to 593"}
{"name": "test_to_pandas_batches_column", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}, {"name": "n"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_to_pandas_batches_column", "code": "# Code from lines 597 to 602"}
{"name": "test_to_pandas_batches_scalar", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "backend"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_pandas_batches_scalar", "code": "# Code from lines 605 to 613"}
{"name": "test_table_to_polars", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.never"], "is_test": true, "test_name": "test_table_to_polars", "code": "# Code from lines 620 to 635"}
{"name": "test_column_to_memory", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}, {"name": "output_format"}, {"name": "expected_column_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_column_to_memory", "code": "# Code from lines 644 to 653"}
{"name": "test_column_to_list", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_column_to_list", "code": "# Code from lines 657 to 664"}
{"name": "test_scalar_to_memory", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit"}, {"name": "awards_players"}, {"name": "output_format"}, {"name": "converter"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_scalar_to_memory", "code": "# Code from lines 673 to 682"}
{"name": "test_all_null_table", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_nulls", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_all_null_table", "code": "# Code from lines 708 to 711"}
{"name": "test_all_null_column", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["mark_notyet_nulls", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_all_null_column", "code": "# Code from lines 719 to 722"}
{"name": "test_all_null_scalar", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_all_null_scalar", "code": "# Code from lines 730 to 733"}
{"name": "test_cast_non_null", "file": "ibis/backends/tests/test_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast_non_null", "code": "# Code from lines 736 to 741"}
{"name": "test_roundtripable_types", "file": "ibis/backends/sql/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_roundtripable_types", "code": "# Code from lines 63 to 64"}
{"name": "test_interval_without_unit", "file": "ibis/backends/sql/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_without_unit", "code": "# Code from lines 67 to 71"}
{"name": "test_unsupported_dtypes_are_unknown", "file": "ibis/backends/sql/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "typengine"}, {"name": "sgetyp"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_unsupported_dtypes_are_unknown", "code": "# Code from lines 88 to 91"}
{"name": "test_from_string", "file": "ibis/backends/sql/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "typengine"}, {"name": "s"}, {"name": "parsed"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_from_string", "code": "# Code from lines 113 to 117"}
{"name": "test_cast_to_unknown", "file": "ibis/backends/sql/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast_to_unknown", "code": "# Code from lines 120 to 126"}
{"name": "test_unknown_repr", "file": "ibis/backends/sql/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unknown_repr", "code": "# Code from lines 129 to 135"}
{"name": "test_window_with_row_number_compiles", "file": "ibis/backends/sql/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_with_row_number_compiles", "code": "# Code from lines 10 to 21"}
{"name": "test_transpile_join", "file": "ibis/backends/sql/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_transpile_join", "code": "# Code from lines 24 to 28"}
{"name": "test_create_and_drop_database", "file": "ibis/backends/athena/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_and_drop_database", "code": "# Code from lines 10 to 31"}
{"name": "test_column_name_with_slash", "file": "ibis/backends/athena/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_name_with_slash", "code": "# Code from lines 34 to 42"}
{"name": "test_simple_partitioned_by", "file": "ibis/backends/athena/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "partitioned_by"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple_partitioned_by", "code": "# Code from lines 46 to 61"}
{"name": "test_files", "file": "ibis/backends/mssql/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 35 to 36"}
{"name": "test_get_schema", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "server_type"}, {"name": "expected_type"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_get_schema", "code": "# Code from lines 95 to 103"}
{"name": "test_schema_type_order", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_type_order", "code": "# Code from lines 106 to 137"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 140 to 147"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 150 to 157"}
{"name": "test_builtin_agg_udf_filtered", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf_filtered", "code": "# Code from lines 160 to 169"}
{"name": "test_glorious_length_function_hack", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": "Test that the length function works as expected.\n\nWhy wouldn't it, you ask?\n\nhttps://learn.microsoft.com/en-us/sql/t-sql/functions/len-transact-sql?view=sql-server-ver16#remarks", "signature": {"args": [{"name": "con"}, {"name": "string"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_glorious_length_function_hack", "code": "# Code from lines 173 to 183"}
{"name": "test_list_tables", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 186 to 199"}
{"name": "test_create_temp_table_from_obj", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_temp_table_from_obj", "code": "# Code from lines 202 to 220"}
{"name": "test_create_temp_table_from_expression", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "explicit_schema"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_temp_table_from_expression", "code": "# Code from lines 224 to 233"}
{"name": "test_from_url", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_from_url", "code": "# Code from lines 236 to 247"}
{"name": "test_dot_sql_with_unnamed_columns", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dot_sql_with_unnamed_columns", "code": "# Code from lines 250 to 271"}
{"name": "test_dot_sql_error_handling", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dot_sql_error_handling", "code": "# Code from lines 274 to 276"}
{"name": "test_create_temp_table", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_temp_table", "code": "# Code from lines 298 to 309"}
{"name": "test_escape_special_characters", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_escape_special_characters", "code": "# Code from lines 312 to 320"}
{"name": "test_non_ascii_column_name", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_non_ascii_column_name", "code": "# Code from lines 323 to 328"}
{"name": "test_mssql_without_password_is_valid", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mssql_without_password_is_valid", "code": "# Code from lines 331 to 342"}
{"name": "test_list_tables_with_dash", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_list_tables_with_dash", "code": "# Code from lines 348 to 349"}
{"name": "test_rank_no_window_frame", "file": "ibis/backends/mssql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rank_no_window_frame", "code": "# Code from lines 352 to 357"}
{"name": "test_memtable_join", "file": "ibis/backends/polars/tests/test_join.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_join", "code": "# Code from lines 9 to 27"}
{"name": "test_udf", "file": "ibis/backends/polars/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf", "code": "# Code from lines 32 to 40"}
{"name": "test_multiple_argument_udf", "file": "ibis/backends/polars/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_argument_udf", "code": "# Code from lines 43 to 50"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/polars/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 56 to 62"}
{"name": "test_scalar_udf", "file": "ibis/backends/polars/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_scalar_udf", "code": "# Code from lines 86 to 94"}
{"name": "test_multiple_argument_scalar_udf", "file": "ibis/backends/polars/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_multiple_argument_scalar_udf", "code": "# Code from lines 98 to 105"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/polars/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 108 to 119"}
{"name": "test_cannot_run_sql_after_drop", "file": "ibis/backends/polars/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cannot_run_sql_after_drop", "code": "# Code from lines 15 to 30"}
{"name": "test_array_flatten", "file": "ibis/backends/polars/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_flatten", "code": "# Code from lines 33 to 41"}
{"name": "test_memtable_polars_types", "file": "ibis/backends/polars/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_polars_types", "code": "# Code from lines 44 to 62"}
{"name": "test_streaming", "file": "ibis/backends/polars/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "mocker"}, {"name": "to_method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_streaming", "code": "# Code from lines 66 to 70"}
{"name": "test_engine", "file": "ibis/backends/polars/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "mocker"}, {"name": "to_method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_engine", "code": "# Code from lines 74 to 78"}
{"name": "test_compile_with_memtable", "file": "ibis/backends/polars/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compile_with_memtable", "code": "# Code from lines 81 to 84"}
{"name": "test_parser", "file": "ibis/backends/duckdb/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "typ"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parser", "code": "# Code from lines 61 to 63"}
{"name": "test_cast_uints", "file": "ibis/backends/duckdb/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "uint_type"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cast_uints", "code": "# Code from lines 67 to 71"}
{"name": "test_null_dtype", "file": "ibis/backends/duckdb/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_dtype", "code": "# Code from lines 74 to 81"}
{"name": "test_parse_quoted_struct_field", "file": "ibis/backends/duckdb/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_quoted_struct_field", "code": "# Code from lines 84 to 87"}
{"name": "test_read_uint8_from_parquet", "file": "ibis/backends/duckdb/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_uint8_from_parquet", "code": "# Code from lines 90 to 105"}
{"name": "test_cast_to_floating_point_type", "file": "ibis/backends/duckdb/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}, {"name": "typ"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cast_to_floating_point_type", "code": "# Code from lines 109 to 118"}
{"name": "test_null_scalar", "file": "ibis/backends/duckdb/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_scalar", "code": "# Code from lines 121 to 130"}
{"name": "test_read_write_external_catalog", "file": "ibis/backends/duckdb/tests/test_catalog.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "external_duckdb_file"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_write_external_catalog", "code": "# Code from lines 33 to 75"}
{"name": "test_raise_if_catalog_and_temp", "file": "ibis/backends/duckdb/tests/test_catalog.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_raise_if_catalog_and_temp", "code": "# Code from lines 78 to 80"}
{"name": "test_cant_drop_database_external_catalog", "file": "ibis/backends/duckdb/tests/test_catalog.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmpdir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cant_drop_database_external_catalog", "code": "# Code from lines 83 to 90"}
{"name": "test_geospatial_point", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "zones"}, {"name": "zones_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_point", "code": "# Code from lines 23 to 28"}
{"name": "test_geospatial_unary_snapshot", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "operation"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_unary_snapshot", "code": "# Code from lines 33 to 36"}
{"name": "test_geospatial_dwithin", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_dwithin", "code": "# Code from lines 39 to 42"}
{"name": "test_geospatial_unary_tm", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "gp_op"}, {"name": "zones"}, {"name": "zones_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_unary_tm", "code": "# Code from lines 62 to 66"}
{"name": "test_geospatial_xy", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "zones"}, {"name": "zones_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_xy", "code": "# Code from lines 70 to 77"}
{"name": "test_geospatial_length", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lines"}, {"name": "lines_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_length", "code": "# Code from lines 80 to 86"}
{"name": "test_geospatial_binary_tm", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "gp_op"}, {"name": "zones"}, {"name": "zones_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_binary_tm", "code": "# Code from lines 107 to 111"}
{"name": "test_geospatial_unary_gtm", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "zones"}, {"name": "zones_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_unary_gtm", "code": "# Code from lines 117 to 121"}
{"name": "test_geospatial_binary_gtm", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "zones"}, {"name": "zones_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_binary_gtm", "code": "# Code from lines 127 to 131"}
{"name": "test_geospatial_end_point", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lines"}, {"name": "lines_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_end_point", "code": "# Code from lines 134 to 139"}
{"name": "test_geospatial_start_point", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "lines"}, {"name": "lines_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_start_point", "code": "# Code from lines 142 to 147"}
{"name": "test_geospatial_unary_union", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "zones"}, {"name": "zones_gdf"}, {"name": "expected_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_unary_union", "code": "# Code from lines 180 to 189"}
{"name": "test_geospatial_buffer_point", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "zones"}, {"name": "zones_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_buffer_point", "code": "# Code from lines 192 to 200"}
{"name": "test_geospatial_buffer", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "zones"}, {"name": "zones_gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail_version"], "is_test": true, "test_name": "test_geospatial_buffer", "code": "# Code from lines 206 to 211"}
{"name": "test_geospatial_convert", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_convert", "code": "# Code from lines 215 to 226"}
{"name": "test_geospatial_flip_coordinates", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_flip_coordinates", "code": "# Code from lines 229 to 246"}
{"name": "test_create_table_geospatial_types", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_geospatial_types", "code": "# Code from lines 249 to 257"}
{"name": "test_literal_geospatial_explicit", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_geospatial_explicit", "code": "# Code from lines 266 to 267"}
{"name": "test_literal_geospatial_inferred", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "shp"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_geospatial_inferred", "code": "# Code from lines 294 to 297"}
{"name": "test_load_geo_example", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.skipif"], "is_test": true, "test_name": "test_load_geo_example", "code": "# Code from lines 304 to 308"}
{"name": "test_geo_unop_geo_literals", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": "GeoSpatialUnOp operation on a geospatial literal", "signature": {"args": [{"name": "con"}, {"name": "geo_line_lit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_unop_geo_literals", "code": "# Code from lines 321 to 324"}
{"name": "test_geo_binop_geo_literals", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": "GeoSpatialBinOp operation on a geospatial literal", "signature": {"args": [{"name": "con"}, {"name": "geo_line_lit"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_binop_geo_literals", "code": "# Code from lines 327 to 330"}
{"name": "test_cast_wkb_to_geo", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast_wkb_to_geo", "code": "# Code from lines 333 to 337"}
{"name": "test_load_spatial_casting", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "data_dir"}, {"name": "tmp_path_factory"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_load_spatial_casting", "code": "# Code from lines 340 to 349"}
{"name": "test_geom_from_string", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geom_from_string", "code": "# Code from lines 352 to 358"}
{"name": "test_to_geo", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "driver"}, {"name": "canonical_extension"}, {"name": "kwargs"}, {"name": "preproc"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_to_geo", "code": "# Code from lines 491 to 505"}
{"name": "test_to_geo_geom_only", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "driver"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_to_geo_geom_only", "code": "# Code from lines 533 to 544"}
{"name": "test_cache_geometry", "file": "ibis/backends/duckdb/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cache_geometry", "code": "# Code from lines 547 to 556"}
{"name": "test_read_csv", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_csv", "code": "# Code from lines 21 to 23"}
{"name": "test_read_csv_with_columns", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_csv_with_columns", "code": "# Code from lines 26 to 40"}
{"name": "test_read_parquet", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_parquet", "code": "# Code from lines 43 to 45"}
{"name": "test_load_spatial_when_geo_column", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmpdir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_load_spatial_when_geo_column", "code": "# Code from lines 52 to 92"}
{"name": "test_read_geo_to_pyarrow", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.usefixtures"], "is_test": true, "test_name": "test_read_geo_to_pyarrow", "code": "# Code from lines 96 to 101"}
{"name": "test_read_geo_to_geopandas", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}, {"name": "gpd"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_geo_to_geopandas", "code": "# Code from lines 104 to 107"}
{"name": "test_read_geo_from_url", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_geo_from_url", "code": "# Code from lines 110 to 123"}
{"name": "test_read_json", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_json", "code": "# Code from lines 126 to 136"}
{"name": "test_read_postgres", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "pgurl"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.skipif"], "is_test": true, "test_name": "test_read_postgres", "code": "# Code from lines 158 to 166"}
{"name": "test_read_mysql", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "mysqlurl"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.skipif"], "is_test": true, "test_name": "test_read_mysql", "code": "# Code from lines 188 to 203"}
{"name": "test_read_sqlite", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_read_sqlite", "code": "# Code from lines 211 to 222"}
{"name": "test_read_sqlite_no_table_name", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_sqlite_no_table_name", "code": "# Code from lines 225 to 235"}
{"name": "test_attach_sqlite", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "data_dir"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_attach_sqlite", "code": "# Code from lines 245 to 283"}
{"name": "test_memtable_with_nullable_dtypes", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_with_nullable_dtypes", "code": "# Code from lines 286 to 303"}
{"name": "test_memtable_with_nullable_pyarrow_string", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_with_nullable_pyarrow_string", "code": "# Code from lines 306 to 311"}
{"name": "test_memtable_with_nullable_pyarrow_not_string", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_with_nullable_pyarrow_not_string", "code": "# Code from lines 314 to 332"}
{"name": "test_temp_dir_set", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}, {"name": "database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_temp_dir_set", "code": "# Code from lines 340 to 344"}
{"name": "test_register_numpy_str", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_register_numpy_str", "code": "# Code from lines 347 to 350"}
{"name": "test_memtable_recordbatchreader_raises", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_recordbatchreader_raises", "code": "# Code from lines 353 to 366"}
{"name": "test_csv_with_slash_n_null", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_csv_with_slash_n_null", "code": "# Code from lines 369 to 374"}
{"name": "test_register_filesystem_gcs", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "extensions"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_register_filesystem_gcs", "code": "# Code from lines 399 to 415"}
{"name": "test_memtable_null_column_parquet_dtype_roundtrip", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_memtable_null_column_parquet_dtype_roundtrip", "code": "# Code from lines 418 to 423"}
{"name": "test_read_json_no_auto_detection", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_json_no_auto_detection", "code": "# Code from lines 426 to 436"}
{"name": "test_read_csv_with_duckdb_specific_types", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_csv_with_duckdb_specific_types", "code": "# Code from lines 439 to 443"}
{"name": "test_roundtrip_xlsx", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_roundtrip_xlsx", "code": "# Code from lines 450 to 460"}
{"name": "test_roundtrip_xlsx_with_sheet", "file": "ibis/backends/duckdb/tests/test_io.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_roundtrip_xlsx_with_sheet", "code": "# Code from lines 467 to 482"}
{"name": "test_builtin_scalar", "file": "ibis/backends/duckdb/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_scalar", "code": "# Code from lines 47 to 52"}
{"name": "test_builtin_scalar_noargs", "file": "ibis/backends/duckdb/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_noargs", "code": "# Code from lines 55 to 60"}
{"name": "test_builtin_agg", "file": "ibis/backends/duckdb/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_agg", "code": "# Code from lines 76 to 90"}
{"name": "test_dont_intercept_null", "file": "ibis/backends/duckdb/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dont_intercept_null", "code": "# Code from lines 107 to 108"}
{"name": "test_kwargs_are_forwarded", "file": "ibis/backends/duckdb/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_kwargs_are_forwarded", "code": "# Code from lines 111 to 134"}
{"name": "test_builtin_udf_uses_dialect", "file": "ibis/backends/duckdb/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_udf_uses_dialect", "code": "# Code from lines 137 to 152"}
{"name": "test_builtin_fixed_length_array_udf", "file": "ibis/backends/duckdb/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "array_cosine_t"}, {"name": "column"}, {"name": "expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_fixed_length_array_udf", "code": "# Code from lines 173 to 180"}
{"name": "test_parse_sql_tpch", "file": "ibis/backends/duckdb/tests/test_decompile_tpch.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tpch_query"}, {"name": "snapshot"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_sql_tpch", "code": "# Code from lines 76 to 101"}
{"name": "test_connect_extensions", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ext_directory"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail", "pytest.mark.xdist_group"], "is_test": true, "test_name": "test_connect_extensions", "code": "# Code from lines 39 to 50"}
{"name": "test_load_extension", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ext_directory"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail", "pytest.mark.xdist_group"], "is_test": true, "test_name": "test_load_extension", "code": "# Code from lines 59 to 69"}
{"name": "test_cross_db", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmpdir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cross_db", "code": "# Code from lines 72 to 92"}
{"name": "test_attach_detach", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmpdir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_attach_detach", "code": "# Code from lines 95 to 124"}
{"name": "test_create_table_with_timestamp_scales", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "scale"}, {"name": "expected_scale"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_table_with_timestamp_scales", "code": "# Code from lines 137 to 142"}
{"name": "test_config_options", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_config_options", "code": "# Code from lines 145 to 159"}
{"name": "test_config_options_bad_option", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_config_options_bad_option", "code": "# Code from lines 162 to 167"}
{"name": "test_insert", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert", "code": "# Code from lines 170 to 194"}
{"name": "test_to_other_sql", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_other_sql", "code": "# Code from lines 197 to 201"}
{"name": "test_insert_preserves_column_case", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_preserves_column_case", "code": "# Code from lines 204 to 216"}
{"name": "test_default_backend", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_default_backend", "code": "# Code from lines 219 to 239"}
{"name": "test_connect_duckdb", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "url"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_connect_duckdb", "code": "# Code from lines 260 to 266"}
{"name": "test_connect_local_file", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "out_method"}, {"name": "extension"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_connect_local_file", "code": "# Code from lines 272 to 278"}
{"name": "test_invalid_connect", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["not_windows"], "is_test": true, "test_name": "test_invalid_connect", "code": "# Code from lines 282 to 285"}
{"name": "test_list_tables", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 288 to 301"}
{"name": "test_settings_repr", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_settings_repr", "code": "# Code from lines 304 to 308"}
{"name": "test_connect_named_in_memory_db", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_connect_named_in_memory_db", "code": "# Code from lines 311 to 324"}
{"name": "test_create_table_quoting", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "database_file"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_table_quoting", "code": "# Code from lines 334 to 338"}
{"name": "test_hugging_face", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "url"}, {"name": "method_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.xfail"], "is_test": true, "test_name": "test_hugging_face", "code": "# Code from lines 358 to 361"}
{"name": "test_multiple_tables_with_the_same_name", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_tables_with_the_same_name", "code": "# Code from lines 364 to 391"}
{"name": "test_read_csv_with_types", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}, {"name": "input"}, {"name": "all_varchar"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.xfail", "pytest.mark.xdist_group"], "is_test": true, "test_name": "test_read_csv_with_types", "code": "# Code from lines 409 to 418"}
{"name": "test_pyarrow_batches_chunk_size", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pyarrow_batches_chunk_size", "code": "# Code from lines 421 to 439"}
{"name": "test_create_table_with_nulls", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "kwargs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_table_with_nulls", "code": "# Code from lines 451 to 461"}
{"name": "test_create_temp_table_in_nondefault_schema", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_temp_table_in_nondefault_schema", "code": "# Code from lines 464 to 469"}
{"name": "test_create_table_with_quoted_columns", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_with_quoted_columns", "code": "# Code from lines 472 to 478"}
{"name": "test_create_table_with_out_of_order_columns", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_with_out_of_order_columns", "code": "# Code from lines 481 to 487"}
{"name": "test_basic_enum_schema_inference", "file": "ibis/backends/duckdb/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "converter"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_basic_enum_schema_inference", "code": "# Code from lines 498 to 507"}
{"name": "test_files", "file": "ibis/backends/druid/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 122 to 127"}
{"name": "test_files", "file": "ibis/backends/mysql/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 35 to 36"}
{"name": "test_get_schema_from_query", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "mysql_type"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_get_schema_from_query", "code": "# Code from lines 77 to 91"}
{"name": "test_get_schema_from_query_special_cases", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "mysql_type"}, {"name": "get_schema_expected_type"}, {"name": "table_expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_get_schema_from_query_special_cases", "code": "# Code from lines 110 to 127"}
{"name": "test_blob_type", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "coltype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_blob_type", "code": "# Code from lines 131 to 136"}
{"name": "test_get_schema_from_query_other_schema", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_schema_from_query_other_schema", "code": "# Code from lines 148 to 150"}
{"name": "test_zero_timestamp_data", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_zero_timestamp_data", "code": "# Code from lines 153 to 183"}
{"name": "test_enum_as_string", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "enum_t"}, {"name": "expr_fn"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_enum_as_string", "code": "# Code from lines 211 to 214"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 217 to 224"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 227 to 236"}
{"name": "test_list_tables", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 239 to 250"}
{"name": "test_invalid_port", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_port", "code": "# Code from lines 253 to 257"}
{"name": "test_create_database_exists", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_database_exists", "code": "# Code from lines 260 to 268"}
{"name": "test_drop_database_exists", "file": "ibis/backends/mysql/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_database_exists", "code": "# Code from lines 271 to 279"}
{"name": "test_files", "file": "ibis/backends/risingwave/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 39 to 40"}
{"name": "test_simple_mv", "file": "ibis/backends/risingwave/tests/test_streaming.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "column"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple_mv", "code": "# Code from lines 17 to 24"}
{"name": "test_mv_on_simple_source", "file": "ibis/backends/risingwave/tests/test_streaming.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mv_on_simple_source", "code": "# Code from lines 27 to 55"}
{"name": "test_mv_on_table_with_connector", "file": "ibis/backends/risingwave/tests/test_streaming.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mv_on_table_with_connector", "code": "# Code from lines 58 to 90"}
{"name": "test_sink_from", "file": "ibis/backends/risingwave/tests/test_streaming.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sink_from", "code": "# Code from lines 93 to 100"}
{"name": "test_sink_as_select", "file": "ibis/backends/risingwave/tests/test_streaming.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sink_as_select", "code": "# Code from lines 103 to 112"}
{"name": "test_nullif_zero", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_nullif_zero", "code": "# Code from lines 21 to 22"}
{"name": "test_string_length", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_length", "code": "# Code from lines 26 to 27"}
{"name": "test_string_substring", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_substring", "code": "# Code from lines 40 to 42"}
{"name": "test_string_strip", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "opname"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_strip", "code": "# Code from lines 49 to 52"}
{"name": "test_string_pad", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "opname"}, {"name": "count"}, {"name": "char"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_pad", "code": "# Code from lines 59 to 62"}
{"name": "test_string_reverse", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_reverse", "code": "# Code from lines 65 to 66"}
{"name": "test_string_upper", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_upper", "code": "# Code from lines 69 to 70"}
{"name": "test_string_lower", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_lower", "code": "# Code from lines 73 to 74"}
{"name": "test_string_contains", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "haystack"}, {"name": "needle"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_contains", "code": "# Code from lines 87 to 90"}
{"name": "test_repeat", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repeat", "code": "# Code from lines 93 to 95"}
{"name": "test_re_replace", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_re_replace", "code": "# Code from lines 98 to 100"}
{"name": "test_translate", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_translate", "code": "# Code from lines 103 to 105"}
{"name": "test_find_in_set", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "raw_value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_find_in_set", "code": "# Code from lines 111 to 115"}
{"name": "test_isnull_notnull", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "raw_value"}, {"name": "opname"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isnull_notnull", "code": "# Code from lines 127 to 131"}
{"name": "test_string_functions", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_functions", "code": "# Code from lines 150 to 151"}
{"name": "test_regexp", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_regexp", "code": "# Code from lines 162 to 163"}
{"name": "test_fill_null_nullif", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_fill_null_nullif", "code": "# Code from lines 175 to 176"}
{"name": "test_coalesce", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coalesce", "code": "# Code from lines 187 to 188"}
{"name": "test_coalesce_all_na", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coalesce_all_na", "code": "# Code from lines 203 to 204"}
{"name": "test_coalesce_all_na_double", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_coalesce_all_na_double", "code": "# Code from lines 207 to 209"}
{"name": "test_numeric_builtins_work", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_numeric_builtins_work", "code": "# Code from lines 212 to 216"}
{"name": "test_ifelse", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "op"}, {"name": "pandas_op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ifelse", "code": "# Code from lines 236 to 241"}
{"name": "test_bucket", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "pandas_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_bucket", "code": "# Code from lines 287 to 291"}
{"name": "test_category_label", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_category_label", "code": "# Code from lines 294 to 312"}
{"name": "test_union_cte", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "distinct"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_union_cte", "code": "# Code from lines 316 to 322"}
{"name": "test_aggregations", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "pandas_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_aggregations", "code": "# Code from lines 410 to 419"}
{"name": "test_not_contains", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_not_contains", "code": "# Code from lines 422 to 428"}
{"name": "test_group_concat", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_concat", "code": "# Code from lines 431 to 435"}
{"name": "test_distinct_aggregates", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_distinct_aggregates", "code": "# Code from lines 438 to 441"}
{"name": "test_not_exists", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_not_exists", "code": "# Code from lines 444 to 454"}
{"name": "test_subquery", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery", "code": "# Code from lines 457 to 474"}
{"name": "test_simple_window", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple_window", "code": "# Code from lines 478 to 484"}
{"name": "test_rolling_window", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.xfail"], "is_test": true, "test_name": "test_rolling_window", "code": "# Code from lines 491 to 503"}
{"name": "test_partitioned_window", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.xfail"], "is_test": true, "test_name": "test_partitioned_window", "code": "# Code from lines 510 to 531"}
{"name": "test_cumulative_simple_window", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.xfail"], "is_test": true, "test_name": "test_cumulative_simple_window", "code": "# Code from lines 538 to 545"}
{"name": "test_cumulative_ordered_window", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.xfail"], "is_test": true, "test_name": "test_cumulative_ordered_window", "code": "# Code from lines 552 to 560"}
{"name": "test_analytic_shift_functions", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "shift_amount"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.xfail"], "is_test": true, "test_name": "test_analytic_shift_functions", "code": "# Code from lines 569 to 574"}
{"name": "test_first_last_value", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "expected_index"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.xfail"], "is_test": true, "test_name": "test_first_last_value", "code": "# Code from lines 581 to 588"}
{"name": "test_null_column", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_column", "code": "# Code from lines 591 to 596"}
{"name": "test_window_with_arithmetic", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_window_with_arithmetic", "code": "# Code from lines 602 to 610"}
{"name": "test_anonymous_aggregate", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_anonymous_aggregate", "code": "# Code from lines 613 to 618"}
{"name": "test_array_length", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_length", "code": "# Code from lines 621 to 642"}
{"name": "test_head", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_head", "code": "# Code from lines 649 to 653"}
{"name": "test_identical_to", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_identical_to", "code": "# Code from lines 656 to 666"}
{"name": "test_invert_bool", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invert_bool", "code": "# Code from lines 669 to 674"}
{"name": "test_negate_non_boolean", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "field"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_negate_non_boolean", "code": "# Code from lines 690 to 695"}
{"name": "test_boolean_reduction", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "opname"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_boolean_reduction", "code": "# Code from lines 699 to 703"}
{"name": "test_timestamp_with_timezone", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_with_timezone", "code": "# Code from lines 706 to 709"}
{"name": "test_string_temporal_compare", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "opname"}, {"name": "left"}, {"name": "right"}, {"name": "type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_temporal_compare", "code": "# Code from lines 730 to 737"}
{"name": "test_string_temporal_compare_between", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_temporal_compare_between", "code": "# Code from lines 772 to 776"}
{"name": "test_scalar_parameter", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_scalar_parameter", "code": "# Code from lines 782 to 794"}
{"name": "test_string_to_binary_cast", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_to_binary_cast", "code": "# Code from lines 797 to 810"}
{"name": "test_string_to_binary_round_trip", "file": "ibis/backends/risingwave/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_to_binary_round_trip", "code": "# Code from lines 813 to 826"}
{"name": "test_json", "file": "ibis/backends/risingwave/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "data"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_json", "code": "# Code from lines 14 to 18"}
{"name": "test_table", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table", "code": "# Code from lines 24 to 25"}
{"name": "test_array_execute", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_execute", "code": "# Code from lines 28 to 32"}
{"name": "test_literal_execute", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_execute", "code": "# Code from lines 35 to 38"}
{"name": "test_simple_aggregate_execute", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_aggregate_execute", "code": "# Code from lines 41 to 44"}
{"name": "test_list_tables", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 47 to 57"}
{"name": "test_compile_toplevel", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compile_toplevel", "code": "# Code from lines 60 to 64"}
{"name": "test_list_catalogs", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_catalogs", "code": "# Code from lines 67 to 69"}
{"name": "test_list_databases", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_databases", "code": "# Code from lines 72 to 78"}
{"name": "test_create_and_drop_table", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_and_drop_table", "code": "# Code from lines 81 to 89"}
{"name": "test_get_schema_from_query", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "pg_type"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_get_schema_from_query", "code": "# Code from lines 117 to 125"}
{"name": "test_insert_with_cte", "file": "ibis/backends/risingwave/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_with_cte", "code": "# Code from lines 128 to 134"}
{"name": "test_load_geodata", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_load_geodata", "code": "# Code from lines 17 to 20"}
{"name": "test_empty_select", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_empty_select", "code": "# Code from lines 23 to 26"}
{"name": "test_select_point_geodata", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_point_geodata", "code": "# Code from lines 29 to 33"}
{"name": "test_select_linestring_geodata", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_linestring_geodata", "code": "# Code from lines 36 to 40"}
{"name": "test_select_polygon_geodata", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_polygon_geodata", "code": "# Code from lines 43 to 47"}
{"name": "test_select_multipolygon_geodata", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_multipolygon_geodata", "code": "# Code from lines 50 to 54"}
{"name": "test_geo_area", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_area", "code": "# Code from lines 57 to 61"}
{"name": "test_geo_buffer", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_buffer", "code": "# Code from lines 64 to 70"}
{"name": "test_geo_contains", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_contains", "code": "# Code from lines 73 to 75"}
{"name": "test_geo_contains_properly", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_contains_properly", "code": "# Code from lines 78 to 80"}
{"name": "test_geo_covers", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_covers", "code": "# Code from lines 83 to 85"}
{"name": "test_geo_covered_by", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_covered_by", "code": "# Code from lines 88 to 90"}
{"name": "test_geo_d_fully_within", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_d_fully_within", "code": "# Code from lines 93 to 97"}
{"name": "test_geo_d_within", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_d_within", "code": "# Code from lines 100 to 102"}
{"name": "test_geo_end_point", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_end_point", "code": "# Code from lines 105 to 112"}
{"name": "test_geo_envelope", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_envelope", "code": "# Code from lines 115 to 121"}
{"name": "test_geo_within", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_within", "code": "# Code from lines 124 to 126"}
{"name": "test_geo_disjoint", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_disjoint", "code": "# Code from lines 129 to 131"}
{"name": "test_geo_equals", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_equals", "code": "# Code from lines 134 to 143"}
{"name": "test_geo_geometry_n", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_geometry_n", "code": "# Code from lines 146 to 151"}
{"name": "test_geo_geometry_type", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_geometry_type", "code": "# Code from lines 154 to 158"}
{"name": "test_geo_intersects", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_intersects", "code": "# Code from lines 161 to 163"}
{"name": "test_geo_is_valid", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_is_valid", "code": "# Code from lines 166 to 168"}
{"name": "test_geo_line_locate_point", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_line_locate_point", "code": "# Code from lines 171 to 173"}
{"name": "test_geo_line_merge", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_line_merge", "code": "# Code from lines 176 to 179"}
{"name": "test_geo_line_substring", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_line_substring", "code": "# Code from lines 182 to 186"}
{"name": "test_geo_ordering_equals", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_ordering_equals", "code": "# Code from lines 189 to 191"}
{"name": "test_geo_overlaps", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_overlaps", "code": "# Code from lines 194 to 196"}
{"name": "test_geo_touches", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_touches", "code": "# Code from lines 199 to 201"}
{"name": "test_geo_distance", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_distance", "code": "# Code from lines 204 to 213"}
{"name": "test_geo_length", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_length", "code": "# Code from lines 216 to 220"}
{"name": "test_geo_n_points", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_n_points", "code": "# Code from lines 223 to 226"}
{"name": "test_geo_perimeter", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_perimeter", "code": "# Code from lines 229 to 233"}
{"name": "test_geo_srid", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_srid", "code": "# Code from lines 236 to 239"}
{"name": "test_geo_start_point", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_start_point", "code": "# Code from lines 242 to 249"}
{"name": "test_geo_difference", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_difference", "code": "# Code from lines 252 to 265"}
{"name": "test_geo_intersection", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_intersection", "code": "# Code from lines 268 to 281"}
{"name": "test_geo_unary_union", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_unary_union", "code": "# Code from lines 284 to 287"}
{"name": "test_geo_union", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_union", "code": "# Code from lines 290 to 295"}
{"name": "test_geo_x", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_x", "code": "# Code from lines 298 to 302"}
{"name": "test_geo_y", "file": "ibis/backends/postgres/tests/test_postgis.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "gdf"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_y", "code": "# Code from lines 305 to 309"}
{"name": "test_files", "file": "ibis/backends/postgres/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 63 to 64"}
{"name": "test_special_strings", "file": "ibis/backends/postgres/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "data"}, {"name": "data_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.usefixtures"], "is_test": true, "test_name": "test_special_strings", "code": "# Code from lines 16 to 20"}
{"name": "test_literal_geospatial_explicit", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_geospatial_explicit", "code": "# Code from lines 71 to 72"}
{"name": "test_literal_geospatial_inferred", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "shp"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_geospatial_inferred", "code": "# Code from lines 96 to 98"}
{"name": "test_geo_spatial_unops", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial unary operations.", "signature": {"args": [{"name": "geotable"}, {"name": "expr_fn"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geo_spatial_unops", "code": "# Code from lines 155 to 159"}
{"name": "test_geo_spatial_binops", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial binary operations.", "signature": {"args": [{"name": "geotable"}, {"name": "expr_fn"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geo_spatial_binops", "code": "# Code from lines 209 to 213"}
{"name": "test_get_point", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial get point operations.", "signature": {"args": [{"name": "geotable"}, {"name": "expr_fn"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_get_point", "code": "# Code from lines 237 to 245"}
{"name": "test_area", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial area operation.", "signature": {"args": [{"name": "con"}, {"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_area", "code": "# Code from lines 248 to 253"}
{"name": "test_srid", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial srid operation.", "signature": {"args": [{"name": "geotable"}, {"name": "condition"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_srid", "code": "# Code from lines 267 to 271"}
{"name": "test_set_srid", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial set_srid operation.", "signature": {"args": [{"name": "geotable"}, {"name": "condition"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_set_srid", "code": "# Code from lines 285 to 289"}
{"name": "test_transform", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial transform operation.", "signature": {"args": [{"name": "geotable"}, {"name": "condition"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_transform", "code": "# Code from lines 315 to 319"}
{"name": "test_cast_geography", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial transform operation.", "signature": {"args": [{"name": "geotable"}, {"name": "expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cast_geography", "code": "# Code from lines 334 to 340"}
{"name": "test_cast_geometry", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo spatial transform operation.", "signature": {"args": [{"name": "geotable"}, {"name": "expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cast_geometry", "code": "# Code from lines 355 to 361"}
{"name": "test_geo_dataframe", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Testing for geo dataframe output.", "signature": {"args": [{"name": "geotable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_dataframe", "code": "# Code from lines 364 to 368"}
{"name": "test_geo_literals_smoke", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Smoke tests for geo spatial literals.", "signature": {"args": [{"name": "shape"}, {"name": "value"}, {"name": "modifier"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_geo_literals_smoke", "code": "# Code from lines 428 to 431"}
{"name": "test_geo_ops_smoke", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": "Smoke tests for geo spatial operations.", "signature": {"args": [{"name": "geotable"}, {"name": "fn_expr"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geo_ops_smoke", "code": "# Code from lines 493 to 496"}
{"name": "test_geo_equals", "file": "ibis/backends/postgres/tests/test_geospatial.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "geotable"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geo_equals", "code": "# Code from lines 499 to 522"}
{"name": "test_database", "file": "ibis/backends/postgres/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.fixture"], "is_test": true, "test_name": "test_database", "code": "# Code from lines 20 to 24"}
{"name": "test_existing_sql_udf", "file": "ibis/backends/postgres/tests/test_udf.py", "type": "test", "docstring": "Test creating ibis UDF object based on existing UDF in the database.", "signature": {"args": [{"name": "con_for_udf"}, {"name": "test_database"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_existing_sql_udf", "code": "# Code from lines 85 to 93"}
{"name": "test_existing_plpython_udf", "file": "ibis/backends/postgres/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_for_udf"}, {"name": "test_database"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_existing_plpython_udf", "code": "# Code from lines 96 to 103"}
{"name": "test_udf", "file": "ibis/backends/postgres/tests/test_udf.py", "type": "test", "docstring": "Test creating a UDF in database based on Python function and then\ncreating an ibis UDF object based on that.", "signature": {"args": [{"name": "test_database"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf", "code": "# Code from lines 106 to 119"}
{"name": "test_array_type", "file": "ibis/backends/postgres/tests/test_udf.py", "type": "test", "docstring": "Test that usage of Array types work Other scalar types can be\nrepresented either by the class or an instance, but Array types work\ndifferently.\n\nArray types must be an instance, because the Array class must be\ninstantiated specifying the datatype of the elements of the array.", "signature": {"args": [{"name": "test_database"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_array_type", "code": "# Code from lines 127 to 142"}
{"name": "test_client_udf_api", "file": "ibis/backends/postgres/tests/test_udf.py", "type": "test", "docstring": "Test creating a UDF in database based on Python function using an ibis\nclient method.", "signature": {"args": [{"name": "test_database"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_client_udf_api", "code": "# Code from lines 145 to 158"}
{"name": "test_client_udf_decorator_fails", "file": "ibis/backends/postgres/tests/test_udf.py", "type": "test", "docstring": "Test that UDF creation fails when creating a UDF based on a Python\nfunction that has been defined with decorators.\n\nDecorators are not currently supported, because the decorators end\nup in the body of the UDF but are not defined in the body, therefore\ncausing a NameError.", "signature": {"args": [{"name": "con_for_udf"}, {"name": "test_database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_client_udf_decorator_fails", "code": "# Code from lines 161 to 183"}
{"name": "test_cast", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "expr_fn"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cast", "code": "# Code from lines 36 to 38"}
{"name": "test_date_cast", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_date_cast", "code": "# Code from lines 41 to 43"}
{"name": "test_noop_cast", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "column"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_noop_cast", "code": "# Code from lines 64 to 66"}
{"name": "test_timestamp_cast_noop", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_cast_noop", "code": "# Code from lines 69 to 81"}
{"name": "test_strftime", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "pattern"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_strftime", "code": "# Code from lines 134 to 145"}
{"name": "test_typeof", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_typeof", "code": "# Code from lines 174 to 175"}
{"name": "test_string_length", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_length", "code": "# Code from lines 179 to 180"}
{"name": "test_string_substring", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_substring", "code": "# Code from lines 193 to 195"}
{"name": "test_string_strip", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "opname"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_strip", "code": "# Code from lines 202 to 205"}
{"name": "test_string_pad", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "opname"}, {"name": "count"}, {"name": "char"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_pad", "code": "# Code from lines 212 to 215"}
{"name": "test_string_reverse", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_reverse", "code": "# Code from lines 218 to 219"}
{"name": "test_string_upper", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_upper", "code": "# Code from lines 222 to 223"}
{"name": "test_string_lower", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_lower", "code": "# Code from lines 226 to 227"}
{"name": "test_string_contains", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "haystack"}, {"name": "needle"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_contains", "code": "# Code from lines 240 to 243"}
{"name": "test_repeat", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repeat", "code": "# Code from lines 246 to 248"}
{"name": "test_re_replace", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_re_replace", "code": "# Code from lines 251 to 253"}
{"name": "test_translate", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_translate", "code": "# Code from lines 256 to 258"}
{"name": "test_find_in_set", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "raw_value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_find_in_set", "code": "# Code from lines 264 to 268"}
{"name": "test_isnull_notnull", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "raw_value"}, {"name": "opname"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isnull_notnull", "code": "# Code from lines 280 to 284"}
{"name": "test_string_functions", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_functions", "code": "# Code from lines 303 to 304"}
{"name": "test_regexp", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_regexp", "code": "# Code from lines 315 to 316"}
{"name": "test_regexp_extract", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_regexp_extract", "code": "# Code from lines 331 to 332"}
{"name": "test_fill_null_nullif", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_fill_null_nullif", "code": "# Code from lines 344 to 345"}
{"name": "test_coalesce", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coalesce", "code": "# Code from lines 356 to 357"}
{"name": "test_coalesce_all_na", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coalesce_all_na", "code": "# Code from lines 368 to 369"}
{"name": "test_coalesce_all_na_double", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_coalesce_all_na_double", "code": "# Code from lines 372 to 374"}
{"name": "test_numeric_builtins_work", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_numeric_builtins_work", "code": "# Code from lines 377 to 381"}
{"name": "test_ifelse", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "op"}, {"name": "pandas_op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ifelse", "code": "# Code from lines 401 to 406"}
{"name": "test_bucket", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "pandas_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_bucket", "code": "# Code from lines 452 to 456"}
{"name": "test_category_label", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_category_label", "code": "# Code from lines 459 to 477"}
{"name": "test_union_cte", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "distinct"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_union_cte", "code": "# Code from lines 481 to 487"}
{"name": "test_aggregations", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "pandas_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_aggregations", "code": "# Code from lines 605 to 614"}
{"name": "test_not_contains", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_not_contains", "code": "# Code from lines 617 to 623"}
{"name": "test_group_concat", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_concat", "code": "# Code from lines 626 to 630"}
{"name": "test_distinct_aggregates", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_distinct_aggregates", "code": "# Code from lines 633 to 636"}
{"name": "test_not_exists", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_not_exists", "code": "# Code from lines 639 to 649"}
{"name": "test_interactive_repr_shows_error", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interactive_repr_shows_error", "code": "# Code from lines 652 to 660"}
{"name": "test_subquery", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery", "code": "# Code from lines 663 to 680"}
{"name": "test_simple_window", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple_window", "code": "# Code from lines 684 to 690"}
{"name": "test_rolling_window", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_rolling_window", "code": "# Code from lines 694 to 706"}
{"name": "test_partitioned_window", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_partitioned_window", "code": "# Code from lines 710 to 731"}
{"name": "test_cumulative_simple_window", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cumulative_simple_window", "code": "# Code from lines 735 to 742"}
{"name": "test_cumulative_partitioned_window", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cumulative_partitioned_window", "code": "# Code from lines 746 to 756"}
{"name": "test_cumulative_ordered_window", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cumulative_ordered_window", "code": "# Code from lines 760 to 768"}
{"name": "test_cumulative_partitioned_ordered_window", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "func"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cumulative_partitioned_ordered_window", "code": "# Code from lines 772 to 781"}
{"name": "test_analytic_shift_functions", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "shift_amount"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_analytic_shift_functions", "code": "# Code from lines 787 to 792"}
{"name": "test_first_last_value", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "expected_index"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_first_last_value", "code": "# Code from lines 798 to 805"}
{"name": "test_null_column", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_column", "code": "# Code from lines 808 to 813"}
{"name": "test_null_column_union", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_column_union", "code": "# Code from lines 816 to 836"}
{"name": "test_window_with_arithmetic", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window_with_arithmetic", "code": "# Code from lines 839 to 847"}
{"name": "test_anonymous_aggregate", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_anonymous_aggregate", "code": "# Code from lines 850 to 855"}
{"name": "test_array_length", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "array_types"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_length", "code": "# Code from lines 863 to 878"}
{"name": "test_array_schema", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "array_types"}, {"name": "column"}, {"name": "value_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_schema", "code": "# Code from lines 885 to 886"}
{"name": "test_array_collect", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "array_types"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_collect", "code": "# Code from lines 889 to 900"}
{"name": "test_array_index", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "array_types"}, {"name": "index"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_index", "code": "# Code from lines 904 to 914"}
{"name": "test_array_repeat", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "array_types"}, {"name": "n"}, {"name": "mul"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_repeat", "code": "# Code from lines 925 to 931"}
{"name": "test_array_concat", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "array_types"}, {"name": "catop"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_concat", "code": "# Code from lines 941 to 948"}
{"name": "test_array_concat_mixed_types", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "array_types"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_concat_mixed_types", "code": "# Code from lines 951 to 953"}
{"name": "test_create_table_from_expr", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "trunc"}, {"name": "temp_table2"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_from_expr", "code": "# Code from lines 965 to 968"}
{"name": "test_truncate_table", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "trunc"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_truncate_table", "code": "# Code from lines 971 to 974"}
{"name": "test_head", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_head", "code": "# Code from lines 977 to 981"}
{"name": "test_identical_to", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_identical_to", "code": "# Code from lines 984 to 994"}
{"name": "test_analytic_functions", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_analytic_functions", "code": "# Code from lines 997 to 1005"}
{"name": "test_invert_bool", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invert_bool", "code": "# Code from lines 1008 to 1013"}
{"name": "test_negate_non_boolean", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "field"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_negate_non_boolean", "code": "# Code from lines 1029 to 1034"}
{"name": "test_boolean_reduction", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "opname"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_boolean_reduction", "code": "# Code from lines 1038 to 1042"}
{"name": "test_timestamp_with_timezone", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_with_timezone", "code": "# Code from lines 1045 to 1048"}
{"name": "test_ts_timezone_is_preserved", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tzone_compute"}, {"name": "tz"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ts_timezone_is_preserved", "code": "# Code from lines 1086 to 1087"}
{"name": "test_timestamp_with_timezone_select", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tzone_compute"}, {"name": "tz"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_with_timezone_select", "code": "# Code from lines 1090 to 1092"}
{"name": "test_timestamp_type_accepts_all_timezones", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_type_accepts_all_timezones", "code": "# Code from lines 1095 to 1099"}
{"name": "test_string_temporal_compare", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "opname"}, {"name": "left"}, {"name": "right"}, {"name": "type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_temporal_compare", "code": "# Code from lines 1122 to 1129"}
{"name": "test_string_temporal_compare_between", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_temporal_compare_between", "code": "# Code from lines 1166 to 1170"}
{"name": "test_scalar_parameter", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_parameter", "code": "# Code from lines 1173 to 1185"}
{"name": "test_string_to_binary_cast", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_to_binary_cast", "code": "# Code from lines 1188 to 1201"}
{"name": "test_string_to_binary_round_trip", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_to_binary_round_trip", "code": "# Code from lines 1204 to 1218"}
{"name": "test_array_discovery", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_discovery", "code": "# Code from lines 1221 to 1233"}
{"name": "test_insert_null_timestamp", "file": "ibis/backends/postgres/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tz"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_insert_null_timestamp", "code": "# Code from lines 1237 to 1248"}
{"name": "test_json", "file": "ibis/backends/postgres/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "data"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_json", "code": "# Code from lines 24 to 28"}
{"name": "test_jsonb_extract_path", "file": "ibis/backends/postgres/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_jsonb_extract_path", "code": "# Code from lines 31 to 38"}
{"name": "test_json_getitem_object", "file": "ibis/backends/postgres/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "jsonb_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_json_getitem_object", "code": "# Code from lines 41 to 50"}
{"name": "test_json_getitem_array", "file": "ibis/backends/postgres/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "jsonb_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_json_getitem_array", "code": "# Code from lines 53 to 58"}
{"name": "test_json_array", "file": "ibis/backends/postgres/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "jsonb_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_json_array", "code": "# Code from lines 61 to 69"}
{"name": "test_json_unwrap", "file": "ibis/backends/postgres/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "jsonb_t"}, {"name": "typ"}, {"name": "expected_data"}, {"name": "expr_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_json_unwrap", "code": "# Code from lines 85 to 96"}
{"name": "test_table", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table", "code": "# Code from lines 47 to 48"}
{"name": "test_array_execute", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_execute", "code": "# Code from lines 51 to 55"}
{"name": "test_literal_execute", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_execute", "code": "# Code from lines 58 to 61"}
{"name": "test_raw_sql", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_raw_sql", "code": "# Code from lines 64 to 72"}
{"name": "test_simple_aggregate_execute", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_aggregate_execute", "code": "# Code from lines 75 to 78"}
{"name": "test_list_tables", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 81 to 89"}
{"name": "test_compile_toplevel", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compile_toplevel", "code": "# Code from lines 92 to 97"}
{"name": "test_list_catalogs", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_catalogs", "code": "# Code from lines 100 to 102"}
{"name": "test_interval_films_schema", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_films_schema", "code": "# Code from lines 105 to 108"}
{"name": "test_all_interval_types_execute", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "intervals"}, {"name": "column"}, {"name": "expected_dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_all_interval_types_execute", "code": "# Code from lines 121 to 126"}
{"name": "test_unsupported_intervals", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unsupported_intervals", "code": "# Code from lines 129 to 133"}
{"name": "test_create_and_drop_table", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}, {"name": "params"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_and_drop_table", "code": "# Code from lines 137 to 154"}
{"name": "test_get_schema_from_query", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "pg_type"}, {"name": "expected_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_get_schema_from_query", "code": "# Code from lines 198 to 204"}
{"name": "test_unknown_column_type", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "col"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_unknown_column_type", "code": "# Code from lines 208 to 210"}
{"name": "test_insert_with_cte", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_with_cte", "code": "# Code from lines 213 to 218"}
{"name": "test_timezone_from_column", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "contz"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timezone_from_column", "code": "# Code from lines 234 to 267"}
{"name": "test_kwargs_passthrough_in_connect", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_kwargs_passthrough_in_connect", "code": "# Code from lines 270 to 277"}
{"name": "test_port", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_port", "code": "# Code from lines 280 to 283"}
{"name": "test_pgvector_type_load", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": "CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3));\nINSERT INTO items (embedding) VALUES ('[1,2,3]'), ('[4,5,6]');", "signature": {"args": [{"name": "con"}, {"name": "vector_size"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_pgvector_type_load", "code": "# Code from lines 287 to 324"}
{"name": "test_name_dtype", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_name_dtype", "code": "# Code from lines 327 to 340"}
{"name": "test_infoschema_dtypes", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_infoschema_dtypes", "code": "# Code from lines 343 to 405"}
{"name": "test_password_with_bracket", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_password_with_bracket", "code": "# Code from lines 408 to 416"}
{"name": "test_create_geospatial_table_with_srid", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_geospatial_table_with_srid", "code": "# Code from lines 419 to 443"}
{"name": "test_enum_table", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "enum_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_enum_table", "code": "# Code from lines 457 to 462"}
{"name": "test_parsing_oid_dtype", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parsing_oid_dtype", "code": "# Code from lines 465 to 468"}
{"name": "test_create_table_overwrite", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_overwrite", "code": "# Code from lines 479 to 482"}
{"name": "test_insert_overwrite", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_db"}, {"name": "overwrite"}, {"name": "insert_overwrite"}, {"name": "expected_count"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_insert_overwrite", "code": "# Code from lines 491 to 503"}
{"name": "test_nans_nulls", "file": "ibis/backends/postgres/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nans_nulls", "code": "# Code from lines 506 to 517"}
{"name": "test_files", "file": "ibis/backends/exasol/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 59 to 60"}
{"name": "test_attach_file", "file": "ibis/backends/sqlite/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_attach_file", "code": "# Code from lines 15 to 34"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/sqlite/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 37 to 45"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/sqlite/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 48 to 55"}
{"name": "test_connect", "file": "ibis/backends/sqlite/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "url"}, {"name": "ext"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_connect", "code": "# Code from lines 75 to 84"}
{"name": "test_has_operation", "file": "ibis/backends/sqlite/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_has_operation", "code": "# Code from lines 87 to 96"}
{"name": "test_list_temp_tables_by_default", "file": "ibis/backends/sqlite/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_temp_tables_by_default", "code": "# Code from lines 99 to 103"}
{"name": "test_timestamps", "file": "ibis/backends/sqlite/tests/test_types.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "db"}, {"name": "table"}, {"name": "data"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamps", "code": "# Code from lines 70 to 83"}
{"name": "test_type_map", "file": "ibis/backends/sqlite/tests/test_types.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_type_map", "code": "# Code from lines 86 to 97"}
{"name": "test_read_basic_types", "file": "ibis/backends/sqlite/tests/test_types.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_basic_types", "code": "# Code from lines 100 to 105"}
{"name": "test_parse", "file": "ibis/backends/snowflake/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snowflake_type"}, {"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse", "code": "# Code from lines 37 to 38"}
{"name": "test_extract_type_from_table_query", "file": "ibis/backends/snowflake/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snowflake_type"}, {"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_extract_type_from_table_query", "code": "# Code from lines 91 to 98"}
{"name": "test_extract_timestamp_from_table", "file": "ibis/backends/snowflake/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snowflake_type"}, {"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_extract_timestamp_from_table", "code": "# Code from lines 115 to 123"}
{"name": "test_array_discovery", "file": "ibis/backends/snowflake/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_discovery", "code": "# Code from lines 126 to 138"}
{"name": "test_more_than_one_quantile", "file": "ibis/backends/snowflake/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_more_than_one_quantile", "code": "# Code from lines 7 to 16"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/snowflake/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}, {"name": "args"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 39 to 46"}
{"name": "test_compress", "file": "ibis/backends/snowflake/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}, {"name": "pyargs"}, {"name": "snowargs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_compress", "code": "# Code from lines 56 to 63"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/snowflake/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 74 to 92"}
{"name": "test_xgboost_model", "file": "ibis/backends/snowflake/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_xgboost_model", "code": "# Code from lines 95 to 153"}
{"name": "test_ibis_inside_snowpark", "file": "ibis/backends/snowflake/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snowpark_session"}, {"name": "execute_as"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ibis_inside_snowpark", "code": "# Code from lines 225 to 278"}
{"name": "test_cross_db_access", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_catalog"}, {"name": "temp_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cross_db_access", "code": "# Code from lines 49 to 56"}
{"name": "test_cross_db_create_table", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_catalog"}, {"name": "temp_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cross_db_create_table", "code": "# Code from lines 59 to 66"}
{"name": "test_basic_memtable_registration", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_con"}, {"name": "data"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_basic_memtable_registration", "code": "# Code from lines 85 to 89"}
{"name": "test_repeated_memtable_registration", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_con"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repeated_memtable_registration", "code": "# Code from lines 92 to 105"}
{"name": "test_timestamp_tz_column", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_tz_column", "code": "# Code from lines 108 to 115"}
{"name": "test_create_database", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_database", "code": "# Code from lines 118 to 132"}
{"name": "test_create_catalog", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_catalog", "code": "# Code from lines 135 to 143"}
{"name": "test_drop_current_catalog_not_allowed", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "cat_con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_current_catalog_not_allowed", "code": "# Code from lines 156 to 171"}
{"name": "test_drop_current_db_not_allowed", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "db_con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_current_db_not_allowed", "code": "# Code from lines 174 to 189"}
{"name": "test_read_csv_options", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_csv_options", "code": "# Code from lines 192 to 198"}
{"name": "test_read_csv_https", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_csv_https", "code": "# Code from lines 201 to 214"}
{"name": "test_read_json", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}, {"name": "serialize"}, {"name": "json_data"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_read_json", "code": "# Code from lines 233 to 240"}
{"name": "test_read_parquet", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_parquet", "code": "# Code from lines 243 to 248"}
{"name": "test_array_repr", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_repr", "code": "# Code from lines 251 to 255"}
{"name": "test_insert", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert", "code": "# Code from lines 258 to 311"}
{"name": "test_compile_does_not_make_requests", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compile_does_not_make_requests", "code": "# Code from lines 314 to 329"}
{"name": "test_no_argument_connection", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail", "pytest.mark.xfail"], "is_test": true, "test_name": "test_no_argument_connection", "code": "# Code from lines 341 to 346"}
{"name": "test_struct_of_json", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_struct_of_json", "code": "# Code from lines 349 to 359"}
{"name": "test_list_tables_with_database", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "database"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_list_tables_with_database", "code": "# Code from lines 367 to 378"}
{"name": "test_timestamp_memtable", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_memtable", "code": "# Code from lines 381 to 393"}
{"name": "test_connect_without_snowflake_url", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_connect_without_snowflake_url", "code": "# Code from lines 396 to 419"}
{"name": "test_table_unnest_with_empty_strings", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_unnest_with_empty_strings", "code": "# Code from lines 422 to 427"}
{"name": "test_insert_dict_variants", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_dict_variants", "code": "# Code from lines 430 to 442"}
{"name": "test_fancy_column_names", "file": "ibis/backends/snowflake/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "column_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_fancy_column_names", "code": "# Code from lines 458 to 463"}
{"name": "test_simple", "file": "ibis/backends/bigquery/tests/unit/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "datatype"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple", "code": "# Code from lines 75 to 76"}
{"name": "test_simple_failure_mode", "file": "ibis/backends/bigquery/tests/unit/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "datatype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple_failure_mode", "code": "# Code from lines 80 to 82"}
{"name": "test_array_type", "file": "ibis/backends/bigquery/tests/unit/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_type", "code": "# Code from lines 85 to 92"}
{"name": "test__merge_params_into_config", "file": "ibis/backends/bigquery/tests/unit/test___init__.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "query_job_config"}, {"name": "params"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test__merge_params_into_config", "code": "# Code from lines 98 to 115"}
{"name": "test_literal_year", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "dtype"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_year", "code": "# Code from lines 57 to 59"}
{"name": "test_day_of_week", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "dtype"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_day_of_week", "code": "# Code from lines 73 to 80"}
{"name": "test_hash", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "dtype"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_hash", "code": "# Code from lines 90 to 93"}
{"name": "test_hashbytes", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "how"}, {"name": "dtype"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_hashbytes", "code": "# Code from lines 98 to 101"}
{"name": "test_integer_to_timestamp", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "unit"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_integer_to_timestamp", "code": "# Code from lines 113 to 115"}
{"name": "test_literal_string", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_string", "code": "# Code from lines 127 to 129"}
{"name": "test_literal_timestamp_or_time", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "case"}, {"name": "dtype"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_timestamp_or_time", "code": "# Code from lines 142 to 144"}
{"name": "test_projection_fusion_only_peeks_at_immediate_parent", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_fusion_only_peeks_at_immediate_parent", "code": "# Code from lines 147 to 159"}
{"name": "test_temporal_truncate", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "unit"}, {"name": "func"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_temporal_truncate", "code": "# Code from lines 202 to 206"}
{"name": "test_extract_temporal_from_timestamp", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "kind"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_extract_temporal_from_timestamp", "code": "# Code from lines 210 to 213"}
{"name": "test_now", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_now", "code": "# Code from lines 216 to 218"}
{"name": "test_binary", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_binary", "code": "# Code from lines 221 to 224"}
{"name": "test_substring", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_substring", "code": "# Code from lines 227 to 230"}
{"name": "test_substring_neg_length", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_substring_neg_length", "code": "# Code from lines 233 to 239"}
{"name": "test_bucket", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bucket", "code": "# Code from lines 242 to 246"}
{"name": "test_window_unbounded", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "kind"}, {"name": "begin"}, {"name": "end"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_unbounded", "code": "# Code from lines 256 to 260"}
{"name": "test_large_compile", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": "Tests that compiling a large expression tree finishes within a\nreasonable amount of time.", "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_large_compile", "code": "# Code from lines 263 to 284"}
{"name": "test_set_operation", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "operation"}, {"name": "keywords"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_set_operation", "code": "# Code from lines 296 to 300"}
{"name": "test_geospatial_point", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_point", "code": "# Code from lines 303 to 306"}
{"name": "test_geospatial_azimuth", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_azimuth", "code": "# Code from lines 309 to 312"}
{"name": "test_geospatial_unary_union", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_unary_union", "code": "# Code from lines 315 to 318"}
{"name": "test_geospatial_unary", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "operation"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_unary", "code": "# Code from lines 336 to 340"}
{"name": "test_geospatial_unary_positional_only", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "operation"}, {"name": "arg"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_unary_positional_only", "code": "# Code from lines 346 to 350"}
{"name": "test_geospatial_binary", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "operation"}, {"name": "keywords"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_binary", "code": "# Code from lines 372 to 375"}
{"name": "test_geospatial_minmax", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "operation"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_minmax", "code": "# Code from lines 379 to 382"}
{"name": "test_geospatial_xy", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dimension_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geospatial_xy", "code": "# Code from lines 386 to 389"}
{"name": "test_geospatial_simplify", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_simplify", "code": "# Code from lines 392 to 395"}
{"name": "test_geospatial_simplify_error", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_simplify_error", "code": "# Code from lines 398 to 404"}
{"name": "test_timestamp_accepts_date_literals", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_accepts_date_literals", "code": "# Code from lines 407 to 413"}
{"name": "test_union", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "distinct"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_union", "code": "# Code from lines 417 to 419"}
{"name": "test_divide_by_zero", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "op"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_divide_by_zero", "code": "# Code from lines 423 to 425"}
{"name": "test_identical_to", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_identical_to", "code": "# Code from lines 428 to 432"}
{"name": "test_to_timestamp_no_timezone", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_timestamp_no_timezone", "code": "# Code from lines 435 to 437"}
{"name": "test_to_timestamp_timezone", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_timestamp_timezone", "code": "# Code from lines 440 to 442"}
{"name": "test_window_function", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "window"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_function", "code": "# Code from lines 466 to 468"}
{"name": "test_range_window_function", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "window"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_range_window_function", "code": "# Code from lines 488 to 490"}
{"name": "test_trailing_range_window", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "preceding"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_trailing_range_window", "code": "# Code from lines 511 to 514"}
{"name": "test_union_cte", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "distinct1"}, {"name": "distinct2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_union_cte", "code": "# Code from lines 519 to 525"}
{"name": "test_bool_reducers", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "funcname"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_bool_reducers", "code": "# Code from lines 529 to 532"}
{"name": "test_bool_reducers_where_simple", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bool_reducers_where_simple", "code": "# Code from lines 535 to 539"}
{"name": "test_bool_reducers_where_conj", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bool_reducers_where_conj", "code": "# Code from lines 542 to 546"}
{"name": "test_approx", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "agg"}, {"name": "where"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_approx", "code": "# Code from lines 554 to 558"}
{"name": "test_bit", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "funcname"}, {"name": "where"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_bit", "code": "# Code from lines 569 to 572"}
{"name": "test_cov", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "how"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cov", "code": "# Code from lines 576 to 579"}
{"name": "test_cov_invalid_how", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cov_invalid_how", "code": "# Code from lines 582 to 586"}
{"name": "test_compile_toplevel", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compile_toplevel", "code": "# Code from lines 589 to 595"}
{"name": "test_scalar_param_scope", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_param_scope", "code": "# Code from lines 598 to 602"}
{"name": "test_cast_float_to_int", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast_float_to_int", "code": "# Code from lines 605 to 608"}
{"name": "test_unnest", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unnest", "code": "# Code from lines 611 to 645"}
{"name": "test_field_names_strip_whitespace", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "fieldname"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_field_names_strip_whitespace", "code": "# Code from lines 656 to 657"}
{"name": "test_subquery_scalar_params", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_scalar_params", "code": "# Code from lines 660 to 678"}
{"name": "test_time_from_hms_with_micros", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_time_from_hms_with_micros", "code": "# Code from lines 681 to 688"}
{"name": "test_approx_quantiles", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "quantiles"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_approx_quantiles", "code": "# Code from lines 701 to 704"}
{"name": "test_unreasonably_long_name", "file": "ibis/backends/bigquery/tests/unit/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unreasonably_long_name", "code": "# Code from lines 707 to 713"}
{"name": "test_parse_project_and_dataset", "file": "ibis/backends/bigquery/tests/unit/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project"}, {"name": "dataset"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_project_and_dataset", "code": "# Code from lines 25 to 27"}
{"name": "test_parse_project_and_dataset_raises_error", "file": "ibis/backends/bigquery/tests/unit/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parse_project_and_dataset_raises_error", "code": "# Code from lines 30 to 33"}
{"name": "test_force_quoting", "file": "ibis/backends/bigquery/tests/unit/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "bq_path_str"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_force_quoting", "code": "# Code from lines 53 to 57"}
{"name": "test_repeated_project_name", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repeated_project_name", "code": "# Code from lines 18 to 27"}
{"name": "test_project_id_different_from_default_credentials", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_project_id_different_from_default_credentials", "code": "# Code from lines 30 to 40"}
{"name": "test_without_dataset", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_without_dataset", "code": "# Code from lines 43 to 46"}
{"name": "test_application_name_sets_user_agent", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_application_name_sets_user_agent", "code": "# Code from lines 49 to 61"}
{"name": "test_auth_default", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_auth_default", "code": "# Code from lines 64 to 89"}
{"name": "test_auth_local_webserver", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_auth_local_webserver", "code": "# Code from lines 92 to 110"}
{"name": "test_auth_external_data", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_auth_external_data", "code": "# Code from lines 113 to 132"}
{"name": "test_auth_cache_reauth", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_auth_cache_reauth", "code": "# Code from lines 135 to 156"}
{"name": "test_auth_cache_none", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_auth_cache_none", "code": "# Code from lines 159 to 177"}
{"name": "test_auth_cache_unknown", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_auth_cache_unknown", "code": "# Code from lines 180 to 186"}
{"name": "test_client_with_regional_endpoints", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "credentials"}, {"name": "dataset_id"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_client_with_regional_endpoints", "code": "# Code from lines 189 to 242"}
{"name": "test_create_table_from_memtable_needs_quotes", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "dataset_id"}, {"name": "credentials"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_from_memtable_needs_quotes", "code": "# Code from lines 245 to 258"}
{"name": "test_project_id_from_arg", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_project_id_from_arg", "code": "# Code from lines 261 to 263"}
{"name": "test_project_id_from_client", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_project_id_from_client", "code": "# Code from lines 266 to 269"}
{"name": "test_project_id_from_default", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "default_credentials"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_project_id_from_default", "code": "# Code from lines 272 to 276"}
{"name": "test_project_id_missing", "file": "ibis/backends/bigquery/tests/system/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "credentials"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_project_id_missing", "code": "# Code from lines 279 to 281"}
{"name": "test_column_execute", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_execute", "code": "# Code from lines 27 to 37"}
{"name": "test_list_tables", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 40 to 52"}
{"name": "test_current_catalog", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_current_catalog", "code": "# Code from lines 55 to 56"}
{"name": "test_current_database", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_current_database", "code": "# Code from lines 59 to 60"}
{"name": "test_array_collect", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "struct_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_collect", "code": "# Code from lines 63 to 81"}
{"name": "test_count_distinct_with_filter", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_count_distinct_with_filter", "code": "# Code from lines 84 to 89"}
{"name": "test_cast_string_to_date", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast_string_to_date", "code": "# Code from lines 92 to 112"}
{"name": "test_cast_float_to_int", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast_float_to_int", "code": "# Code from lines 115 to 118"}
{"name": "test_has_partitions", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "parted_alltypes"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_has_partitions", "code": "# Code from lines 121 to 124"}
{"name": "test_different_partition_col_name", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "monkeypatch"}, {"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_different_partition_col_name", "code": "# Code from lines 127 to 133"}
{"name": "test_repr_struct_of_array_of_struct", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_repr_struct_of_array_of_struct", "code": "# Code from lines 136 to 188"}
{"name": "test_raw_sql", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_raw_sql", "code": "# Code from lines 191 to 194"}
{"name": "test_parted_column_rename", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "parted_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parted_column_rename", "code": "# Code from lines 197 to 199"}
{"name": "test_scalar_param_partition_time", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "parted_alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_param_partition_time", "code": "# Code from lines 202 to 208"}
{"name": "test_parted_column", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "kind"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parted_column", "code": "# Code from lines 212 to 216"}
{"name": "test_cross_project_query", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "public"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cross_project_query", "code": "# Code from lines 219 to 227"}
{"name": "test_set_database", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con2"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_set_database", "code": "# Code from lines 230 to 233"}
{"name": "test_exists_table_different_project", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_exists_table_different_project", "code": "# Code from lines 236 to 241"}
{"name": "test_multiple_project_queries_execute", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_multiple_project_queries_execute", "code": "# Code from lines 249 to 259"}
{"name": "test_string_as_timestamp", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_as_timestamp", "code": "# Code from lines 262 to 276"}
{"name": "test_timestamp_column_parted_is_not_renamed", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_column_parted_is_not_renamed", "code": "# Code from lines 279 to 282"}
{"name": "test_numeric_table_schema", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numeric_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_numeric_table_schema", "code": "# Code from lines 285 to 288"}
{"name": "test_numeric_sum", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numeric_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_numeric_sum", "code": "# Code from lines 291 to 297"}
{"name": "test_boolean_casting", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_boolean_casting", "code": "# Code from lines 300 to 306"}
{"name": "test_approx_median", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_approx_median", "code": "# Code from lines 309 to 318"}
{"name": "test_create_table_bignumeric", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_bignumeric", "code": "# Code from lines 321 to 326"}
{"name": "test_geography_table", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geography_table", "code": "# Code from lines 329 to 342"}
{"name": "test_timestamp_table", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_table", "code": "# Code from lines 345 to 361"}
{"name": "test_fully_qualified_table_creation", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "project_id"}, {"name": "dataset_id"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_fully_qualified_table_creation", "code": "# Code from lines 364 to 367"}
{"name": "test_fully_qualified_memtable_compile", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "dataset_id"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_fully_qualified_memtable_compile", "code": "# Code from lines 370 to 386"}
{"name": "test_create_table_with_options", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_with_options", "code": "# Code from lines 389 to 408"}
{"name": "test_create_temp_table_from_scratch", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "dataset_id"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_temp_table_from_scratch", "code": "# Code from lines 411 to 416"}
{"name": "test_create_table_from_scratch_with_spaces", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "project_id"}, {"name": "dataset_id"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_from_scratch_with_spaces", "code": "# Code from lines 419 to 427"}
{"name": "test_table_suffix", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ret_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_table_suffix", "code": "# Code from lines 431 to 445"}
{"name": "test_parameters_in_url_connect", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parameters_in_url_connect", "code": "# Code from lines 448 to 452"}
{"name": "test_complex_column_name", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_column_name", "code": "# Code from lines 455 to 460"}
{"name": "test_geospatial_interactive", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geospatial_interactive", "code": "# Code from lines 463 to 474"}
{"name": "test_geom_from_pyarrow", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geom_from_pyarrow", "code": "# Code from lines 477 to 503"}
{"name": "test_raw_sql_params_with_alias", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_raw_sql_params_with_alias", "code": "# Code from lines 506 to 512"}
{"name": "test_window_with_count_distinct", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_table"}, {"name": "expr"}, {"name": "query"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_with_count_distinct", "code": "# Code from lines 542 to 554"}
{"name": "test_query_with_job_id_prefix", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con3", "type": "Backend"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_query_with_job_id_prefix", "code": "# Code from lines 557 to 561"}
{"name": "test_read_csv_with_custom_load_job_prefix", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": "Since methods that upload data to BigQuery (like `read_csv`) don't return any data,\nthey also don't return a job where we can inspect the job ID, so it's a little\nawkward to test that the job ID prefix is set correctly. This does it indirectly\nby spying on the `query` method of the client, which is called with the job ID\nprefix when the data is uploaded, and we trust that the BQ library uses it correctly.\nElse, this test tries to be flexible to allow internal changes in the implementation\nof the `read_csv` method.", "signature": {"args": [{"name": "con3", "type": "Backend"}, {"name": "mocker", "type": "MockerFixture"}, {"name": "tmpdir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_csv_with_custom_load_job_prefix", "code": "# Code from lines 564 to 591"}
{"name": "test_insert_with_custom_load_job_prefix", "file": "ibis/backends/bigquery/tests/system/test_client.py", "type": "test", "docstring": "Since methods that upload data to BigQuery (like `insert`) don't return any data,\nthey also don't return a job where we can inspect the job ID, so it's a little\nawkward to test that the job ID prefix is set correctly. This does it indirectly\nby spying on the `query` method of the client, which is called with the job ID\nprefix when the data is uploaded, and we trust that the BQ library uses it correctly.\nElse, this test tries to be flexible to allow internal changes in the implementation\nof the `insert` method.", "signature": {"args": [{"name": "con3", "type": "Backend"}, {"name": "mocker", "type": "MockerFixture"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_with_custom_load_job_prefix", "code": "# Code from lines 594 to 619"}
{"name": "test_udf", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf", "code": "# Code from lines 31 to 45"}
{"name": "test_udf_with_struct", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf_with_struct", "code": "# Code from lines 48 to 65"}
{"name": "test_udf_compose", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf_compose", "code": "# Code from lines 68 to 81"}
{"name": "test_udf_scalar", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf_scalar", "code": "# Code from lines 84 to 91"}
{"name": "test_multiple_calls_has_one_definition", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_calls_has_one_definition", "code": "# Code from lines 94 to 102"}
{"name": "test_udf_libraries", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_udf_libraries", "code": "# Code from lines 110 to 124"}
{"name": "test_udf_with_len", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf_with_len", "code": "# Code from lines 127 to 137"}
{"name": "test_builtin_scalar", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_scalar", "code": "# Code from lines 153 to 164"}
{"name": "test_builtin_agg", "file": "ibis/backends/bigquery/tests/system/udf/test_udf_execute.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "where"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_agg", "code": "# Code from lines 175 to 184"}
{"name": "test_symbol_table", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_symbol_table", "code": "# Code from lines 15 to 18"}
{"name": "test_function_def", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_function_def", "code": "# Code from lines 25 to 30"}
{"name": "test_variable_declaration", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_variable_declaration", "code": "# Code from lines 33 to 39"}
{"name": "test_yield", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_yield", "code": "# Code from lines 42 to 47"}
{"name": "test_yield_from", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.skipif"], "is_test": true, "test_name": "test_yield_from", "code": "# Code from lines 51 to 65"}
{"name": "test_assign", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_assign", "code": "# Code from lines 68 to 76"}
{"name": "test_binary_operators", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "op"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_binary_operators", "code": "# Code from lines 96 to 98"}
{"name": "test_pow", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pow", "code": "# Code from lines 101 to 107"}
{"name": "test_floordiv", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_floordiv", "code": "# Code from lines 110 to 116"}
{"name": "test_unary_minus", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unary_minus", "code": "# Code from lines 119 to 125"}
{"name": "test_unary_plus", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unary_plus", "code": "# Code from lines 128 to 134"}
{"name": "test_true_false_none", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_true_false_none", "code": "# Code from lines 137 to 145"}
{"name": "test_str", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_str", "code": "# Code from lines 148 to 154"}
{"name": "test_tuple", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tuple", "code": "# Code from lines 157 to 163"}
{"name": "test_dict", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dict", "code": "# Code from lines 166 to 172"}
{"name": "test_continue", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_continue", "code": "# Code from lines 175 to 184"}
{"name": "test_lambda_with_splat", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lambda_with_splat", "code": "# Code from lines 187 to 199"}
{"name": "test_logical_not", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_logical_not", "code": "# Code from lines 202 to 209"}
{"name": "test_class", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_class", "code": "# Code from lines 227 to 229"}
{"name": "test_class_with_properties", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_class_with_properties", "code": "# Code from lines 232 to 234"}
{"name": "test_set_to_object", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_set_to_object", "code": "# Code from lines 237 to 245"}
{"name": "test_setitem", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_setitem", "code": "# Code from lines 248 to 256"}
{"name": "test_delete", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_delete", "code": "# Code from lines 259 to 269"}
{"name": "test_scope_with_while", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scope_with_while", "code": "# Code from lines 272 to 289"}
{"name": "test_list_comp", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_comp", "code": "# Code from lines 292 to 298"}
{"name": "test_nested_list_comp", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_nested_list_comp", "code": "# Code from lines 302 to 319"}
{"name": "test_splat", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_splat", "code": "# Code from lines 322 to 331"}
{"name": "test_varargs", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_varargs", "code": "# Code from lines 334 to 339"}
{"name": "test_missing_vararg", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_missing_vararg", "code": "# Code from lines 342 to 347"}
{"name": "test_len_rewrite", "file": "ibis/backends/bigquery/tests/unit/udf/test_core.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_len_rewrite", "code": "# Code from lines 350 to 355"}
{"name": "test_multiple_calls_redefinition", "file": "ibis/backends/bigquery/tests/unit/udf/test_usage.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_calls_redefinition", "code": "# Code from lines 13 to 28"}
{"name": "test_udf_determinism", "file": "ibis/backends/bigquery/tests/unit/udf/test_usage.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "determinism"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_udf_determinism", "code": "# Code from lines 32 to 45"}
{"name": "test_udf_int64", "file": "ibis/backends/bigquery/tests/unit/udf/test_usage.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "argument_type"}, {"name": "return_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_udf_int64", "code": "# Code from lines 66 to 74"}
{"name": "test_find_BinOp", "file": "ibis/backends/bigquery/tests/unit/udf/test_find.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_find_BinOp", "code": "# Code from lines 44 to 48"}
{"name": "test_find_dup_names", "file": "ibis/backends/bigquery/tests/unit/udf/test_find.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_find_dup_names", "code": "# Code from lines 51 to 55"}
{"name": "test_find_Name", "file": "ibis/backends/bigquery/tests/unit/udf/test_find.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_find_Name", "code": "# Code from lines 58 to 62"}
{"name": "test_find_Tuple", "file": "ibis/backends/bigquery/tests/unit/udf/test_find.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_find_Tuple", "code": "# Code from lines 65 to 69"}
{"name": "test_find_Compare", "file": "ibis/backends/bigquery/tests/unit/udf/test_find.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_find_Compare", "code": "# Code from lines 72 to 76"}
{"name": "test_find_ListComp", "file": "ibis/backends/bigquery/tests/unit/udf/test_find.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_find_ListComp", "code": "# Code from lines 79 to 83"}
{"name": "test_bqutil_fn_from_hex", "file": "ibis/backends/bigquery/tests/unit/udf/test_builtin.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bqutil_fn_from_hex", "code": "# Code from lines 21 to 24"}
{"name": "test_farm_fingerprint", "file": "ibis/backends/bigquery/tests/unit/udf/test_builtin.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_farm_fingerprint", "code": "# Code from lines 27 to 30"}
{"name": "test_drop_table_compile", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_table_compile", "code": "# Code from lines 20 to 27"}
{"name": "test_select_basics", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_select_basics", "code": "# Code from lines 30 to 42"}
{"name": "test_cache_table_pool_name", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cache_table_pool_name", "code": "# Code from lines 45 to 52"}
{"name": "test_add_partition", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "part_schema"}, {"name": "table_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_partition", "code": "# Code from lines 65 to 69"}
{"name": "test_add_partition_string_key", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_partition_string_key", "code": "# Code from lines 72 to 77"}
{"name": "test_drop_partition", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "part_schema"}, {"name": "table_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_partition", "code": "# Code from lines 80 to 84"}
{"name": "test_add_partition_with_props", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "part_schema"}, {"name": "table_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_partition_with_props", "code": "# Code from lines 87 to 94"}
{"name": "test_alter_partition_properties", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "part_schema"}, {"name": "table_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_alter_partition_properties", "code": "# Code from lines 97 to 114"}
{"name": "test_alter_table_properties", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "part_schema"}, {"name": "table_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_alter_table_properties", "code": "# Code from lines 117 to 134"}
{"name": "test_create_external_table_as", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "mockcon"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_external_table_as", "code": "# Code from lines 142 to 154"}
{"name": "test_create_table_with_location_compile", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_with_location_compile", "code": "# Code from lines 157 to 169"}
{"name": "test_create_table_like_parquet", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_like_parquet", "code": "# Code from lines 172 to 184"}
{"name": "test_create_table_parquet_like_other", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_parquet_like_other", "code": "# Code from lines 187 to 201"}
{"name": "test_create_table_parquet_with_schema", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_parquet_with_schema", "code": "# Code from lines 204 to 219"}
{"name": "test_create_table_delimited", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_delimited", "code": "# Code from lines 222 to 245"}
{"name": "test_create_external_table_avro", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_external_table_avro", "code": "# Code from lines 248 to 273"}
{"name": "test_create_table_parquet", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_parquet", "code": "# Code from lines 276 to 279"}
{"name": "test_no_overwrite", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_no_overwrite", "code": "# Code from lines 282 to 285"}
{"name": "test_avro_other_formats", "file": "ibis/backends/impala/tests/test_ddl_compilation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_avro_other_formats", "code": "# Code from lines 288 to 294"}
{"name": "test_data_db", "file": "ibis/backends/impala/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "env"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.fixture"], "is_test": true, "test_name": "test_data_db", "code": "# Code from lines 183 to 184"}
{"name": "test_data_dir", "file": "ibis/backends/impala/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "env"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.fixture"], "is_test": true, "test_name": "test_data_dir", "code": "# Code from lines 188 to 189"}
{"name": "test_files", "file": "ibis/backends/impala/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 34 to 35"}
{"name": "test_data_db", "file": "ibis/backends/impala/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_data_db", "code": "# Code from lines 164 to 165"}
{"name": "test_data_dir", "file": "ibis/backends/impala/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_data_dir", "code": "# Code from lines 168 to 169"}
{"name": "test_varargs_functions", "file": "ibis/backends/impala/tests/test_coalesce_greater_least.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_varargs_functions", "code": "# Code from lines 33 to 37"}
{"name": "test_parquet_file_with_name", "file": "ibis/backends/impala/tests/test_parquet_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_dir"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_parquet_file_with_name", "code": "# Code from lines 15 to 29"}
{"name": "test_query_parquet_file_with_schema", "file": "ibis/backends/impala/tests/test_parquet_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_query_parquet_file_with_schema", "code": "# Code from lines 32 to 50"}
{"name": "test_query_parquet_file_like_table", "file": "ibis/backends/impala/tests/test_parquet_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_query_parquet_file_like_table", "code": "# Code from lines 53 to 66"}
{"name": "test_query_parquet_infer_schema", "file": "ibis/backends/impala/tests/test_parquet_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_query_parquet_infer_schema", "code": "# Code from lines 69 to 84"}
{"name": "test_create_table_persist_fails_if_called_twice", "file": "ibis/backends/impala/tests/test_parquet_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}, {"name": "test_data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_persist_fails_if_called_twice", "code": "# Code from lines 87 to 92"}
{"name": "test_isnull_1_0", "file": "ibis/backends/impala/tests/test_case_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isnull_1_0", "code": "# Code from lines 31 to 39"}
{"name": "test_simple_case", "file": "ibis/backends/impala/tests/test_case_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_case"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_case", "code": "# Code from lines 42 to 45"}
{"name": "test_search_case", "file": "ibis/backends/impala/tests/test_case_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "search_case"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_search_case", "code": "# Code from lines 48 to 51"}
{"name": "test_ifelse_use_if", "file": "ibis/backends/impala/tests/test_case_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse_use_if", "code": "# Code from lines 54 to 59"}
{"name": "test_nullif_ifnull", "file": "ibis/backends/impala/tests/test_case_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tpch_lineitem"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_nullif_ifnull", "code": "# Code from lines 70 to 73"}
{"name": "test_decimal_fill_null_cast_arg", "file": "ibis/backends/impala/tests/test_case_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tpch_lineitem"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_decimal_fill_null_cast_arg", "code": "# Code from lines 89 to 92"}
{"name": "test_identical_to", "file": "ibis/backends/impala/tests/test_case_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "mockcon"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_identical_to", "code": "# Code from lines 95 to 99"}
{"name": "test_identical_to_special_case", "file": "ibis/backends/impala/tests/test_case_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_identical_to_special_case", "code": "# Code from lines 102 to 105"}
{"name": "test_embedded_identifier_quoting", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_embedded_identifier_quoting", "code": "# Code from lines 17 to 21"}
{"name": "test_decimal_metadata", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_decimal_metadata", "code": "# Code from lines 24 to 29"}
{"name": "test_builtins", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtins", "code": "# Code from lines 34 to 140"}
{"name": "test_int_builtins", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_int_builtins", "code": "# Code from lines 170 to 172"}
{"name": "test_column_types", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes_df"}, {"name": "col"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_column_types", "code": "# Code from lines 187 to 188"}
{"name": "test_timestamp_builtins", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_builtins", "code": "# Code from lines 227 to 229"}
{"name": "test_decimal_builtins", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_decimal_builtins", "code": "# Code from lines 246 to 248"}
{"name": "test_decimal_builtins_2", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_decimal_builtins_2", "code": "# Code from lines 270 to 275"}
{"name": "test_string_functions", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_functions", "code": "# Code from lines 310 to 312"}
{"name": "test_parse_url", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_url", "code": "# Code from lines 325 to 327"}
{"name": "test_div_floordiv", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_div_floordiv", "code": "# Code from lines 339 to 341"}
{"name": "test_filter_predicates", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_predicates", "code": "# Code from lines 344 to 357"}
{"name": "test_histogram_value_counts", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_histogram_value_counts", "code": "# Code from lines 360 to 363"}
{"name": "test_casted_expr_impala_bug", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_casted_expr_impala_bug", "code": "# Code from lines 366 to 370"}
{"name": "test_decimal_timestamp_builtins", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_decimal_timestamp_builtins", "code": "# Code from lines 373 to 424"}
{"name": "test_timestamp_scalar_in_filter", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_scalar_in_filter", "code": "# Code from lines 427 to 438"}
{"name": "test_aggregations", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregations", "code": "# Code from lines 441 to 480"}
{"name": "test_analytic_functions", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_analytic_functions", "code": "# Code from lines 483 to 517"}
{"name": "test_anti_join_self_reference_works", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_anti_join_self_reference_works", "code": "# Code from lines 520 to 524"}
{"name": "test_tpch_self_join_failure", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tpch_self_join_failure", "code": "# Code from lines 527 to 561"}
{"name": "test_tpch_correlated_subquery_failure", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tpch_correlated_subquery_failure", "code": "# Code from lines 564 to 594"}
{"name": "test_non_equijoin", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_non_equijoin", "code": "# Code from lines 597 to 604"}
{"name": "test_char_varchar_types", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_char_varchar_types", "code": "# Code from lines 607 to 616"}
{"name": "test_unions_with_ctes", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unions_with_ctes", "code": "# Code from lines 619 to 631"}
{"name": "test_identical_to", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "left"}, {"name": "right"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_identical_to", "code": "# Code from lines 645 to 648"}
{"name": "test_not", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_not", "code": "# Code from lines 651 to 656"}
{"name": "test_where_with_timestamp", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_with_timestamp", "code": "# Code from lines 659 to 665"}
{"name": "test_filter_with_analytic", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_with_analytic", "code": "# Code from lines 668 to 677"}
{"name": "test_named_from_filter_group_by", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_named_from_filter_group_by", "code": "# Code from lines 680 to 688"}
{"name": "test_nunique_where", "file": "ibis/backends/impala/tests/test_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nunique_where", "code": "# Code from lines 691 to 694"}
{"name": "test_literals", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literals", "code": "# Code from lines 30 to 33"}
{"name": "test_column_ref_table_aliases", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_ref_table_aliases", "code": "# Code from lines 36 to 43"}
{"name": "test_named_expressions", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_named_expressions", "code": "# Code from lines 55 to 58"}
{"name": "test_binary_infix_operators", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_binary_infix_operators", "code": "# Code from lines 80 to 83"}
{"name": "test_binary_infix_parenthesization", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_binary_infix_parenthesization", "code": "# Code from lines 95 to 98"}
{"name": "test_between", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_between", "code": "# Code from lines 101 to 104"}
{"name": "test_isnull_notnull", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isnull_notnull", "code": "# Code from lines 116 to 119"}
{"name": "test_casts", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "column"}, {"name": "to_type"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_casts", "code": "# Code from lines 134 to 137"}
{"name": "test_misc_conditionals", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_misc_conditionals", "code": "# Code from lines 140 to 143"}
{"name": "test_decimal_casts", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_decimal_casts", "code": "# Code from lines 154 to 157"}
{"name": "test_negate", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "colname"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_negate", "code": "# Code from lines 161 to 163"}
{"name": "test_timestamp_extract_field", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "field"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_extract_field", "code": "# Code from lines 170 to 173"}
{"name": "test_sql_extract", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_extract", "code": "# Code from lines 176 to 185"}
{"name": "test_timestamp_now", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_now", "code": "# Code from lines 188 to 191"}
{"name": "test_timestamp_deltas", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "unit"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_deltas", "code": "# Code from lines 198 to 209"}
{"name": "test_timestamp_literals", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_literals", "code": "# Code from lines 221 to 224"}
{"name": "test_timestamp_day_of_week", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "method_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_day_of_week", "code": "# Code from lines 228 to 232"}
{"name": "test_timestamp_from_integer", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_from_integer", "code": "# Code from lines 244 to 247"}
{"name": "test_correlated_predicate_subquery", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_correlated_predicate_subquery", "code": "# Code from lines 250 to 259"}
{"name": "test_any_all", "file": "ibis/backends/impala/tests/test_value_exprs.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_any_all", "code": "# Code from lines 271 to 274"}
{"name": "test_create_exists_view", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_view"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_exists_view", "code": "# Code from lines 28 to 35"}
{"name": "test_drop_non_empty_database", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_non_empty_database", "code": "# Code from lines 38 to 43"}
{"name": "test_create_database_with_location", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_database_with_location", "code": "# Code from lines 54 to 57"}
{"name": "test_create_table_with_location_execute", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_dir"}, {"name": "alltypes"}, {"name": "test_data_db"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_with_location_execute", "code": "# Code from lines 60 to 70"}
{"name": "test_drop_table_not_exist", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_table_not_exist", "code": "# Code from lines 73 to 77"}
{"name": "test_truncate_table", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_truncate_table", "code": "# Code from lines 80 to 93"}
{"name": "test_ctas_from_table_expr", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ctas_from_table_expr", "code": "# Code from lines 96 to 98"}
{"name": "test_create_empty_table", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_empty_table", "code": "# Code from lines 101 to 116"}
{"name": "test_insert_table", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table"}, {"name": "test_data_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_table", "code": "# Code from lines 119 to 132"}
{"name": "test_insert_validate_types", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "test_data_db"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_validate_types", "code": "# Code from lines 135 to 159"}
{"name": "test_drop_view", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "created_view"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_view", "code": "# Code from lines 170 to 172"}
{"name": "test_query_avro", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_dir"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_query_avro", "code": "# Code from lines 175 to 199"}
{"name": "test_create_table_reserved_identifier", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table_id"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_reserved_identifier", "code": "# Code from lines 209 to 214"}
{"name": "test_query_delimited_file_directory", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_dir"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_query_delimited_file_directory", "code": "# Code from lines 217 to 233"}
{"name": "test_varchar_char_support", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "temp_char_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_varchar_char_support", "code": "# Code from lines 254 to 256"}
{"name": "test_access_kudu_table", "file": "ibis/backends/impala/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "kudu_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_access_kudu_table", "code": "# Code from lines 259 to 261"}
{"name": "test_table_params", "file": "ibis/backends/impala/tests/test_metadata.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "parsed_part"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_params", "code": "# Code from lines 108 to 114"}
{"name": "test_partitions", "file": "ibis/backends/impala/tests/test_metadata.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "parsed_unpart"}, {"name": "parsed_part"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_partitions", "code": "# Code from lines 117 to 119"}
{"name": "test_schema", "file": "ibis/backends/impala/tests/test_metadata.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "parsed_part"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema", "code": "# Code from lines 122 to 127"}
{"name": "test_storage_info", "file": "ibis/backends/impala/tests/test_metadata.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "parsed_part"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_storage_info", "code": "# Code from lines 130 to 133"}
{"name": "test_storage_params", "file": "ibis/backends/impala/tests/test_metadata.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "parsed_part"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_storage_params", "code": "# Code from lines 136 to 140"}
{"name": "test_join_no_predicates_for_impala", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "join_type"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_join_no_predicates_for_impala", "code": "# Code from lines 27 to 33"}
{"name": "test_limit_cte_extract", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "limit_cte_extract"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_cte_extract", "code": "# Code from lines 36 to 39"}
{"name": "test_nested_join_base", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested_join_base", "code": "# Code from lines 42 to 48"}
{"name": "test_nested_joins_single_cte", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested_joins_single_cte", "code": "# Code from lines 51 to 68"}
{"name": "test_nested_join_multiple_ctes", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested_join_multiple_ctes", "code": "# Code from lines 71 to 90"}
{"name": "test_logically_negate_complex_boolean_expr", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_logically_negate_complex_boolean_expr", "code": "# Code from lines 93 to 104"}
{"name": "test_join_with_nested_or_condition", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_nested_or_condition", "code": "# Code from lines 107 to 114"}
{"name": "test_join_with_nested_xor_condition", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_nested_xor_condition", "code": "# Code from lines 117 to 124"}
{"name": "test_is_parens", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "method"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_is_parens", "code": "# Code from lines 128 to 134"}
{"name": "test_is_parens_identical_to", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_is_parens_identical_to", "code": "# Code from lines 137 to 142"}
{"name": "test_join_aliasing", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_aliasing", "code": "# Code from lines 145 to 165"}
{"name": "test_multiple_filters", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_filters", "code": "# Code from lines 168 to 173"}
{"name": "test_multiple_filters2", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_filters2", "code": "# Code from lines 176 to 182"}
{"name": "test_join_key_name", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tpch"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_key_name", "code": "# Code from lines 258 to 278"}
{"name": "test_join_key_name2", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tpch"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_key_name2", "code": "# Code from lines 281 to 293"}
{"name": "test_group_by_with_window_preserves_range", "file": "ibis/backends/impala/tests/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by_with_window_preserves_range", "code": "# Code from lines 296 to 302"}
{"name": "test_sql_generation", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_generation", "code": "# Code from lines 99 to 104"}
{"name": "test_sql_generation_from_infoclass", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_generation_from_infoclass", "code": "# Code from lines 107 to 119"}
{"name": "test_udf_primitive_output_types", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ty"}, {"name": "value"}, {"name": "column"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_udf_primitive_output_types", "code": "# Code from lines 141 to 150"}
{"name": "test_uda_primitive_output_types", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ty"}, {"name": "value"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_uda_primitive_output_types", "code": "# Code from lines 171 to 181"}
{"name": "test_decimal", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dec"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_decimal", "code": "# Code from lines 184 to 189"}
{"name": "test_udf_valid_typecasting", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ty"}, {"name": "valid_cast_indexer"}, {"name": "all_cols"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_udf_valid_typecasting", "code": "# Code from lines 204 to 208"}
{"name": "test_udf_invalid_typecasting", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ty"}, {"name": "valid_cast_indexer"}, {"name": "all_cols"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_udf_invalid_typecasting", "code": "# Code from lines 228 to 233"}
{"name": "test_mult_args", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "i32"}, {"name": "d"}, {"name": "s"}, {"name": "b"}, {"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mult_args", "code": "# Code from lines 236 to 247"}
{"name": "test_identity_primitive_types", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "test_data_db"}, {"name": "udf_ll"}, {"name": "typ"}, {"name": "lit_val"}, {"name": "col_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.xfail"], "is_test": true, "test_name": "test_identity_primitive_types", "code": "# Code from lines 307 to 311"}
{"name": "test_decimal_fail", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_db"}, {"name": "udf_ll"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_decimal_fail", "code": "# Code from lines 317 to 339"}
{"name": "test_mixed_inputs", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "test_data_db"}, {"name": "udf_ll"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_mixed_inputs", "code": "# Code from lines 345 to 361"}
{"name": "test_implicit_typecasting", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "test_data_db"}, {"name": "udf_ll"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_implicit_typecasting", "code": "# Code from lines 367 to 370"}
{"name": "test_mult_type_args", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "test_data_db"}, {"name": "udf_ll"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_mult_type_args", "code": "# Code from lines 401 to 433"}
{"name": "test_udf_varargs", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "udf_ll"}, {"name": "test_data_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_udf_varargs", "code": "# Code from lines 439 to 451"}
{"name": "test_drop_udf_not_exists", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_udf_not_exists", "code": "# Code from lines 454 to 457"}
{"name": "test_drop_uda_not_exists", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_uda_not_exists", "code": "# Code from lines 460 to 463"}
{"name": "test_ll_uda_not_supported", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "uda_ll"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ll_uda_not_supported", "code": "# Code from lines 475 to 478"}
{"name": "test_count_uda", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "test_data_db"}, {"name": "wrapped_count_uda"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_count_uda", "code": "# Code from lines 505 to 509"}
{"name": "test_list_udas", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "wrapped_count_uda"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_udas", "code": "# Code from lines 512 to 523"}
{"name": "test_create_udf", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "inputs"}, {"name": "output"}, {"name": "name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_udf", "code": "# Code from lines 541 to 551"}
{"name": "test_create_udf_type_conversions", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "output"}, {"name": "name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_udf_type_conversions", "code": "# Code from lines 554 to 565"}
{"name": "test_delete_udf_simple", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name"}, {"name": "inputs"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_delete_udf_simple", "code": "# Code from lines 568 to 571"}
{"name": "test_delete_udf_if_exists", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name"}, {"name": "inputs"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_delete_udf_if_exists", "code": "# Code from lines 574 to 577"}
{"name": "test_delete_udf_aggregate", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name"}, {"name": "inputs"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_delete_udf_aggregate", "code": "# Code from lines 580 to 583"}
{"name": "test_delete_udf_db", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name"}, {"name": "inputs"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_delete_udf_db", "code": "# Code from lines 586 to 589"}
{"name": "test_create_uda", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name"}, {"name": "inputs"}, {"name": "output"}, {"name": "series"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_uda", "code": "# Code from lines 593 to 606"}
{"name": "test_list_udf", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_udf", "code": "# Code from lines 609 to 612"}
{"name": "test_list_udfs_like", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_udfs_like", "code": "# Code from lines 615 to 618"}
{"name": "test_list_udafs", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_udafs", "code": "# Code from lines 621 to 624"}
{"name": "test_list_udafs_like", "file": "ibis/backends/impala/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_udafs_like", "code": "# Code from lines 627 to 630"}
{"name": "test_field_in_literals", "file": "ibis/backends/impala/tests/test_in_not_in.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "method_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_field_in_literals", "code": "# Code from lines 15 to 20"}
{"name": "test_literal_in_fields", "file": "ibis/backends/impala/tests/test_in_not_in.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "method_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_literal_in_fields", "code": "# Code from lines 24 to 29"}
{"name": "test_isin_notin_in_select", "file": "ibis/backends/impala/tests/test_in_not_in.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "method_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isin_notin_in_select", "code": "# Code from lines 33 to 38"}
{"name": "test_analytic_exprs", "file": "ibis/backends/impala/tests/test_analytic_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_analytic_exprs", "code": "# Code from lines 30 to 33"}
{"name": "test_create_table_with_partition_column", "file": "ibis/backends/impala/tests/test_partition.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_with_partition_column", "code": "# Code from lines 40 to 67"}
{"name": "test_create_partitioned_separate_schema", "file": "ibis/backends/impala/tests/test_partition.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_partitioned_separate_schema", "code": "# Code from lines 70 to 89"}
{"name": "test_unpartitioned_table_get_schema", "file": "ibis/backends/impala/tests/test_partition.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unpartitioned_table_get_schema", "code": "# Code from lines 92 to 95"}
{"name": "test_insert_select_partitioned_table", "file": "ibis/backends/impala/tests/test_partition.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "df"}, {"name": "temp_table"}, {"name": "unpart_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_select_partitioned_table", "code": "# Code from lines 98 to 124"}
{"name": "test_create_partitioned_table_from_expr", "file": "ibis/backends/impala/tests/test_partition.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "tmp_parted"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_partitioned_table_from_expr", "code": "# Code from lines 134 to 142"}
{"name": "test_add_drop_partition_no_location", "file": "ibis/backends/impala/tests/test_partition.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_drop_partition_no_location", "code": "# Code from lines 145 to 162"}
{"name": "test_add_drop_partition_owned_by_impala", "file": "ibis/backends/impala/tests/test_partition.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_drop_partition_owned_by_impala", "code": "# Code from lines 165 to 185"}
{"name": "test_add_drop_partition_hive_bug", "file": "ibis/backends/impala/tests/test_partition.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_drop_partition_hive_bug", "code": "# Code from lines 188 to 207"}
{"name": "test_aggregate_in_projection", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_in_projection", "code": "# Code from lines 23 to 26"}
{"name": "test_add_default_order_by", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_add_default_order_by", "code": "# Code from lines 29 to 39"}
{"name": "test_window_frame_specs", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "window"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_frame_specs", "code": "# Code from lines 58 to 63"}
{"name": "test_cumulative_functions", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cumulative_functions", "code": "# Code from lines 67 to 81"}
{"name": "test_nested_analytic_function", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested_analytic_function", "code": "# Code from lines 84 to 90"}
{"name": "test_rank_functions", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rank_functions", "code": "# Code from lines 93 to 97"}
{"name": "test_multiple_windows", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_windows", "code": "# Code from lines 100 to 108"}
{"name": "test_order_by_desc", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by_desc", "code": "# Code from lines 111 to 120"}
{"name": "test_row_number_does_not_require_order_by", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_row_number_does_not_require_order_by", "code": "# Code from lines 123 to 130"}
{"name": "test_row_number_properly_composes_with_arithmetic", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_row_number_properly_composes_with_arithmetic", "code": "# Code from lines 133 to 137"}
{"name": "test_propagate_nested_windows", "file": "ibis/backends/impala/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_propagate_nested_windows", "code": "# Code from lines 140 to 154"}
{"name": "test_run_sql", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_run_sql", "code": "# Code from lines 18 to 27"}
{"name": "test_sql_with_limit", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_with_limit", "code": "# Code from lines 30 to 33"}
{"name": "test_raw_sql", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_raw_sql", "code": "# Code from lines 36 to 40"}
{"name": "test_explain", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_explain", "code": "# Code from lines 43 to 47"}
{"name": "test_get_schema", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_schema", "code": "# Code from lines 50 to 53"}
{"name": "test_result_as_dataframe", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_result_as_dataframe", "code": "# Code from lines 56 to 64"}
{"name": "test_adapt_scalar_array_results", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_adapt_scalar_array_results", "code": "# Code from lines 67 to 84"}
{"name": "test_interactive_repr_call_failure", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interactive_repr_call_failure", "code": "# Code from lines 87 to 104"}
{"name": "test_array_default_limit", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_default_limit", "code": "# Code from lines 107 to 111"}
{"name": "test_limit_overrides_expr", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_overrides_expr", "code": "# Code from lines 114 to 118"}
{"name": "test_limit_equals_none_no_limit", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_equals_none_no_limit", "code": "# Code from lines 121 to 127"}
{"name": "test_verbose_log_queries", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_db"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_verbose_log_queries", "code": "# Code from lines 130 to 142"}
{"name": "test_sql_query_limits_big", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_db"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_query_limits_big", "code": "# Code from lines 145 to 158"}
{"name": "test_sql_query_limits_small", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_db"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_query_limits_small", "code": "# Code from lines 161 to 173"}
{"name": "test_sql_query_limits_none", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_db"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_query_limits_none", "code": "# Code from lines 176 to 185"}
{"name": "test_set_compression_codec", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_set_compression_codec", "code": "# Code from lines 188 to 198"}
{"name": "test_attr_name_conflict", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "temp_parquet_table"}, {"name": "temp_parquet_table2"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_attr_name_conflict", "code": "# Code from lines 201 to 207"}
{"name": "test_day_of_week", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_day_of_week", "code": "# Code from lines 210 to 218"}
{"name": "test_datetime_to_int_cast", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_datetime_to_int_cast", "code": "# Code from lines 221 to 227"}
{"name": "test_set_option_with_dot", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_set_option_with_dot", "code": "# Code from lines 230 to 233"}
{"name": "test_list_databases", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_databases", "code": "# Code from lines 236 to 237"}
{"name": "test_list_tables", "file": "ibis/backends/impala/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "test_data_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 240 to 242"}
{"name": "test_numeric_unary_builtins", "file": "ibis/backends/impala/tests/test_unary_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "method"}, {"name": "cname"}, {"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_numeric_unary_builtins", "code": "# Code from lines 36 to 41"}
{"name": "test_numeric", "file": "ibis/backends/impala/tests/test_unary_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr_fn"}, {"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_numeric", "code": "# Code from lines 57 to 60"}
{"name": "test_hash", "file": "ibis/backends/impala/tests/test_unary_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_hash", "code": "# Code from lines 63 to 70"}
{"name": "test_reduction_where", "file": "ibis/backends/impala/tests/test_unary_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_reduction_where", "code": "# Code from lines 96 to 99"}
{"name": "test_reduction_invalid_where", "file": "ibis/backends/impala/tests/test_unary_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "method_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_reduction_invalid_where", "code": "# Code from lines 103 to 108"}
{"name": "test_invalidate_metadata", "file": "ibis/backends/impala/tests/test_patched.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "spy"}, {"name": "test_data_db"}, {"name": "qname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalidate_metadata", "code": "# Code from lines 19 to 24"}
{"name": "test_refresh", "file": "ibis/backends/impala/tests/test_patched.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "spy"}, {"name": "qname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_refresh", "code": "# Code from lines 27 to 30"}
{"name": "test_describe_formatted", "file": "ibis/backends/impala/tests/test_patched.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "spy"}, {"name": "qname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_describe_formatted", "code": "# Code from lines 33 to 36"}
{"name": "test_show_files", "file": "ibis/backends/impala/tests/test_patched.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "spy"}, {"name": "qname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_show_files", "code": "# Code from lines 39 to 42"}
{"name": "test_column_stats", "file": "ibis/backends/impala/tests/test_patched.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "spy"}, {"name": "qname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_stats", "code": "# Code from lines 45 to 48"}
{"name": "test_table_stats", "file": "ibis/backends/impala/tests/test_patched.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "spy"}, {"name": "qname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_stats", "code": "# Code from lines 51 to 54"}
{"name": "test_compute_stats", "file": "ibis/backends/impala/tests/test_patched.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "spy"}, {"name": "qname"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compute_stats", "code": "# Code from lines 57 to 62"}
{"name": "test_bucket_to_case", "file": "ibis/backends/impala/tests/test_bucket_histogram.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_bucket_to_case", "code": "# Code from lines 73 to 76"}
{"name": "test_bucket_assign_labels", "file": "ibis/backends/impala/tests/test_bucket_histogram.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bucket_assign_labels", "code": "# Code from lines 79 to 89"}
{"name": "test_string_builtins", "file": "ibis/backends/impala/tests/test_string_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_builtins", "code": "# Code from lines 48 to 50"}
{"name": "test_find", "file": "ibis/backends/impala/tests/test_string_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "table"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_find", "code": "# Code from lines 53 to 55"}
{"name": "test_string_join", "file": "ibis/backends/impala/tests/test_string_builtins.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_join", "code": "# Code from lines 58 to 60"}
{"name": "test_union", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "union"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_union", "code": "# Code from lines 14 to 16"}
{"name": "test_union_project_column", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "union_all"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_union_project_column", "code": "# Code from lines 19 to 23"}
{"name": "test_table_intersect", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "intersect"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_intersect", "code": "# Code from lines 26 to 28"}
{"name": "test_table_difference", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "difference"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_difference", "code": "# Code from lines 31 to 33"}
{"name": "test_intersect_project_column", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "intersect"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_intersect_project_column", "code": "# Code from lines 36 to 40"}
{"name": "test_difference_project_column", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "difference"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_difference_project_column", "code": "# Code from lines 43 to 47"}
{"name": "test_table_distinct", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_distinct", "code": "# Code from lines 50 to 55"}
{"name": "test_column_distinct", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_distinct", "code": "# Code from lines 58 to 62"}
{"name": "test_count_distinct", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_count_distinct", "code": "# Code from lines 65 to 71"}
{"name": "test_multiple_count_distinct", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_count_distinct", "code": "# Code from lines 74 to 86"}
{"name": "test_pushdown_with_or", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_pushdown_with_or", "code": "# Code from lines 89 to 101"}
{"name": "test_having_size", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_having_size", "code": "# Code from lines 104 to 115"}
{"name": "test_having_from_filter", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_having_from_filter", "code": "# Code from lines 118 to 126"}
{"name": "test_simple_agg_filter", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_agg_filter", "code": "# Code from lines 129 to 133"}
{"name": "test_agg_and_non_agg_filter", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_agg_and_non_agg_filter", "code": "# Code from lines 136 to 141"}
{"name": "test_agg_filter", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_agg_filter", "code": "# Code from lines 144 to 150"}
{"name": "test_agg_filter_with_alias", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_agg_filter_with_alias", "code": "# Code from lines 153 to 159"}
{"name": "test_table_drop_with_filter", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_drop_with_filter", "code": "# Code from lines 162 to 175"}
{"name": "test_table_drop_consistency", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_drop_consistency", "code": "# Code from lines 178 to 186"}
{"name": "test_subquery_where_location", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_where_location", "code": "# Code from lines 189 to 210"}
{"name": "test_column_expr_retains_name", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_expr_retains_name", "code": "# Code from lines 213 to 217"}
{"name": "test_column_expr_default_name", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_expr_default_name", "code": "# Code from lines 220 to 224"}
{"name": "test_union_order_by", "file": "ibis/backends/tests/sql/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_union_order_by", "code": "# Code from lines 227 to 231"}
{"name": "test_comparisons", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "opname"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_comparisons", "code": "# Code from lines 86 to 89"}
{"name": "test_binop_parens", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}, {"name": "opname"}, {"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_binop_parens", "code": "# Code from lines 129 to 143"}
{"name": "test_binop_with_alias_still_parenthesized", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_binop_with_alias_still_parenthesized", "code": "# Code from lines 146 to 149"}
{"name": "test_boolean_conjunction", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_boolean_conjunction", "code": "# Code from lines 159 to 161"}
{"name": "test_between", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_between", "code": "# Code from lines 164 to 166"}
{"name": "test_isnull_notnull", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "method_name"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isnull_notnull", "code": "# Code from lines 170 to 172"}
{"name": "test_negate", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_negate", "code": "# Code from lines 175 to 177"}
{"name": "test_coalesce", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_coalesce", "code": "# Code from lines 180 to 185"}
{"name": "test_named_expr", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_named_expr", "code": "# Code from lines 188 to 190"}
{"name": "test_joins", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "region"}, {"name": "nation"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_joins", "code": "# Code from lines 205 to 207"}
{"name": "test_join_just_materialized", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "nation"}, {"name": "region"}, {"name": "customer"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_just_materialized", "code": "# Code from lines 210 to 218"}
{"name": "test_full_outer_join", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": "Testing full outer join separately due to previous issue with outer join\nresulting in left outer join (issue #1773)", "signature": {"args": [{"name": "region"}, {"name": "nation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_full_outer_join", "code": "# Code from lines 221 to 228"}
{"name": "test_simple_case", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_case"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_case", "code": "# Code from lines 231 to 233"}
{"name": "test_searched_case", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "search_case"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_searched_case", "code": "# Code from lines 236 to 238"}
{"name": "test_where_simple_comparisons", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_simple_comparisons", "code": "# Code from lines 241 to 245"}
{"name": "test_aggregate", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_aggregate", "code": "# Code from lines 262 to 264"}
{"name": "test_order_by", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "key"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_order_by", "code": "# Code from lines 272 to 274"}
{"name": "test_limit", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_limit", "code": "# Code from lines 280 to 282"}
{"name": "test_limit_filter", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_filter", "code": "# Code from lines 285 to 287"}
{"name": "test_limit_subquery", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_subquery", "code": "# Code from lines 290 to 292"}
{"name": "test_cte_factor_distinct_but_equal", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cte_factor_distinct_but_equal", "code": "# Code from lines 295 to 304"}
{"name": "test_self_reference_join", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_reference_join", "code": "# Code from lines 307 to 312"}
{"name": "test_self_reference_in_not_exists", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_reference_in_not_exists", "code": "# Code from lines 315 to 325"}
{"name": "test_where_uncorrelated_subquery", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "foo"}, {"name": "bar"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_uncorrelated_subquery", "code": "# Code from lines 328 to 331"}
{"name": "test_where_correlated_subquery", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "foo"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_correlated_subquery", "code": "# Code from lines 334 to 341"}
{"name": "test_subquery_aliased", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_aliased", "code": "# Code from lines 344 to 351"}
{"name": "test_lower_projection_sort_key", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_lower_projection_sort_key", "code": "# Code from lines 354 to 363"}
{"name": "test_exists", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "foo_t"}, {"name": "bar_t"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_exists", "code": "# Code from lines 366 to 377"}
{"name": "test_not_exists", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "not_exists"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_not_exists", "code": "# Code from lines 380 to 381"}
{"name": "test_distinct", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_distinct", "code": "# Code from lines 404 to 406"}
{"name": "test_sort_aggregation_translation_failure", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sort_aggregation_translation_failure", "code": "# Code from lines 409 to 418"}
{"name": "test_where_correlated_subquery_with_join", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_correlated_subquery_with_join", "code": "# Code from lines 421 to 443"}
{"name": "test_mutate_filter_join_no_cross_join", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_mutate_filter_join_no_cross_join", "code": "# Code from lines 446 to 454"}
{"name": "test_filter_group_by_agg_with_same_name", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_group_by_agg_with_same_name", "code": "# Code from lines 457 to 465"}
{"name": "test_no_cross_join", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "person"}, {"name": "visited"}, {"name": "survey"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_no_cross_join", "code": "# Code from lines 488 to 492"}
{"name": "test_gh_1045", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "test1"}, {"name": "test2"}, {"name": "test3"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_gh_1045", "code": "# Code from lines 516 to 530"}
{"name": "test_multi_join", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multi_join", "code": "# Code from lines 533 to 543"}
{"name": "test_no_cart_join", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_no_cart_join", "code": "# Code from lines 546 to 571"}
{"name": "test_order_by_expr", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by_expr", "code": "# Code from lines 574 to 577"}
{"name": "test_double_order_by", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_double_order_by", "code": "# Code from lines 580 to 584"}
{"name": "test_double_order_by_same_column", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_double_order_by_same_column", "code": "# Code from lines 587 to 591"}
{"name": "test_double_order_by_deferred", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_double_order_by_deferred", "code": "# Code from lines 594 to 597"}
{"name": "test_double_order_by_different_expression", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_double_order_by_different_expression", "code": "# Code from lines 600 to 603"}
{"name": "test_no_cartesian_join", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_no_cartesian_join", "code": "# Code from lines 606 to 651"}
{"name": "test_ctes_in_order", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ctes_in_order", "code": "# Code from lines 654 to 665"}
{"name": "test_struct_field_simplified", "file": "ibis/backends/tests/sql/test_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}, {"name": "accessor"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_struct_field_simplified", "code": "# Code from lines 675 to 679"}
{"name": "test_select_sql", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "star1"}, {"name": "expr_fn"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_select_sql", "code": "# Code from lines 47 to 50"}
{"name": "test_nameless_table", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nameless_table", "code": "# Code from lines 53 to 56"}
{"name": "test_simple_joins", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_joins", "code": "# Code from lines 59 to 77"}
{"name": "test_multiple_joins", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "star3"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_joins", "code": "# Code from lines 80 to 94"}
{"name": "test_join_between_joins", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_between_joins", "code": "# Code from lines 97 to 119"}
{"name": "test_join_just_materialized", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "nation"}, {"name": "region"}, {"name": "customer"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_just_materialized", "code": "# Code from lines 122 to 132"}
{"name": "test_semi_join", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_semi_join", "code": "# Code from lines 135 to 138"}
{"name": "test_anti_join", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_anti_join", "code": "# Code from lines 141 to 144"}
{"name": "test_where_no_pushdown_possible", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_no_pushdown_possible", "code": "# Code from lines 147 to 157"}
{"name": "test_where_with_between", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_with_between", "code": "# Code from lines 160 to 165"}
{"name": "test_where_analyze_scalar_op", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_analyze_scalar_op", "code": "# Code from lines 168 to 180"}
{"name": "test_bug_duplicated_where", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "airlines"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bug_duplicated_where", "code": "# Code from lines 183 to 195"}
{"name": "test_aggregate_having", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_having", "code": "# Code from lines 198 to 209"}
{"name": "test_aggregate_count_joined", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_count_joined", "code": "# Code from lines 212 to 222"}
{"name": "test_fuse_projections", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_fuse_projections", "code": "# Code from lines 225 to 246"}
{"name": "test_projection_filter_fuse", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "projection_fuse_filter"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection_filter_fuse", "code": "# Code from lines 249 to 257"}
{"name": "test_fuse_distinct", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}, {"name": "transform"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_fuse_distinct", "code": "# Code from lines 315 to 318"}
{"name": "test_bug_project_multiple_times", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer"}, {"name": "nation"}, {"name": "region"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bug_project_multiple_times", "code": "# Code from lines 321 to 335"}
{"name": "test_aggregate_projection_subquery", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_projection_subquery", "code": "# Code from lines 338 to 353"}
{"name": "test_double_nested_subquery_no_aliases", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_double_nested_subquery_no_aliases", "code": "# Code from lines 356 to 371"}
{"name": "test_aggregate_projection_alias_bug", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregate_projection_alias_bug", "code": "# Code from lines 374 to 383"}
{"name": "test_subquery_in_union", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_in_union", "code": "# Code from lines 386 to 397"}
{"name": "test_limit_with_self_join", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_with_self_join", "code": "# Code from lines 400 to 406"}
{"name": "test_topk_predicate_pushdown_bug", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "nation"}, {"name": "customer"}, {"name": "region"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_topk_predicate_pushdown_bug", "code": "# Code from lines 409 to 420"}
{"name": "test_topk_analysis_bug", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_topk_analysis_bug", "code": "# Code from lines 423 to 437"}
{"name": "test_topk_to_aggregate", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_topk_to_aggregate", "code": "# Code from lines 440 to 447"}
{"name": "test_bool_bool", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_bool_bool", "code": "# Code from lines 450 to 459"}
{"name": "test_case_in_projection", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_case_in_projection", "code": "# Code from lines 462 to 469"}
{"name": "test_identifier_quoting", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_identifier_quoting", "code": "# Code from lines 472 to 476"}
{"name": "test_scalar_subquery_different_table", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "foo"}, {"name": "bar"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_scalar_subquery_different_table", "code": "# Code from lines 479 to 481"}
{"name": "test_exists_subquery", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t1"}, {"name": "t2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_exists_subquery", "code": "# Code from lines 484 to 491"}
{"name": "test_filter_inside_exists", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_inside_exists", "code": "# Code from lines 494 to 517"}
{"name": "test_order_by_on_limit_yield_subquery", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_order_by_on_limit_yield_subquery", "code": "# Code from lines 520 to 533"}
{"name": "test_join_with_limited_table", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_limited_table", "code": "# Code from lines 536 to 539"}
{"name": "test_multiple_limits", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "functional_alltypes"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_limits", "code": "# Code from lines 542 to 547"}
{"name": "test_join_filtered_tables_no_pushdown", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_filtered_tables_no_pushdown", "code": "# Code from lines 550 to 579"}
{"name": "test_loj_subquery_filter_handling", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_loj_subquery_filter_handling", "code": "# Code from lines 582 to 594"}
{"name": "test_startswith", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "startswith"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_startswith", "code": "# Code from lines 597 to 600"}
{"name": "test_endswith", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "endswith"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_endswith", "code": "# Code from lines 603 to 606"}
{"name": "test_filter_predicates", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_predicates", "code": "# Code from lines 609 to 623"}
{"name": "test_join_projection_subquery_bug", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "nation"}, {"name": "region"}, {"name": "customer"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_projection_subquery_bug", "code": "# Code from lines 626 to 638"}
{"name": "test_where_with_join", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "star2"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_with_join", "code": "# Code from lines 641 to 659"}
{"name": "test_subquery_used_for_self_join", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_used_for_self_join", "code": "# Code from lines 662 to 681"}
{"name": "test_subquery_factor_correlated_subquery", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_factor_correlated_subquery", "code": "# Code from lines 684 to 711"}
{"name": "test_self_join_subquery_distinct_equal", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_join_subquery_distinct_equal", "code": "# Code from lines 714 to 729"}
{"name": "test_tpch_self_join_failure", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tpch_self_join_failure", "code": "# Code from lines 732 to 765"}
{"name": "test_subquery_in_filter_predicate", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_in_filter_predicate", "code": "# Code from lines 769 to 781"}
{"name": "test_filter_subquery_derived_reduction", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "star1"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_subquery_derived_reduction", "code": "# Code from lines 784 to 795"}
{"name": "test_topk_operation", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_topk_operation", "code": "# Code from lines 798 to 817"}
{"name": "test_limit_cte_extract", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_cte_extract", "code": "# Code from lines 828 to 833"}
{"name": "test_filter_self_join_analysis_bug", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_self_join_analysis_bug", "code": "# Code from lines 836 to 856"}
{"name": "test_sort_then_group_by_propagates_keys", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sort_then_group_by_propagates_keys", "code": "# Code from lines 859 to 868"}
{"name": "test_incorrect_predicate_pushdown", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_incorrect_predicate_pushdown", "code": "# Code from lines 871 to 874"}
{"name": "test_incorrect_predicate_pushdown_with_literal", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_incorrect_predicate_pushdown_with_literal", "code": "# Code from lines 877 to 880"}
{"name": "test_complex_union", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_union", "code": "# Code from lines 883 to 898"}
{"name": "test_chain_limit_doesnt_collapse", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_chain_limit_doesnt_collapse", "code": "# Code from lines 901 to 913"}
{"name": "test_join_with_conditional_aggregate", "file": "ibis/backends/tests/sql/test_select_sql.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_conditional_aggregate", "code": "# Code from lines 916 to 921"}
{"name": "test_01", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_returns"}, {"name": "date_dim"}, {"name": "store"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_01", "code": "# Code from lines 23 to 47"}
{"name": "test_02", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "catalog_sales"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_02", "code": "# Code from lines 51 to 94"}
{"name": "test_03", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "date_dim"}, {"name": "store_sales"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_03", "code": "# Code from lines 98 to 107"}
{"name": "test_04", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer"}, {"name": "store_sales"}, {"name": "catalog_sales"}, {"name": "web_sales"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_04", "code": "# Code from lines 111 to 208"}
{"name": "test_05", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store_returns"}, {"name": "store"}, {"name": "catalog_sales"}, {"name": "catalog_returns"}, {"name": "catalog_page"}, {"name": "web_sales"}, {"name": "web_returns"}, {"name": "web_site"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.xfail"], "is_test": true, "test_name": "test_05", "code": "# Code from lines 213 to 225"}
{"name": "test_06", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer_address"}, {"name": "customer"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_06", "code": "# Code from lines 234 to 264"}
{"name": "test_07", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "customer_demographics"}, {"name": "date_dim"}, {"name": "item"}, {"name": "promotion"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_07", "code": "# Code from lines 268 to 290"}
{"name": "test_08", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "customer_address"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_08", "code": "# Code from lines 294 to 722"}
{"name": "test_09", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "reason"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_09", "code": "# Code from lines 726 to 749"}
{"name": "test_10", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer"}, {"name": "customer_address"}, {"name": "customer_demographics"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "web_sales"}, {"name": "catalog_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notimpl", "pytest.mark.notyet"], "is_test": true, "test_name": "test_10", "code": "# Code from lines 761 to 843"}
{"name": "test_11", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer"}, {"name": "store_sales"}, {"name": "web_sales"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_11", "code": "# Code from lines 847 to 916"}
{"name": "test_12", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "item"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_12", "code": "# Code from lines 920 to 940"}
{"name": "test_13", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store"}, {"name": "customer_demographics"}, {"name": "household_demographics"}, {"name": "customer_address"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_13", "code": "# Code from lines 944 to 989"}
{"name": "test_14", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "catalog_sales"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.xfail"], "is_test": true, "test_name": "test_14", "code": "# Code from lines 994 to 995"}
{"name": "test_15", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "customer"}, {"name": "customer_address"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_15", "code": "# Code from lines 999 to 1027"}
{"name": "test_16", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "call_center"}, {"name": "catalog_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_16", "code": "# Code from lines 1040 to 1068"}
{"name": "test_17", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store_returns"}, {"name": "catalog_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_17", "code": "# Code from lines 1072 to 1128"}
{"name": "test_18", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "customer_demographics"}, {"name": "customer"}, {"name": "customer_address"}, {"name": "date_dim"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.xfail"], "is_test": true, "test_name": "test_18", "code": "# Code from lines 1133 to 1136"}
{"name": "test_19", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "date_dim"}, {"name": "store_sales"}, {"name": "item"}, {"name": "customer"}, {"name": "customer_address"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_19", "code": "# Code from lines 1140 to 1159"}
{"name": "test_20", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "item"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_20", "code": "# Code from lines 1163 to 1190"}
{"name": "test_21", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "inventory"}, {"name": "warehouse"}, {"name": "item"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_21", "code": "# Code from lines 1194 to 1219"}
{"name": "test_22", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "inventory"}, {"name": "date_dim"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.xfail"], "is_test": true, "test_name": "test_22", "code": "# Code from lines 1224 to 1225"}
{"name": "test_23", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "item"}, {"name": "customer"}, {"name": "catalog_sales"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_23", "code": "# Code from lines 1229 to 1293"}
{"name": "test_24", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store_returns"}, {"name": "store"}, {"name": "item"}, {"name": "customer"}, {"name": "customer_address"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_24", "code": "# Code from lines 1297 to 1334"}
{"name": "test_25", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store_returns"}, {"name": "catalog_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_25", "code": "# Code from lines 1338 to 1373"}
{"name": "test_26", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "customer_demographics"}, {"name": "date_dim"}, {"name": "item"}, {"name": "promotion"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_26", "code": "# Code from lines 1377 to 1404"}
{"name": "test_27", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "customer_demographics"}, {"name": "date_dim"}, {"name": "store"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_27", "code": "# Code from lines 1408 to 1448"}
{"name": "test_28", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_28", "code": "# Code from lines 1457 to 1481"}
{"name": "test_29", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store_returns"}, {"name": "catalog_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_29", "code": "# Code from lines 1485 to 1527"}
{"name": "test_30", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_returns"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_30", "code": "# Code from lines 1536 to 1577"}
{"name": "test_31", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_31", "code": "# Code from lines 1581 to 1650"}
{"name": "test_32", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "item"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_32", "code": "# Code from lines 1664 to 1691"}
{"name": "test_33", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "item"}, {"name": "catalog_sales"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_33", "code": "# Code from lines 1695 to 1731"}
{"name": "test_34", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "household_demographics"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_34", "code": "# Code from lines 1735 to 1780"}
{"name": "test_35", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer"}, {"name": "customer_address"}, {"name": "customer_demographics"}, {"name": "store_sales"}, {"name": "web_sales"}, {"name": "catalog_sales"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_35", "code": "# Code from lines 1795 to 1858"}
{"name": "test_36", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "item"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_36", "code": "# Code from lines 1870 to 1941"}
{"name": "test_37", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "inventory"}, {"name": "date_dim"}, {"name": "catalog_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_37", "code": "# Code from lines 1945 to 1960"}
{"name": "test_38", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "catalog_sales"}, {"name": "web_sales"}, {"name": "date_dim"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_38", "code": "# Code from lines 1964 to 1986"}
{"name": "test_39", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "inventory"}, {"name": "item"}, {"name": "warehouse"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_39", "code": "# Code from lines 1993 to 2030"}
{"name": "test_40", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "catalog_returns"}, {"name": "warehouse"}, {"name": "item"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_40", "code": "# Code from lines 2034 to 2064"}
{"name": "test_41", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_41", "code": "# Code from lines 2073 to 2144"}
{"name": "test_42", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "date_dim"}, {"name": "store_sales"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_42", "code": "# Code from lines 2148 to 2157"}
{"name": "test_43", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "date_dim"}, {"name": "store_sales"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_43", "code": "# Code from lines 2161 to 2177"}
{"name": "test_44", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_44", "code": "# Code from lines 2181 to 2217"}
{"name": "test_45", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "customer"}, {"name": "customer_address"}, {"name": "date_dim"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_45", "code": "# Code from lines 2221 to 2253"}
{"name": "test_46", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "household_demographics"}, {"name": "customer_address"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_46", "code": "# Code from lines 2257 to 2303"}
{"name": "test_47", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_47", "code": "# Code from lines 2312 to 2390"}
{"name": "test_48", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store"}, {"name": "customer_demographics"}, {"name": "customer_address"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_48", "code": "# Code from lines 2394 to 2433"}
{"name": "test_49", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "web_returns"}, {"name": "date_dim"}, {"name": "catalog_sales"}, {"name": "catalog_returns"}, {"name": "store_sales"}, {"name": "store_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_49", "code": "# Code from lines 2438 to 2550"}
{"name": "test_50", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store_returns"}, {"name": "store"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_50", "code": "# Code from lines 2554 to 2612"}
{"name": "test_51", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "date_dim"}, {"name": "store_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_51", "code": "# Code from lines 2616 to 2661"}
{"name": "test_52", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "date_dim"}, {"name": "store_sales"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_52", "code": "# Code from lines 2665 to 2675"}
{"name": "test_53", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_53", "code": "# Code from lines 2679 to 2740"}
{"name": "test_54", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "web_sales"}, {"name": "item"}, {"name": "date_dim"}, {"name": "customer"}, {"name": "store_sales"}, {"name": "customer_address"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_54", "code": "# Code from lines 2744 to 2811"}
{"name": "test_55", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "date_dim"}, {"name": "store_sales"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_55", "code": "# Code from lines 2815 to 2825"}
{"name": "test_56", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "item"}, {"name": "catalog_sales"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_56", "code": "# Code from lines 2829 to 2890"}
{"name": "test_57", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "catalog_sales"}, {"name": "date_dim"}, {"name": "call_center"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_57", "code": "# Code from lines 2899 to 2954"}
{"name": "test_58", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "item"}, {"name": "date_dim"}, {"name": "catalog_sales"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_58", "code": "# Code from lines 2958 to 3024"}
{"name": "test_59", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_59", "code": "# Code from lines 3028 to 3068"}
{"name": "test_60", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "item"}, {"name": "catalog_sales"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_60", "code": "# Code from lines 3072 to 3110"}
{"name": "test_61", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store"}, {"name": "promotion"}, {"name": "date_dim"}, {"name": "customer"}, {"name": "customer_address"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_61", "code": "# Code from lines 3114 to 3160"}
{"name": "test_62", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "warehouse"}, {"name": "ship_mode"}, {"name": "web_site"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_62", "code": "# Code from lines 3164 to 3202"}
{"name": "test_63", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_63", "code": "# Code from lines 3206 to 3252"}
{"name": "test_64", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "catalog_returns"}, {"name": "store_sales"}, {"name": "store_returns"}, {"name": "date_dim"}, {"name": "store"}, {"name": "customer"}, {"name": "customer_demographics"}, {"name": "promotion"}, {"name": "household_demographics"}, {"name": "customer_address"}, {"name": "income_band"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_64", "code": "# Code from lines 3256 to 3415"}
{"name": "test_65", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store"}, {"name": "item"}, {"name": "store_sales"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_65", "code": "# Code from lines 3420 to 3447"}
{"name": "test_66", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "catalog_sales"}, {"name": "warehouse"}, {"name": "date_dim"}, {"name": "time_dim"}, {"name": "ship_mode"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet", "pytest.mark.notyet"], "is_test": true, "test_name": "test_66", "code": "# Code from lines 3462 to 3553"}
{"name": "test_67", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail", "tpc_test"], "is_test": true, "test_name": "test_67", "code": "# Code from lines 3558 to 3559"}
{"name": "test_68", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "household_demographics"}, {"name": "customer_address"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_68", "code": "# Code from lines 3563 to 3609"}
{"name": "test_69", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer"}, {"name": "customer_address"}, {"name": "customer_demographics"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "web_sales"}, {"name": "catalog_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_69", "code": "# Code from lines 3621 to 3682"}
{"name": "test_70", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notimpl", "tpc_test"], "is_test": true, "test_name": "test_70", "code": "# Code from lines 3694 to 3695"}
{"name": "test_71", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "web_sales"}, {"name": "date_dim"}, {"name": "catalog_sales"}, {"name": "store_sales"}, {"name": "time_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_71", "code": "# Code from lines 3699 to 3746"}
{"name": "test_72", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "inventory"}, {"name": "warehouse"}, {"name": "item"}, {"name": "customer_demographics"}, {"name": "household_demographics"}, {"name": "date_dim"}, {"name": "promotion"}, {"name": "catalog_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_72", "code": "# Code from lines 3755 to 3820"}
{"name": "test_73", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "household_demographics"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_73", "code": "# Code from lines 3824 to 3883"}
{"name": "test_74", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_74", "code": "# Code from lines 3887 to 3973"}
{"name": "test_75", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "item"}, {"name": "date_dim"}, {"name": "catalog_returns"}, {"name": "store_sales"}, {"name": "store_returns"}, {"name": "web_sales"}, {"name": "web_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_75", "code": "# Code from lines 3977 to 4108"}
{"name": "test_76", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "item"}, {"name": "date_dim"}, {"name": "web_sales"}, {"name": "catalog_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_76", "code": "# Code from lines 4113 to 4181"}
{"name": "test_77", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "store_returns"}, {"name": "catalog_sales"}, {"name": "catalog_returns"}, {"name": "web_sales"}, {"name": "web_page"}, {"name": "web_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail", "tpc_test"], "is_test": true, "test_name": "test_77", "code": "# Code from lines 4186 to 4313"}
{"name": "test_78", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "web_returns"}, {"name": "date_dim"}, {"name": "catalog_sales"}, {"name": "catalog_returns"}, {"name": "store_sales"}, {"name": "store_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_78", "code": "# Code from lines 4317 to 4459"}
{"name": "test_79", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}, {"name": "household_demographics"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_79", "code": "# Code from lines 4463 to 4496"}
{"name": "test_80", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store_returns"}, {"name": "store"}, {"name": "catalog_sales"}, {"name": "catalog_returns"}, {"name": "catalog_page"}, {"name": "web_sales"}, {"name": "web_returns"}, {"name": "web_site"}, {"name": "date_dim"}, {"name": "item"}, {"name": "promotion"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.xfail"], "is_test": true, "test_name": "test_80", "code": "# Code from lines 4501 to 4515"}
{"name": "test_81", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_returns"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "customer"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_81", "code": "# Code from lines 4524 to 4563"}
{"name": "test_82", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "inventory"}, {"name": "date_dim"}, {"name": "store_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_82", "code": "# Code from lines 4567 to 4582"}
{"name": "test_83", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_returns"}, {"name": "item"}, {"name": "date_dim"}, {"name": "catalog_returns"}, {"name": "web_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_83", "code": "# Code from lines 4586 to 4634"}
{"name": "test_84", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "customer"}, {"name": "customer_address"}, {"name": "customer_demographics"}, {"name": "household_demographics"}, {"name": "income_band"}, {"name": "store_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_84", "code": "# Code from lines 4638 to 4670"}
{"name": "test_85", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "web_returns"}, {"name": "web_page"}, {"name": "customer_demographics"}, {"name": "customer_address"}, {"name": "date_dim"}, {"name": "reason"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_85", "code": "# Code from lines 4674 to 4745"}
{"name": "test_86", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "date_dim"}, {"name": "item"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet", "pytest.mark.notimpl"], "is_test": true, "test_name": "test_86", "code": "# Code from lines 4759 to 4760"}
{"name": "test_87", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "customer"}, {"name": "catalog_sales"}, {"name": "web_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_87", "code": "# Code from lines 4764 to 4790"}
{"name": "test_88", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "household_demographics"}, {"name": "time_dim"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_88", "code": "# Code from lines 4794 to 4825"}
{"name": "test_89", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "item"}, {"name": "store_sales"}, {"name": "date_dim"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_89", "code": "# Code from lines 4829 to 4872"}
{"name": "test_90", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "household_demographics"}, {"name": "time_dim"}, {"name": "web_page"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_90", "code": "# Code from lines 4876 to 4902"}
{"name": "test_91", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "call_center"}, {"name": "catalog_returns"}, {"name": "date_dim"}, {"name": "customer"}, {"name": "customer_address"}, {"name": "customer_demographics"}, {"name": "household_demographics"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_91", "code": "# Code from lines 4906 to 4943"}
{"name": "test_92", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "item"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_92", "code": "# Code from lines 4952 to 4974"}
{"name": "test_93", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "store_returns"}, {"name": "reason"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_93", "code": "# Code from lines 4978 to 5008"}
{"name": "test_94", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "web_site"}, {"name": "web_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_94", "code": "# Code from lines 5022 to 5052"}
{"name": "test_95", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "web_sales"}, {"name": "date_dim"}, {"name": "customer_address"}, {"name": "web_site"}, {"name": "web_returns"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_95", "code": "# Code from lines 5056 to 5086"}
{"name": "test_96", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "household_demographics"}, {"name": "time_dim"}, {"name": "store"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_96", "code": "# Code from lines 5090 to 5107"}
{"name": "test_97", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "date_dim"}, {"name": "catalog_sales"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_97", "code": "# Code from lines 5111 to 5140"}
{"name": "test_98", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "store_sales"}, {"name": "item"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_98", "code": "# Code from lines 5144 to 5168"}
{"name": "test_99", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "catalog_sales"}, {"name": "warehouse"}, {"name": "ship_mode"}, {"name": "call_center"}, {"name": "date_dim"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_99", "code": "# Code from lines 5172 to 5223"}
{"name": "test_all_queries_are_written", "file": "ibis/backends/tests/tpc/ds/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_all_queries_are_written", "code": "# Code from lines 5226 to 5237"}
{"name": "test_01", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Pricing Summary Report Query (Q1).\n\nThe Pricing Summary Report Query provides a summary pricing report for all\nlineitems shipped as of a given date.  The  date is  within  60  - 120 days\nof  the  greatest  ship  date  contained  in  the database.  The query\nlists totals  for extended  price,  discounted  extended price, discounted\nextended price  plus  tax,  average  quantity, average extended price,  and\naverage discount.  These  aggregates  are grouped  by RETURNFLAG  and\nLINESTATUS, and  listed  in ascending  order of RETURNFLAG and  LINESTATUS.\nA  count  of the  number  of  lineitems in each  group  is included.", "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_01", "code": "# Code from lines 11 to 40"}
{"name": "test_02", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Minimum Cost Supplier Query (Q2)", "signature": {"args": [{"name": "part"}, {"name": "supplier"}, {"name": "partsupp"}, {"name": "nation"}, {"name": "region"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_02", "code": "# Code from lines 49 to 95"}
{"name": "test_03", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Shipping Priority Query (Q3)", "signature": {"args": [{"name": "customer"}, {"name": "orders"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_03", "code": "# Code from lines 99 to 116"}
{"name": "test_04", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Order Priority Checking Query (Q4)", "signature": {"args": [{"name": "orders"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_04", "code": "# Code from lines 125 to 141"}
{"name": "test_05", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Local Supplier Volume Query (Q5)", "signature": {"args": [{"name": "customer"}, {"name": "lineitem"}, {"name": "orders"}, {"name": "supplier"}, {"name": "nation"}, {"name": "region"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_05", "code": "# Code from lines 145 to 172"}
{"name": "test_06", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Forecasting Revenue Change Query (Q6)", "signature": {"args": [{"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_06", "code": "# Code from lines 176 to 194"}
{"name": "test_07", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Volume Shipping Query (Q7)", "signature": {"args": [{"name": "supplier"}, {"name": "lineitem"}, {"name": "orders"}, {"name": "customer"}, {"name": "nation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_07", "code": "# Code from lines 198 to 235"}
{"name": "test_08", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "National Market Share Query (Q8)", "signature": {"args": [{"name": "part"}, {"name": "supplier"}, {"name": "region"}, {"name": "lineitem"}, {"name": "orders"}, {"name": "customer"}, {"name": "nation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_08", "code": "# Code from lines 239 to 279"}
{"name": "test_09", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Product Type Profit Measure Query (Q9)", "signature": {"args": [{"name": "part"}, {"name": "supplier"}, {"name": "lineitem"}, {"name": "partsupp"}, {"name": "orders"}, {"name": "nation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_09", "code": "# Code from lines 283 to 312"}
{"name": "test_10", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Returned Item Reporting Query (Q10)", "signature": {"args": [{"name": "customer"}, {"name": "orders"}, {"name": "lineitem"}, {"name": "nation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_10", "code": "# Code from lines 316 to 348"}
{"name": "test_11", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "partsupp"}, {"name": "supplier"}, {"name": "nation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_11", "code": "# Code from lines 352 to 372"}
{"name": "test_12", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "'Shipping Modes and Order Priority Query (Q12)\n\nThis query determines whether selecting less expensive modes of shipping is\nnegatively affecting the critical-prior- ity orders by causing more parts\nto be received by customers after the committed date.", "signature": {"args": [{"name": "orders"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_12", "code": "# Code from lines 376 to 414"}
{"name": "test_13", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Customer Distribution Query (Q13)\n\nThis query seeks relationships between customers and the size of their\norders.", "signature": {"args": [{"name": "customer"}, {"name": "orders"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_13", "code": "# Code from lines 419 to 441"}
{"name": "test_14", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Promotion Effect Query (Q14)\n\nThis query monitors the market response to a promotion such as TV\nadvertisements or a special campaign.", "signature": {"args": [{"name": "part"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_14", "code": "# Code from lines 445 to 461"}
{"name": "test_15", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Top Supplier Query (Q15)", "signature": {"args": [{"name": "lineitem"}, {"name": "supplier"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test", "pytest.mark.notyet"], "is_test": true, "test_name": "test_15", "code": "# Code from lines 471 to 492"}
{"name": "test_16", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Parts/Supplier Relationship Query (Q16)\n\nThis query finds out how many suppliers can supply parts with given\nattributes. It might be used, for example, to determine whether there is\na sufficient number of suppliers for heavily ordered parts.", "signature": {"args": [{"name": "partsupp"}, {"name": "part"}, {"name": "supplier"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_16", "code": "# Code from lines 496 to 523"}
{"name": "test_17", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Small-Quantity-Order Revenue Query (Q17)\n\nThis query determines how much average yearly revenue would be lost if\norders were no longer filled for small quantities of certain parts. This\nmay reduce overhead expenses by concentrating sales on larger shipments.", "signature": {"args": [{"name": "lineitem"}, {"name": "part"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_17", "code": "# Code from lines 532 to 554"}
{"name": "test_18", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Large Volume Customer Query (Q18)\n\nThe Large Volume Customer Query ranks customers based on their having\nplaced a large quantity order. Large quantity orders are defined as those\norders whose total quantity is above a certain level.", "signature": {"args": [{"name": "customer"}, {"name": "orders"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_18", "code": "# Code from lines 558 to 581"}
{"name": "test_19", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Discounted Revenue Query (Q19)\n\nThe Discounted Revenue Query reports the gross discounted revenue\nattributed to the sale of selected parts handled in a particular manner.\nThis query is an example of code such as might be produced programmatically\nby a data mining tool.", "signature": {"args": [{"name": "lineitem"}, {"name": "part"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["tpc_test"], "is_test": true, "test_name": "test_19", "code": "# Code from lines 585 to 634"}
{"name": "test_20", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Potential Part Promotion Query (Q20)\n\nThe Potential Part Promotion Query identifies suppliers in a particular\nnation having selected parts that may be candidates for a promotional\noffer.", "signature": {"args": [{"name": "supplier"}, {"name": "nation"}, {"name": "partsupp"}, {"name": "part"}, {"name": "lineitem"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_20", "code": "# Code from lines 643 to 678"}
{"name": "test_21", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Suppliers Who Kept Orders Waiting Query (Q21)\n\nThis query identifies certain suppliers who were not able to ship required\nparts in a timely manner.", "signature": {"args": [{"name": "supplier"}, {"name": "lineitem"}, {"name": "orders"}, {"name": "nation"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_21", "code": "# Code from lines 687 to 729"}
{"name": "test_22", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": "Global Sales Opportunity Query (Q22)\n\nThe Global Sales Opportunity Query identifies geographies where there are\ncustomers who may be likely to make a purchase.", "signature": {"args": [{"name": "customer"}, {"name": "orders"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet", "tpc_test"], "is_test": true, "test_name": "test_22", "code": "# Code from lines 738 to 768"}
{"name": "test_all_queries_are_written", "file": "ibis/backends/tests/tpc/h/test_queries.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_all_queries_are_written", "code": "# Code from lines 771 to 782"}
{"name": "test_sigs_compatible", "file": "ibis/backends/tests/signature/tests/test_compatible.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "a"}, {"name": "b"}, {"name": "check_annotations"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_sigs_compatible", "code": "# Code from lines 87 to 89"}
{"name": "test_sigs_incompatible", "file": "ibis/backends/tests/signature/tests/test_compatible.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "a"}, {"name": "b"}, {"name": "check_annotations"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_sigs_incompatible", "code": "# Code from lines 127 to 129"}
{"name": "test_none_config", "file": "ibis/backends/datafusion/tests/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_none_config", "code": "# Code from lines 20 to 23"}
{"name": "test_str_config", "file": "ibis/backends/datafusion/tests/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name_to_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_str_config", "code": "# Code from lines 26 to 30"}
{"name": "test_path_config", "file": "ibis/backends/datafusion/tests/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name_to_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_path_config", "code": "# Code from lines 33 to 37"}
{"name": "test_context_config", "file": "ibis/backends/datafusion/tests/test_connect.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "name_to_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_context_config", "code": "# Code from lines 40 to 45"}
{"name": "test_as_nullable", "file": "ibis/backends/datafusion/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_as_nullable", "code": "# Code from lines 21 to 24"}
{"name": "test_where_multiple_conditions", "file": "ibis/backends/datafusion/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "alltypes_df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_multiple_conditions", "code": "# Code from lines 10 to 26"}
{"name": "test_string_length", "file": "ibis/backends/datafusion/tests/test_string.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_length", "code": "# Code from lines 6 to 8"}
{"name": "test_time_extract_literal", "file": "ibis/backends/datafusion/tests/test_temporal.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_time_extract_literal", "code": "# Code from lines 36 to 38"}
{"name": "test_udf", "file": "ibis/backends/datafusion/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf", "code": "# Code from lines 30 to 38"}
{"name": "test_multiple_argument_udf", "file": "ibis/backends/datafusion/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_multiple_argument_udf", "code": "# Code from lines 41 to 48"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/datafusion/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 51 to 58"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/datafusion/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 61 to 68"}
{"name": "test_builtin_agg_udf_filtered", "file": "ibis/backends/datafusion/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf_filtered", "code": "# Code from lines 71 to 76"}
{"name": "test_nested", "file": "ibis/backends/databricks/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested", "code": "# Code from lines 17 to 78"}
{"name": "test_streaming_table_is_accessible", "file": "ibis/backends/databricks/tests/test_streaming.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_streaming_table_is_accessible", "code": "# Code from lines 4 to 11"}
{"name": "test_create_table_from_json", "file": "ibis/backends/databricks/tests/test_json.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_from_json", "code": "# Code from lines 16 to 20"}
{"name": "test_files", "file": "ibis/backends/oracle/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 50 to 54"}
{"name": "test_failed_column_inference", "file": "ibis/backends/oracle/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_failed_column_inference", "code": "# Code from lines 12 to 16"}
{"name": "test_blob_raw", "file": "ibis/backends/oracle/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_blob_raw", "code": "# Code from lines 19 to 29"}
{"name": "test_string", "file": "ibis/backends/oracle/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "typ"}, {"name": "length"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string", "code": "# Code from lines 36 to 39"}
{"name": "test_number", "file": "ibis/backends/oracle/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_number", "code": "# Code from lines 42 to 54"}
{"name": "test_ibis_is_not_defeated_by_statement_cache", "file": "ibis/backends/oracle/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ibis_is_not_defeated_by_statement_cache", "code": "# Code from lines 19 to 21"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/oracle/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 24 to 38"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/oracle/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 41 to 66"}
{"name": "test_list_tables", "file": "ibis/backends/oracle/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 69 to 72"}
{"name": "test_from_url", "file": "ibis/backends/oracle/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_from_url", "code": "# Code from lines 75 to 79"}
{"name": "test_invalid_port", "file": "ibis/backends/oracle/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_port", "code": "# Code from lines 82 to 89"}
{"name": "test_basic", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_basic", "code": "# Code from lines 27 to 30"}
{"name": "test_projection", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_projection", "code": "# Code from lines 33 to 48"}
{"name": "test_aggregation_col", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregation_col", "code": "# Code from lines 51 to 53"}
{"name": "test_aggregation", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_aggregation", "code": "# Code from lines 56 to 59"}
{"name": "test_group_by", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_group_by", "code": "# Code from lines 62 to 65"}
{"name": "test_window", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_window", "code": "# Code from lines 68 to 73"}
{"name": "test_greatest", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_greatest", "code": "# Code from lines 76 to 79"}
{"name": "test_filter", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}, {"name": "filter_fn"}, {"name": "expected_fn"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_filter", "code": "# Code from lines 101 to 104"}
{"name": "test_cast", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_cast", "code": "# Code from lines 107 to 110"}
{"name": "test_alias_after_select", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_alias_after_select", "code": "# Code from lines 113 to 118"}
{"name": "test_interval_columns_invalid", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_columns_invalid", "code": "# Code from lines 121 to 139"}
{"name": "test_string_literal_backslash_escaping", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_literal_backslash_escaping", "code": "# Code from lines 142 to 145"}
{"name": "test_connect_without_explicit_session", "file": "ibis/backends/pyspark/tests/test_basic.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_connect_without_explicit_session", "code": "# Code from lines 148 to 151"}
{"name": "test_data_db", "file": "ibis/backends/pyspark/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.fixture"], "is_test": true, "test_name": "test_data_db", "code": "# Code from lines 431 to 436"}
{"name": "test_files", "file": "ibis/backends/pyspark/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 248 to 249"}
{"name": "test_create_exists_view", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_view"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_exists_view", "code": "# Code from lines 25 to 33"}
{"name": "test_drop_non_empty_database", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_non_empty_database", "code": "# Code from lines 36 to 42"}
{"name": "test_create_database_with_location", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_database_with_location", "code": "# Code from lines 62 to 65"}
{"name": "test_drop_table_not_exist", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_table_not_exist", "code": "# Code from lines 68 to 72"}
{"name": "test_truncate_table", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_truncate_table", "code": "# Code from lines 75 to 83"}
{"name": "test_ctas_from_table_expr", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ctas_from_table_expr", "code": "# Code from lines 86 to 90"}
{"name": "test_create_empty_table", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_empty_table", "code": "# Code from lines 93 to 108"}
{"name": "test_insert_table", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table"}, {"name": "test_data_db"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_table", "code": "# Code from lines 111 to 124"}
{"name": "test_insert_validate_types", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "test_data_db"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_validate_types", "code": "# Code from lines 127 to 147"}
{"name": "test_compute_stats", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_compute_stats", "code": "# Code from lines 150 to 153"}
{"name": "test_drop_view", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "created_view"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_drop_view", "code": "# Code from lines 164 to 166"}
{"name": "test_create_table_reserved_identifier", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "keyword_t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_reserved_identifier", "code": "# Code from lines 175 to 180"}
{"name": "test_create_database_exists", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail_version"], "is_test": true, "test_name": "test_create_database_exists", "code": "# Code from lines 188 to 196"}
{"name": "test_drop_database_exists", "file": "ibis/backends/pyspark/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail_version"], "is_test": true, "test_name": "test_drop_database_exists", "code": "# Code from lines 204 to 212"}
{"name": "test_streaming_import_not_implemented", "file": "ibis/backends/pyspark/tests/test_import_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_streaming"}, {"name": "method"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_streaming_import_not_implemented", "code": "# Code from lines 24 to 26"}
{"name": "test_read_csv_dir", "file": "ibis/backends/pyspark/tests/test_import_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_streaming"}, {"name": "awards_players_schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_csv_dir", "code": "# Code from lines 29 to 40"}
{"name": "test_read_parquet_dir", "file": "ibis/backends/pyspark/tests/test_import_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_streaming"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_read_parquet_dir", "code": "# Code from lines 43 to 51"}
{"name": "test_to_csv_dir", "file": "ibis/backends/pyspark/tests/test_import_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_streaming"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_csv_dir", "code": "# Code from lines 54 to 64"}
{"name": "test_to_parquet_dir", "file": "ibis/backends/pyspark/tests/test_import_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_streaming"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_to_parquet_dir", "code": "# Code from lines 67 to 77"}
{"name": "test_to_parquet_read_parquet", "file": "ibis/backends/pyspark/tests/test_import_export.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.skipif"], "is_test": true, "test_name": "test_to_parquet_read_parquet", "code": "# Code from lines 83 to 114"}
{"name": "test_aggregation_float_nulls", "file": "ibis/backends/pyspark/tests/test_aggregation.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "result_fn"}, {"name": "expected_fn"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_aggregation_float_nulls", "code": "# Code from lines 18 to 28"}
{"name": "test_isnull", "file": "ibis/backends/pyspark/tests/test_null.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isnull", "code": "# Code from lines 9 to 16"}
{"name": "test_notnull", "file": "ibis/backends/pyspark/tests/test_null.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_notnull", "code": "# Code from lines 19 to 26"}
{"name": "test_builtin_udf", "file": "ibis/backends/pyspark/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_udf", "code": "# Code from lines 37 to 40"}
{"name": "test_python_udf", "file": "ibis/backends/pyspark/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_python_udf", "code": "# Code from lines 43 to 46"}
{"name": "test_pyarrow_udf", "file": "ibis/backends/pyspark/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail", "pytest.mark.xfail"], "is_test": true, "test_name": "test_pyarrow_udf", "code": "# Code from lines 54 to 57"}
{"name": "test_illegal_udf_type", "file": "ibis/backends/pyspark/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_illegal_udf_type", "code": "# Code from lines 61 to 74"}
{"name": "test_time_indexed_window", "file": "ibis/backends/pyspark/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "spark_table"}, {"name": "ibis_windows"}, {"name": "spark_range"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_time_indexed_window", "code": "# Code from lines 40 to 53"}
{"name": "test_multiple_windows", "file": "ibis/backends/pyspark/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "t"}, {"name": "spark_table"}, {"name": "ibis_windows"}, {"name": "spark_range"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_multiple_windows", "code": "# Code from lines 66 to 93"}
{"name": "test_tumble_window_by_grouped_agg", "file": "ibis/backends/pyspark/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_streaming"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tumble_window_by_grouped_agg", "code": "# Code from lines 96 to 116"}
{"name": "test_tumble_window_by_ungrouped_agg", "file": "ibis/backends/pyspark/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con_streaming"}, {"name": "tmp_path"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tumble_window_by_ungrouped_agg", "code": "# Code from lines 119 to 136"}
{"name": "test_catalog_db_args", "file": "ibis/backends/pyspark/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail_version"], "is_test": true, "test_name": "test_catalog_db_args", "code": "# Code from lines 10 to 40"}
{"name": "test_list_databases", "file": "ibis/backends/pyspark/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_databases", "code": "# Code from lines 43 to 44"}
{"name": "test_create_table_no_catalog", "file": "ibis/backends/pyspark/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_no_catalog", "code": "# Code from lines 47 to 61"}
{"name": "test_create_table_with_partition_and_catalog", "file": "ibis/backends/pyspark/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail_version"], "is_test": true, "test_name": "test_create_table_with_partition_and_catalog", "code": "# Code from lines 65 to 129"}
{"name": "test_create_table_with_partition_no_catalog", "file": "ibis/backends/pyspark/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_with_partition_no_catalog", "code": "# Code from lines 132 to 189"}
{"name": "test_insert_bug", "file": "ibis/backends/pyspark/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_bug", "code": "# Code from lines 192 to 205"}
{"name": "test_files", "file": "ibis/backends/trino/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 134 to 135"}
{"name": "test_parse", "file": "ibis/backends/trino/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "trino_type"}, {"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse", "code": "# Code from lines 67 to 68"}
{"name": "test_table_properties", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_properties", "code": "# Code from lines 26 to 47"}
{"name": "test_hive_table_overwrite", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmp_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_hive_table_overwrite", "code": "# Code from lines 50 to 60"}
{"name": "test_list_catalogs", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_catalogs", "code": "# Code from lines 63 to 64"}
{"name": "test_list_databases", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_databases", "code": "# Code from lines 67 to 68"}
{"name": "test_con_source", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "source"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_con_source", "code": "# Code from lines 72 to 82"}
{"name": "test_cross_schema_table_access", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "catalog"}, {"name": "database"}, {"name": "table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cross_schema_table_access", "code": "# Code from lines 94 to 96"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "snapshot"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 99 to 106"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 109 to 131"}
{"name": "test_create_table_timestamp", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_timestamp", "code": "# Code from lines 134 to 148"}
{"name": "test_table_access_database_schema", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_access_database_schema", "code": "# Code from lines 151 to 159"}
{"name": "test_list_tables", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 162 to 177"}
{"name": "test_connect_uri", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_connect_uri", "code": "# Code from lines 180 to 188"}
{"name": "test_nested_madness", "file": "ibis/backends/trino/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_nested_madness", "code": "# Code from lines 191 to 225"}
{"name": "test_simple", "file": "ibis/backends/flink/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "datatype"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple", "code": "# Code from lines 37 to 38"}
{"name": "test_list_tables", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_list_tables", "code": "# Code from lines 30 to 32"}
{"name": "test_create_table_from_schema", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "awards_players_schema"}, {"name": "temp_table"}, {"name": "csv_source_configs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_from_schema", "code": "# Code from lines 35 to 44"}
{"name": "test_create_table", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "awards_players_schema"}, {"name": "temp_table"}, {"name": "csv_source_configs"}, {"name": "temp"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_table", "code": "# Code from lines 48 to 63"}
{"name": "test_create_table_in_memory", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": "Same as in ibis/backends/tests/test_client.py, with temp=True.", "signature": {"args": [{"name": "con"}, {"name": "obj"}, {"name": "table_name"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_table_in_memory", "code": "# Code from lines 112 to 123"}
{"name": "test_recreate_table_from_schema", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "awards_players_schema"}, {"name": "temp_table"}, {"name": "csv_source_configs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_recreate_table_from_schema", "code": "# Code from lines 126 to 148"}
{"name": "test_force_recreate_table_from_schema", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "awards_players_schema"}, {"name": "temp_table"}, {"name": "csv_source_configs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_force_recreate_table_from_schema", "code": "# Code from lines 151 to 171"}
{"name": "test_recreate_in_mem_table", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "schema"}, {"name": "table_name"}, {"name": "temp_table"}, {"name": "csv_source_configs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_recreate_in_mem_table", "code": "# Code from lines 178 to 214"}
{"name": "test_force_recreate_in_mem_table", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "schema_props"}, {"name": "temp_table"}, {"name": "csv_source_configs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_force_recreate_in_mem_table", "code": "# Code from lines 220 to 256"}
{"name": "test_create_source_table_with_watermark_and_primary_key", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}, {"name": "functional_alltypes_schema_w_nonnullable_columns"}, {"name": "csv_source_configs"}, {"name": "primary_key"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_source_table_with_watermark_and_primary_key", "code": "# Code from lines 290 to 310"}
{"name": "test_create_table_failure_with_invalid_primary_keys", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}, {"name": "functional_alltypes_schema_w_nonnullable_columns"}, {"name": "csv_source_configs"}, {"name": "primary_key"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_table_failure_with_invalid_primary_keys", "code": "# Code from lines 321 to 335"}
{"name": "test_create_view", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}, {"name": "awards_players_schema"}, {"name": "csv_source_configs"}, {"name": "temp_view"}, {"name": "temp"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_view", "code": "# Code from lines 346 to 398"}
{"name": "test_rename_table", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "awards_players_schema"}, {"name": "temp_table"}, {"name": "csv_source_configs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_rename_table", "code": "# Code from lines 401 to 420"}
{"name": "test_insert_values_into_table", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tempdir_sink_configs"}, {"name": "obj"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_insert_values_into_table", "code": "# Code from lines 455 to 471"}
{"name": "test_insert_simple_select", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tempdir_sink_configs"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_simple_select", "code": "# Code from lines 474 to 503"}
{"name": "test_read_csv", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "awards_players_schema"}, {"name": "csv_source_configs"}, {"name": "table_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_read_csv", "code": "# Code from lines 507 to 519"}
{"name": "test_read_parquet", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}, {"name": "tmp_path"}, {"name": "table_name"}, {"name": "functional_alltypes_schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_read_parquet", "code": "# Code from lines 523 to 537"}
{"name": "test_read_json", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data_dir"}, {"name": "tmp_path"}, {"name": "table_name"}, {"name": "functional_alltypes_schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_read_json", "code": "# Code from lines 541 to 563"}
{"name": "test_to_csv", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}, {"name": "table_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_to_csv", "code": "# Code from lines 569 to 577"}
{"name": "test_to_parquet", "file": "ibis/backends/flink/tests/test_ddl.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "tmp_path"}, {"name": "table_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_to_parquet", "code": "# Code from lines 583 to 591"}
{"name": "test_sum", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sum", "code": "# Code from lines 9 to 11"}
{"name": "test_count_star", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_count_star", "code": "# Code from lines 14 to 16"}
{"name": "test_timestamp_from_unix", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "unit"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_from_unix", "code": "# Code from lines 26 to 28"}
{"name": "test_complex_projections", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_projections", "code": "# Code from lines 31 to 38"}
{"name": "test_filter", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter", "code": "# Code from lines 41 to 45"}
{"name": "test_extract_fields", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "kind"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_extract_fields", "code": "# Code from lines 62 to 64"}
{"name": "test_complex_groupby_aggregation", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_groupby_aggregation", "code": "# Code from lines 67 to 73"}
{"name": "test_simple_filtered_agg", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_filtered_agg", "code": "# Code from lines 76 to 78"}
{"name": "test_complex_filtered_agg", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_filtered_agg", "code": "# Code from lines 81 to 88"}
{"name": "test_value_counts", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_value_counts", "code": "# Code from lines 91 to 93"}
{"name": "test_having", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "simple_table"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_having", "code": "# Code from lines 96 to 102"}
{"name": "test_timestamp_cast_to_seconds_respects_unit", "file": "ibis/backends/flink/tests/test_compiler.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_cast_to_seconds_respects_unit", "code": "# Code from lines 105 to 108"}
{"name": "test_create_memtable", "file": "ibis/backends/flink/tests/test_memtable.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data"}, {"name": "schema"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_memtable", "code": "# Code from lines 33 to 40"}
{"name": "test_create_named_struct_array_with_array_constructor", "file": "ibis/backends/flink/tests/test_memtable.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.notyet"], "is_test": true, "test_name": "test_create_named_struct_array_with_array_constructor", "code": "# Code from lines 48 to 49"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/flink/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 6 to 12"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/flink/tests/test_udf.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 15 to 24"}
{"name": "test_window_requires_order_by", "file": "ibis/backends/flink/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_window_requires_order_by", "code": "# Code from lines 13 to 16"}
{"name": "test_window_does_not_support_multiple_order_by", "file": "ibis/backends/flink/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_window_does_not_support_multiple_order_by", "code": "# Code from lines 20 to 23"}
{"name": "test_window_invalid_start_end", "file": "ibis/backends/flink/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "window"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_window_invalid_start_end", "code": "# Code from lines 51 to 54"}
{"name": "test_tumble_window_by_grouped_agg", "file": "ibis/backends/flink/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tumble_window_by_grouped_agg", "code": "# Code from lines 57 to 66"}
{"name": "test_tumble_window_by_ungrouped_agg", "file": "ibis/backends/flink/tests/test_window.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_tumble_window_by_ungrouped_agg", "code": "# Code from lines 69 to 78"}
{"name": "test_files", "file": "ibis/backends/clickhouse/tests/conftest.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "self"}], "returns": "Iterable[Path]", "has_kwargs": false, "has_varargs": false}, "decorators": ["property"], "is_test": true, "test_name": "test_files", "code": "# Code from lines 50 to 51"}
{"name": "test_column_types", "file": "ibis/backends/clickhouse/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_types", "code": "# Code from lines 18 to 26"}
{"name": "test_columns_types_with_additional_argument", "file": "ibis/backends/clickhouse/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_columns_types_with_additional_argument", "code": "# Code from lines 29 to 38"}
{"name": "test_array_discovery_clickhouse", "file": "ibis/backends/clickhouse/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_discovery_clickhouse", "code": "# Code from lines 41 to 53"}
{"name": "test_parse_type", "file": "ibis/backends/clickhouse/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ch_type"}, {"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_parse_type", "code": "# Code from lines 270 to 272"}
{"name": "test_type_roundtrip", "file": "ibis/backends/clickhouse/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_type_roundtrip", "code": "# Code from lines 306 to 309"}
{"name": "test_arrays_nullable", "file": "ibis/backends/clickhouse/tests/test_datatypes.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_arrays_nullable", "code": "# Code from lines 312 to 314"}
{"name": "test_reduction_where", "file": "ibis/backends/clickhouse/tests/test_aggregations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "reduction"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_reduction_where", "code": "# Code from lines 18 to 23"}
{"name": "test_std_var_pop", "file": "ibis/backends/clickhouse/tests/test_aggregations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "method"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_std_var_pop", "code": "# Code from lines 27 to 32"}
{"name": "test_reduction_invalid_where", "file": "ibis/backends/clickhouse/tests/test_aggregations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "reduction"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_reduction_invalid_where", "code": "# Code from lines 36 to 41"}
{"name": "test_aggregations", "file": "ibis/backends/clickhouse/tests/test_aggregations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "func"}, {"name": "pandas_func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_aggregations", "code": "# Code from lines 133 to 145"}
{"name": "test_boolean_reduction", "file": "ibis/backends/clickhouse/tests/test_aggregations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "op"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_boolean_reduction", "code": "# Code from lines 159 to 161"}
{"name": "test_anonymous_aggregate", "file": "ibis/backends/clickhouse/tests/test_aggregations.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_anonymous_aggregate", "code": "# Code from lines 164 to 169"}
{"name": "test_timestamp_literals", "file": "ibis/backends/clickhouse/tests/test_literals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_literals", "code": "# Code from lines 21 to 23"}
{"name": "test_fine_grained_timestamp_literals", "file": "ibis/backends/clickhouse/tests/test_literals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_fine_grained_timestamp_literals", "code": "# Code from lines 35 to 37"}
{"name": "test_string_numeric_boolean_literals", "file": "ibis/backends/clickhouse/tests/test_literals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_numeric_boolean_literals", "code": "# Code from lines 52 to 55"}
{"name": "test_array_params", "file": "ibis/backends/clickhouse/tests/test_literals.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_params", "code": "# Code from lines 58 to 63"}
{"name": "test_timestamp_extract_field", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_extract_field", "code": "# Code from lines 38 to 48"}
{"name": "test_isin_notin_in_select", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isin_notin_in_select", "code": "# Code from lines 51 to 57"}
{"name": "test_head", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_head", "code": "# Code from lines 60 to 63"}
{"name": "test_limit_offset", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_offset", "code": "# Code from lines 66 to 74"}
{"name": "test_subquery", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery", "code": "# Code from lines 77 to 95"}
{"name": "test_simple_scalar_aggregates", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_scalar_aggregates", "code": "# Code from lines 98 to 103"}
{"name": "test_table_column_unbox", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_table_column_unbox", "code": "# Code from lines 152 to 156"}
{"name": "test_complex_array_expr_projection", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_array_expr_projection", "code": "# Code from lines 159 to 166"}
{"name": "test_scalar_exprs_no_table_refs", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "expr"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_scalar_exprs_no_table_refs", "code": "# Code from lines 173 to 174"}
{"name": "test_isnull_case_expr_rewrite_failure", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_isnull_case_expr_rewrite_failure", "code": "# Code from lines 177 to 181"}
{"name": "test_physical_table_reference_translate", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_physical_table_reference_translate", "code": "# Code from lines 184 to 187"}
{"name": "test_non_equijoin", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_non_equijoin", "code": "# Code from lines 190 to 195"}
{"name": "test_simple_joins", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "batting"}, {"name": "awards_players"}, {"name": "join_type"}, {"name": "left_key"}, {"name": "right_key"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_simple_joins", "code": "# Code from lines 205 to 211"}
{"name": "test_self_reference_simple", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_self_reference_simple", "code": "# Code from lines 214 to 217"}
{"name": "test_join_self_reference", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_self_reference", "code": "# Code from lines 220 to 225"}
{"name": "test_where_simple_comparisons", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_simple_comparisons", "code": "# Code from lines 228 to 232"}
{"name": "test_where_with_between", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_with_between", "code": "# Code from lines 235 to 240"}
{"name": "test_ifelse_use_if", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_ifelse_use_if", "code": "# Code from lines 243 to 246"}
{"name": "test_filter_predicates", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "diamonds"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_filter_predicates", "code": "# Code from lines 249 to 260"}
{"name": "test_where_with_timestamp", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_where_with_timestamp", "code": "# Code from lines 263 to 269"}
{"name": "test_timestamp_scalar_in_filter", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_scalar_in_filter", "code": "# Code from lines 272 to 282"}
{"name": "test_named_from_filter_groupby", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_named_from_filter_groupby", "code": "# Code from lines 285 to 293"}
{"name": "test_join_with_external_table_errors", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_external_table_errors", "code": "# Code from lines 296 to 310"}
{"name": "test_join_with_external_table", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_join_with_external_table", "code": "# Code from lines 313 to 335"}
{"name": "test_asof_join", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "time_left"}, {"name": "time_right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_asof_join", "code": "# Code from lines 338 to 352"}
{"name": "test_count_name", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_count_name", "code": "# Code from lines 355 to 361"}
{"name": "test_array_join_in_subquery", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_join_in_subquery", "code": "# Code from lines 364 to 369"}
{"name": "test_complex_join", "file": "ibis/backends/clickhouse/tests/test_select.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_complex_join", "code": "# Code from lines 372 to 377"}
{"name": "test_string_temporal_compare", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "left"}, {"name": "right"}, {"name": "type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_temporal_compare", "code": "# Code from lines 46 to 52"}
{"name": "test_binary_infix_operators", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "op"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_binary_infix_operators", "code": "# Code from lines 59 to 64"}
{"name": "test_binary_infix_parenthesization", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "op"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_binary_infix_parenthesization", "code": "# Code from lines 81 to 88"}
{"name": "test_between", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_between", "code": "# Code from lines 91 to 94"}
{"name": "test_string_temporal_compare_between_dates", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_temporal_compare_between_dates", "code": "# Code from lines 104 to 107"}
{"name": "test_string_temporal_compare_between_datetimes", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "left"}, {"name": "right"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_temporal_compare_between_datetimes", "code": "# Code from lines 123 to 126"}
{"name": "test_field_in_literals", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "df"}, {"name": "container"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_field_in_literals", "code": "# Code from lines 130 to 142"}
{"name": "test_negate", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "column"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_negate", "code": "# Code from lines 146 to 149"}
{"name": "test_negate_non_boolean", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "field"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_negate_non_boolean", "code": "# Code from lines 165 to 170"}
{"name": "test_negate_literal", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_negate_literal", "code": "# Code from lines 173 to 175"}
{"name": "test_ifelse", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}, {"name": "op"}, {"name": "pandas_op"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ifelse", "code": "# Code from lines 193 to 199"}
{"name": "test_simple_case", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_simple_case", "code": "# Code from lines 202 to 207"}
{"name": "test_search_case", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_search_case", "code": "# Code from lines 210 to 219"}
{"name": "test_array_index", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "arr"}, {"name": "gen_idx"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_index", "code": "# Code from lines 239 to 244"}
{"name": "test_array_concat", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "arrays"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_concat", "code": "# Code from lines 257 to 263"}
{"name": "test_array_repeat", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "arr"}, {"name": "times"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_repeat", "code": "# Code from lines 270 to 273"}
{"name": "test_array_slice", "file": "ibis/backends/clickhouse/tests/test_operators.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "arr"}, {"name": "start"}, {"name": "stop"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_array_slice", "code": "# Code from lines 279 to 281"}
{"name": "test_cast_double_col", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "to_type"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cast_double_col", "code": "# Code from lines 22 to 24"}
{"name": "test_cast_string_col", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "to_type"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_cast_string_col", "code": "# Code from lines 39 to 41"}
{"name": "test_noop_cast", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "column"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_noop_cast", "code": "# Code from lines 62 to 66"}
{"name": "test_timestamp_cast", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_cast", "code": "# Code from lines 69 to 78"}
{"name": "test_timestamp_now", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_now", "code": "# Code from lines 81 to 83"}
{"name": "test_timestamp_truncate", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "unit"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_truncate", "code": "# Code from lines 87 to 90"}
{"name": "test_nullif_zero", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_nullif_zero", "code": "# Code from lines 94 to 99"}
{"name": "test_isnull_notnull", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_isnull_notnull", "code": "# Code from lines 111 to 112"}
{"name": "test_coalesce", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_coalesce", "code": "# Code from lines 123 to 124"}
{"name": "test_fill_null_nullif", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_fill_null_nullif", "code": "# Code from lines 136 to 141"}
{"name": "test_typeof", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_typeof", "code": "# Code from lines 165 to 166"}
{"name": "test_tuple_string_length", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_tuple_string_length", "code": "# Code from lines 170 to 171"}
{"name": "test_string_substring", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_substring", "code": "# Code from lines 182 to 184"}
{"name": "test_string_column_substring", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_column_substring", "code": "# Code from lines 187 to 194"}
{"name": "test_string_reverse", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_reverse", "code": "# Code from lines 197 to 198"}
{"name": "test_string_upper", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_upper", "code": "# Code from lines 201 to 202"}
{"name": "test_string_lower", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_lower", "code": "# Code from lines 205 to 206"}
{"name": "test_string_length", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_length", "code": "# Code from lines 209 to 210"}
{"name": "test_string_contains", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "op"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_contains", "code": "# Code from lines 223 to 224"}
{"name": "test_re_replace", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_re_replace", "code": "# Code from lines 227 to 232"}
{"name": "test_find_in_set", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "value"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_find_in_set", "code": "# Code from lines 239 to 242"}
{"name": "test_string_column_find_in_set", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_column_find_in_set", "code": "# Code from lines 245 to 251"}
{"name": "test_string_find_like", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_string_find_like", "code": "# Code from lines 269 to 270"}
{"name": "test_string_column_like", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_column_like", "code": "# Code from lines 273 to 280"}
{"name": "test_string_column_find", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_string_column_find", "code": "# Code from lines 283 to 292"}
{"name": "test_translate_math_functions", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "call"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_translate_math_functions", "code": "# Code from lines 311 to 314"}
{"name": "test_math_functions", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_math_functions", "code": "# Code from lines 350 to 351"}
{"name": "test_greatest_least", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_greatest_least", "code": "# Code from lines 354 to 369"}
{"name": "test_regexp", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_regexp", "code": "# Code from lines 380 to 381"}
{"name": "test_regexp_extract", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "expr"}, {"name": "expected"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_regexp_extract", "code": "# Code from lines 395 to 396"}
{"name": "test_column_regexp_extract", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_regexp_extract", "code": "# Code from lines 399 to 402"}
{"name": "test_column_regexp_replace", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_column_regexp_replace", "code": "# Code from lines 405 to 408"}
{"name": "test_numeric_builtins_work", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_numeric_builtins_work", "code": "# Code from lines 411 to 415"}
{"name": "test_null_column", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_null_column", "code": "# Code from lines 418 to 424"}
{"name": "test_literal_none_to_nullable_column", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_literal_none_to_nullable_column", "code": "# Code from lines 427 to 436"}
{"name": "test_timestamp_from_integer", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_from_integer", "code": "# Code from lines 439 to 443"}
{"name": "test_count_distinct_with_filter", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_count_distinct_with_filter", "code": "# Code from lines 446 to 451"}
{"name": "test_group_concat", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "sep"}, {"name": "where_case"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_group_concat", "code": "# Code from lines 462 to 465"}
{"name": "test_hash", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "assert_sql"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_hash", "code": "# Code from lines 468 to 470"}
{"name": "test_udf_in_array_map", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf_in_array_map", "code": "# Code from lines 473 to 485"}
{"name": "test_udf_in_array_filter", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_udf_in_array_filter", "code": "# Code from lines 488 to 494"}
{"name": "test_timestamp_to_start_of_week", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_timestamp_to_start_of_week", "code": "# Code from lines 497 to 502"}
{"name": "test_date_to_start_of_day", "file": "ibis/backends/clickhouse/tests/test_functions.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_date_to_start_of_day", "code": "# Code from lines 505 to 510"}
{"name": "test_connection", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_connection", "code": "# Code from lines 30 to 32"}
{"name": "test_run_sql", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_run_sql", "code": "# Code from lines 35 to 45"}
{"name": "test_get_schema", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_schema", "code": "# Code from lines 48 to 51"}
{"name": "test_get_schema_failure", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "mocker"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_get_schema_failure", "code": "# Code from lines 54 to 58"}
{"name": "test_result_as_dataframe", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_result_as_dataframe", "code": "# Code from lines 61 to 69"}
{"name": "test_array_default_limit", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_default_limit", "code": "# Code from lines 72 to 74"}
{"name": "test_limit_overrides_expr", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_overrides_expr", "code": "# Code from lines 77 to 79"}
{"name": "test_limit_equals_none_no_limit", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_limit_equals_none_no_limit", "code": "# Code from lines 82 to 85"}
{"name": "test_verbose_log_queries", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_verbose_log_queries", "code": "# Code from lines 88 to 100"}
{"name": "test_sql_query_limits_big", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_query_limits_big", "code": "# Code from lines 103 to 114"}
{"name": "test_sql_query_limits_small", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_query_limits_small", "code": "# Code from lines 117 to 128"}
{"name": "test_sql_query_limits_none", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}, {"name": "monkeypatch"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_sql_query_limits_none", "code": "# Code from lines 131 to 139"}
{"name": "test_embedded_identifier_quoting", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "alltypes"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_embedded_identifier_quoting", "code": "# Code from lines 142 to 146"}
{"name": "test_insert", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temporary_alltypes"}, {"name": "df"}, {"name": "transform"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_insert", "code": "# Code from lines 161 to 169"}
{"name": "test_insert_with_less_columns", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temporary_alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_with_less_columns", "code": "# Code from lines 172 to 178"}
{"name": "test_insert_with_more_columns", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temporary_alltypes"}, {"name": "df"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_insert_with_more_columns", "code": "# Code from lines 181 to 187"}
{"name": "test_get_schema_using_query", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "query"}, {"name": "expected_schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_get_schema_using_query", "code": "# Code from lines 208 to 210"}
{"name": "test_list_tables_database", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables_database", "code": "# Code from lines 213 to 219"}
{"name": "test_list_tables_empty_database", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "tmpcon"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_list_tables_empty_database", "code": "# Code from lines 236 to 237"}
{"name": "test_create_table_no_data", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_table_no_data", "code": "# Code from lines 241 to 244"}
{"name": "test_create_table_data", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "data"}, {"name": "engine"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_create_table_data", "code": "# Code from lines 261 to 264"}
{"name": "test_create_table_with_properties", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_with_properties", "code": "# Code from lines 267 to 279"}
{"name": "test_truncate_table", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "engine"}, {"name": "temp_table"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_truncate_table", "code": "# Code from lines 297 to 301"}
{"name": "test_builtin_scalar_udf", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_scalar_udf", "code": "# Code from lines 324 to 328"}
{"name": "test_builtin_agg_udf", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "func"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_builtin_agg_udf", "code": "# Code from lines 340 to 351"}
{"name": "test_create_table_no_syntax_error", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_create_table_no_syntax_error", "code": "# Code from lines 354 to 375"}
{"name": "test_password_with_bracket", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_password_with_bracket", "code": "# Code from lines 378 to 387"}
{"name": "test_from_url", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_from_url", "code": "# Code from lines 390 to 393"}
{"name": "test_from_url_with_kwargs", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_from_url_with_kwargs", "code": "# Code from lines 396 to 404"}
{"name": "test_invalid_port", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_port", "code": "# Code from lines 407 to 411"}
{"name": "test_subquery_with_join", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_subquery_with_join", "code": "# Code from lines 414 to 440"}
{"name": "test_alias_column_ref", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_alias_column_ref", "code": "# Code from lines 443 to 456"}
{"name": "test_query_cache", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}, {"name": "method_name"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_query_cache", "code": "# Code from lines 460 to 473"}
{"name": "test_invalid_catalog_argument", "file": "ibis/backends/clickhouse/tests/test_client.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "con"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_invalid_catalog_argument", "code": "# Code from lines 476 to 480"}
{"name": "test_to_from_ibis_type", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_dtype"}, {"name": "polars_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_to_from_ibis_type", "code": "# Code from lines 67 to 70"}
{"name": "test_from_ibis_type_seconds", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_dtype"}, {"name": "polars_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_from_ibis_type_seconds", "code": "# Code from lines 87 to 89"}
{"name": "test_decimal", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_decimal", "code": "# Code from lines 92 to 100"}
{"name": "test_enum_categorical", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_enum_categorical", "code": "# Code from lines 103 to 105"}
{"name": "test_interval_unsupported_unit", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_interval_unsupported_unit", "code": "# Code from lines 108 to 111"}
{"name": "test_map_unsupported", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_map_unsupported", "code": "# Code from lines 114 to 117"}
{"name": "test_schema_to_and_from_ibis", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_to_and_from_ibis", "code": "# Code from lines 120 to 128"}
{"name": "test_infer_scalar", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_infer_scalar", "code": "# Code from lines 131 to 135"}
{"name": "test_infer_column", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_infer_column", "code": "# Code from lines 138 to 140"}
{"name": "test_infer_table", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_infer_table", "code": "# Code from lines 143 to 147"}
{"name": "test_convert_scalar", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_convert_scalar", "code": "# Code from lines 150 to 154"}
{"name": "test_convert_column", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_convert_column", "code": "# Code from lines 157 to 162"}
{"name": "test_convert_table", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_convert_table", "code": "# Code from lines 165 to 173"}
{"name": "test_array_type", "file": "ibis/formats/tests/test_polars.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_array_type", "code": "# Code from lines 176 to 177"}
{"name": "test_roundtripable_types", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "arrow_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_roundtripable_types", "code": "# Code from lines 54 to 55"}
{"name": "test_non_roundtripable_types", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "arrow_type"}, {"name": "ibis_type"}, {"name": "restored_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_non_roundtripable_types", "code": "# Code from lines 83 to 84"}
{"name": "test_timestamp_no_scale", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "timezone"}, {"name": "nullable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_timestamp_no_scale", "code": "# Code from lines 89 to 91"}
{"name": "test_month_day_nano_type_unsupported", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_month_day_nano_type_unsupported", "code": "# Code from lines 94 to 96"}
{"name": "test_dtype_from_nullable_map_type", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value_nullable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_nullable_map_type", "code": "# Code from lines 100 to 114"}
{"name": "test_dtype_from_nullable_list_type", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value_nullable"}, {"name": "list_nullable"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize", "pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_nullable_list_type", "code": "# Code from lines 119 to 128"}
{"name": "test_dtype_from_dictionary_type", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "value_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_dictionary_type", "code": "# Code from lines 132 to 136"}
{"name": "test_ibis_exclusive_types", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_type"}, {"name": "arrow_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_ibis_exclusive_types", "code": "# Code from lines 150 to 151"}
{"name": "test_schema_from_pyarrow_checks_duplicate_column_names", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_pyarrow_checks_duplicate_column_names", "code": "# Code from lines 154 to 162"}
{"name": "test_schema_roundtrip", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pyarrow_schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_schema_roundtrip", "code": "# Code from lines 166 to 172"}
{"name": "test_unknown_dtype_gets_converted_to_string", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_unknown_dtype_gets_converted_to_string", "code": "# Code from lines 175 to 176"}
{"name": "test_geo_gets_converted_to_geoarrow", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_geo_gets_converted_to_geoarrow", "code": "# Code from lines 192 to 197"}
{"name": "test_geoarrow_gets_converted_to_geo", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geoarrow_gets_converted_to_geo", "code": "# Code from lines 200 to 217"}
{"name": "test_geoarrow_crs_gets_converted_to_geo", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_geoarrow_crs_gets_converted_to_geo", "code": "# Code from lines 220 to 245"}
{"name": "test_schema_infer_pyarrow_table", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_infer_pyarrow_table", "code": "# Code from lines 248 to 258"}
{"name": "test_schema_from_to_pyarrow_schema", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_to_pyarrow_schema", "code": "# Code from lines 261 to 273"}
{"name": "test_schema___arrow_c_schema__", "file": "ibis/formats/tests/test_pyarrow.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.xfail"], "is_test": true, "test_name": "test_schema___arrow_c_schema__", "code": "# Code from lines 281 to 284"}
{"name": "test_dtype_to_pandas", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pandas_type"}, {"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_to_pandas", "code": "# Code from lines 47 to 48"}
{"name": "test_dtype_from_pandas_arrow_dtype", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pandas_type"}, {"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_pandas_arrow_dtype", "code": "# Code from lines 75 to 77"}
{"name": "test_dtype_from_pandas_arrow_string_dtype", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dtype_from_pandas_arrow_string_dtype", "code": "# Code from lines 80 to 82"}
{"name": "test_dtype_from_pandas_arrow_list_dtype", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dtype_from_pandas_arrow_list_dtype", "code": "# Code from lines 85 to 87"}
{"name": "test_dtype_from_nullable_extension_dtypes", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "pandas_type"}, {"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_nullable_extension_dtypes", "code": "# Code from lines 114 to 115"}
{"name": "test_schema_to_pandas", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_to_pandas", "code": "# Code from lines 118 to 134"}
{"name": "test_schema_from_pandas", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_pandas", "code": "# Code from lines 137 to 153"}
{"name": "test_schema_from_dataframe", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_dataframe", "code": "# Code from lines 156 to 294"}
{"name": "test_schema_from_dataframe_with_array_column", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_from_dataframe_with_array_column", "code": "# Code from lines 297 to 328"}
{"name": "test_schema_from_various_dataframes", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "col_data"}, {"name": "schema_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_schema_from_various_dataframes", "code": "# Code from lines 420 to 425"}
{"name": "test_convert_dataframe_with_timezone", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_convert_dataframe_with_timezone", "code": "# Code from lines 428 to 435"}
{"name": "test_schema_doesnt_match_input_columns", "file": "ibis/formats/tests/test_pandas.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_schema_doesnt_match_input_columns", "code": "# Code from lines 438 to 442"}
{"name": "test_roundtripable_types", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numpy_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_roundtripable_types", "code": "# Code from lines 50 to 52"}
{"name": "test_non_roundtripable_str_type", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numpy_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_non_roundtripable_str_type", "code": "# Code from lines 56 to 62"}
{"name": "test_non_roundtripable_bytes_type", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numpy_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_non_roundtripable_bytes_type", "code": "# Code from lines 66 to 72"}
{"name": "test_variadic_to_numpy", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_variadic_to_numpy", "code": "# Code from lines 81 to 82"}
{"name": "test_timestamp_to_numpy", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_timestamp_to_numpy", "code": "# Code from lines 86 to 87"}
{"name": "test_date_to_numpy", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_date_to_numpy", "code": "# Code from lines 91 to 92"}
{"name": "test_time_to_numpy", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_type"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_time_to_numpy", "code": "# Code from lines 96 to 97"}
{"name": "test_schema_to_numpy", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "ibis_schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_schema_to_numpy", "code": "# Code from lines 101 to 106"}
{"name": "test_schema_from_numpy", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numpy_schema"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["h.given"], "is_test": true, "test_name": "test_schema_from_numpy", "code": "# Code from lines 110 to 115"}
{"name": "test_dtype_from_numpy", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [{"name": "numpy_dtype"}, {"name": "ibis_dtype"}], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": ["pytest.mark.parametrize"], "is_test": true, "test_name": "test_dtype_from_numpy", "code": "# Code from lines 138 to 139"}
{"name": "test_dtype_from_numpy_dtype_timedelta", "file": "ibis/formats/tests/test_numpy.py", "type": "test", "docstring": null, "signature": {"args": [], "returns": null, "has_kwargs": false, "has_varargs": false}, "decorators": [], "is_test": true, "test_name": "test_dtype_from_numpy_dtype_timedelta", "code": "# Code from lines 142 to 146"}
