name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy types-PyYAML

      - name: Run Ruff
        run: ruff check src/ tests/
        continue-on-error: true

      - name: Check Black formatting
        run: black --check src/ tests/
        continue-on-error: true

      - name: Run mypy
        run: mypy src/
        continue-on-error: true

  test:
    name: Test (Python ${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          PYTHONPATH=. python -m pytest tests/ -v \
            --cov=src \
            --cov-report=xml \
            --cov-report=term \
            --tb=short

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          verbose: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install pip-audit
        run: python -m pip install pip-audit

      - name: Run security scan
        run: pip-audit --requirement requirements.txt
        continue-on-error: true

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [lint, test, security]
    if: always()
    steps:
      - name: Check results
        run: |
          echo "Lint status: ${{ needs.lint.result }}"
          echo "Test status: ${{ needs.test.result }}"
          echo "Security status: ${{ needs.security.result }}"
